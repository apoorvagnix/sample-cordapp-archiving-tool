[INFO ] 2023-12-12T05:25:58,081Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T05:25:58,610Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:26:01,987Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T05:26:03,347Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T05:26:03,403Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T05:26:03,406Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:26:04,114Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:04,138Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T05:26:04,766Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:04,778Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:04,778Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T05:26:04,969Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:04,994Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:26:05,828Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T05:26:06,618Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:26:06,631Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T05:26:06,714Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:26:06,726Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T05:26:06,726Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:26:08,925Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:08,926Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T05:26:09,291Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:09,291Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T05:26:09,375Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:09,375Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T05:26:09,637Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:26:09,637Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:09,804Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:09,841Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:09,842Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:09,842Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:09,855Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:09,868Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:09,868Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:09,868Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:09,868Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:09,917Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:09,930Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:09,930Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,019Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:10,043Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,043Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:10,043Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,043Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:26:10,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,178Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:26:10,201Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,802Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:26:10,803Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,828Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:10,828Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:26:10,873Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:10,876Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:10,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:10,900Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T05:26:10,997Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:10,997Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T05:26:11,009Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,020Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,020Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T05:26:11,033Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,033Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T05:26:11,046Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,058Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,059Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:26:11,059Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,071Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:11,083Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,083Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:11,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,084Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:26:11,133Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,133Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:26:11,133Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,133Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:26:11,133Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,144Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:26:11,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:26:11,144Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T05:26:11,157Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,157Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T05:26:11,169Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,169Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T05:26:11,169Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,169Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,169Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T05:26:11,241Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,253Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:26:11,253Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,265Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T05:26:11,278Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T05:26:11,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:26:11,302Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:11,302Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T05:26:11,302Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:26:11,356Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:26:11,409Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T05:26:11,409Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:26:11,463Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T05:26:22,569Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:26:22,581Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:22,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:23,023Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:25,522Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:25,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:25,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:25,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:25,951Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:25,957Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:26,158Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:26,160Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:26,162Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:26,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:25:55.278Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:34,838Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:35,017Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:35,041Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:41,341Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:42,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:42,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:42,814Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:43,250Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756) {}
[INFO ] 2023-12-12T05:26:43,446Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:43,491Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:43,496Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:43,636Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:43,638Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:44,137Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:44,153Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:26:45,756Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756) {}
[INFO ] 2023-12-12T05:26:45,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:45,777Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:45,782Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:45,787Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:45,789Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:45,855Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:26:45,861Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:45,872Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:45,959Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:46,104Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:46,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:46,113Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:46,114Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:46,206Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:46,207Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:46,247Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:46,247Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:46,247Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:46,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:25:55.278Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:47,612Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:47,618Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:47,618Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:48,239Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:48,264Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:48,283Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:48,284Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:48,335Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264) {}
[INFO ] 2023-12-12T05:26:48,356Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:48,358Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:48,358Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:48,400Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:48,400Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:48,470Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:48,534Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264) {}
[INFO ] 2023-12-12T05:26:48,536Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:48,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:48,549Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:48,570Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:48,570Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:48,590Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:48,590Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:48,591Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:48,591Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:48,610Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:26:48,613Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:48,618Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:48,681Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052555.424-9631B1AC4957D7A8/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:48,765Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:48,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:48,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:48,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:48,871Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:48,872Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:48,884Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:48,884Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:48,884Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:48,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:25:55.278Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:49,741Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:49,747Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:49,748Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:50,230Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:50,258Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:50,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,266Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:50,291Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258) {}
[INFO ] 2023-12-12T05:26:50,316Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:50,319Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:50,319Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:50,376Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,376Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:50,467Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:50,518Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258) {}
[INFO ] 2023-12-12T05:26:50,519Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:50,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358802756), owningKey=DLGt92oTprZpt6XxbRxDpi9BVeEfUo9yJb8gkeAha5Z1ii {}
[INFO ] 2023-12-12T05:26:50,525Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:50,552Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,552Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:50,600Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358808264), owningKey=DLHa4HTA2GxRGVyTyej1h1Cuf8JYi2rcRv81v5Gku5uZWb {}
[INFO ] 2023-12-12T05:26:50,600Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:50,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,616Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:50,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:50,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358810258), owningKey=DLGHB51CsidgZuAda8XgoHfus2obQbiY2o5qz8E6NgaePQ {}
[INFO ] 2023-12-12T05:26:50,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:26:50,653Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:26:50,653Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:26:50,664Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:26:50,664Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:26:51,353Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307}
[WARN ] 2023-12-12T05:26:51,354Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307}
[INFO ] 2023-12-12T05:26:52,830Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:52,958Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,245Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,245Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,391Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,474Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,511Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,520Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,546Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=0fa23104-dfe8-42c0-9e35-690bbc0145af, invocation_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, invocation_timestamp=2023-12-12T05:26:52.700Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd0ab8ce-4623-4bbf-8edd-22f1685c7c17, session_timestamp=2023-12-12T05:26:52.700Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,603Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,603Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ee29ff37-fce0-4287-a735-6be30a082321, invocation_id=16668d47-0f47-4e6a-976b-38569902ea12, invocation_timestamp=2023-12-12T05:26:50.770Z, origin=Only For Testing, session_id=16668d47-0f47-4e6a-976b-38569902ea12, session_timestamp=2023-12-12T05:26:50.770Z, thread-id=307, tx_id=0D60EE7546836BF9EE82A6A30F921A54F546068655C2371F81DD738992ED4CBA}
[INFO ] 2023-12-12T05:26:53,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:53,653Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T05:26:53,711Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:53,711Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:53,719Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:53,723Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T05:26:53,757Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:53,757Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:53,760Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:53,765Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T05:26:53,805Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:53,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:54,151Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:26:54,156Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:54,158Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:54,254Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:54,336Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:54,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:54,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:54,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:54,367Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:54,368Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:54,383Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:54,385Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:54,385Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:54,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:53.818Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:55,435Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:55,440Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:55,440Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:55,961Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:26:55,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:55,977Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:55,977Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:56,046Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973) {}
[INFO ] 2023-12-12T05:26:56,068Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:56,069Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:56,069Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:56,113Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:56,113Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:56,178Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:56,184Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:26:56,217Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973) {}
[INFO ] 2023-12-12T05:26:56,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:56,217Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:56,217Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:56,219Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:56,219Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:56,238Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:26:56,238Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:56,240Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:56,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:56,357Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:56,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:56,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:56,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:56,459Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:56,462Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:56,489Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:56,489Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:56,489Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:56,500Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:53.818Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:57,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:57,122Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:57,122Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:57,541Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:57,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:57,563Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:57,563Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:57,586Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557) {}
[INFO ] 2023-12-12T05:26:57,598Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:57,598Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:57,598Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:57,628Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:57,628Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:57,686Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:57,728Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557) {}
[INFO ] 2023-12-12T05:26:57,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:57,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:57,740Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:57,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:57,754Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:57,764Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:57,764Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:57,764Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:57,764Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:57,784Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:26:57,786Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:26:57,790Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:26:57,837Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052653.818-89CA5A86B7128171/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:26:57,928Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:57,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:26:57,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:26:57,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:26:58,005Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:26:58,006Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi, alias: identity-private-key {}
[INFO ] 2023-12-12T05:26:58,024Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:26:58,024Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:26:58,024Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:26:58,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:53.818Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:26:58,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:26:58,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:58,814Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:59,177Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:26:59,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:26:59,200Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,200Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:59,227Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193) {}
[INFO ] 2023-12-12T05:26:59,238Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:26:59,239Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:26:59,239Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:26:59,272Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,272Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:59,327Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:26:59,356Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193) {}
[INFO ] 2023-12-12T05:26:59,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:26:59,361Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358815973), owningKey=DL6k5X347iySrPBdByVAx4PX4uZr7LiEUr77eS3Ntc14hC {}
[INFO ] 2023-12-12T05:26:59,361Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:26:59,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:59,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358817557), owningKey=DLGrsHZwk3XXq8VgQY65wvVRDa9GfCREbFJZgTWWyYuo4q {}
[INFO ] 2023-12-12T05:26:59,401Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:59,422Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,422Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:26:59,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,435Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:26:59,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358819193), owningKey=DL7dqz7dvq2MDh6tBGyQL5stM32TKwhAgvGnkgU83j6Fxi {}
[INFO ] 2023-12-12T05:26:59,435Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:26:59,436Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:26:59,436Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:26:59,436Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:26:59,436Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T05:26:59,607Z [Mock network] internal.Verifier. - Error validating transaction 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T05:26:59,619Z [Mock network] internal.Verifier. - Error validating transaction 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T05:26:59,619Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
[INFO ] 2023-12-12T05:26:59,661Z [Mock network] statemachine.StaffedFlowHospital. - Flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Invocation, sessionId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=6C37859D9316DEDAE1B623490DF6936B806565DC0D4536D1E765D26D02A38EE0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F3B6871557EA8B616978A86442CFF5F29C4A73212DC26E0082C47E9B6C3FAD01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@7b3151a1, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=aacfd6de-7935-4f92-9dea-5e91aef08cf4, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@64ad6d4e[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
[INFO ] 2023-12-12T05:26:59,665Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T05:26:59,672Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:26:59,709Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] errored, dumping all transitions:

 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.457Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7d96cec9-f8fa-47ca-a70c-38106a8eb139], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Invocation, sessionId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=6C37859D9316DEDAE1B623490DF6936B806565DC0D4536D1E765D26D02A38EE0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F3B6871557EA8B616978A86442CFF5F29C4A73212DC26E0082C47E9B6C3FAD01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d])
    SignalFlowHasStarted(flowId=[7d96cec9-f8fa-47ca-a70c-38106a8eb139])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.685Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2156196783254419984, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T05:26:59.443Z
    2023-12-12T05:26:59.644Z
isFlowResumed: 
    true
    false


 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.694Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.696Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T05:26:59.644Z
    2023-12-12T05:26:59.696Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
[WARN ] 2023-12-12T05:26:59,710Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:26:59,711Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:26:59,766Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] errored, dumping all transitions:

 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.457Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7d96cec9-f8fa-47ca-a70c-38106a8eb139], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Invocation, sessionId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=6C37859D9316DEDAE1B623490DF6936B806565DC0D4536D1E765D26D02A38EE0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F3B6871557EA8B616978A86442CFF5F29C4A73212DC26E0082C47E9B6C3FAD01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d])
    SignalFlowHasStarted(flowId=[7d96cec9-f8fa-47ca-a70c-38106a8eb139])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3e62ba6d]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.685Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2156196783254419984, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T05:26:59.443Z
    2023-12-12T05:26:59.644Z
isFlowResumed: 
    true
    false


 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.694Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.696Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T05:26:59.644Z
    2023-12-12T05:26:59.696Z


 --- Transition of flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] ---
  Timestamp: 2023-12-12T05:26:59.760Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77, errorId=2156196783254419984)], sessions=[], senderUUID=aacfd6de-7935-4f92-9dea-5e91aef08cf4)
    CreateTransaction
    RemoveCheckpoint(id=[7d96cec9-f8fa-47ca-a70c-38106a8eb139], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=7d96cec9-f8fa-47ca-a70c-38106a8eb139)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[7d96cec9-f8fa-47ca-a70c-38106a8eb139], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2156196783254419984, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Invocation, sessionId=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, timestamp: 2023-12-12T05:26:59.438Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=6C37859D9316DEDAE1B623490DF6936B806565DC0D4536D1E765D26D02A38EE0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@58e7e06c, errorState=Errored(errors=[FlowError(errorId=2156196783254419984, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@7b3151a1, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=aacfd6de-7935-4f92-9dea-5e91aef08cf4, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@64ad6d4e[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=F3B6871557EA8B616978A86442CFF5F29C4A73212DC26E0082C47E9B6C3FAD01)
    net.corda.node.services.statemachine.FlowState$Finished@58e7e06c
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2023-12-12T05:26:59.696Z
    2023-12-12T05:26:59.710Z
isRemoved: 
    false
    true
numberOfCommits: 
    0
    2
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
[WARN ] 2023-12-12T05:26:59,767Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7d96cec9-f8fa-47ca-a70c-38106a8eb139] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=7d96cec9-f8fa-47ca-a70c-38106a8eb139, invocation_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, invocation_timestamp=2023-12-12T05:26:59.438Z, origin=Only For Testing, session_id=1c8dc631-a6c9-4678-9e6d-dbe82c5628b1, session_timestamp=2023-12-12T05:26:59.438Z, thread-id=589}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 377F1A9B83F9E7F10DE75ED33D2C2F9D51078C5E0DA834779EB7C418A609CB77
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T05:26:59,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:59,812Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T05:26:59,843Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:59,843Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:59,849Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:59,852Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T05:26:59,871Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:59,871Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:26:59,874Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:26:59,877Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T05:26:59,895Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:26:59,895Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:00,112Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:27:00,114Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:00,115Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:00,150Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:00,227Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:00,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:00,232Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:00,232Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:00,253Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:00,255Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:00,276Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:00,276Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:00,276Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:00,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:59.902Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:01,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:01,060Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:01,060Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:01,474Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:01,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:01,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:01,487Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:01,546Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482) {}
[INFO ] 2023-12-12T05:27:01,565Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:01,566Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:01,566Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:01,602Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:01,602Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:01,656Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:01,662Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:27:01,701Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482) {}
[INFO ] 2023-12-12T05:27:01,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:01,701Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:01,702Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:01,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:01,702Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:01,725Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:27:01,726Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:01,727Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:01,775Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:01,861Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:01,867Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:01,870Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:01,870Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:01,957Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:01,958Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:01,987Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:01,987Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:01,987Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:01,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:59.902Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:02,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:02,643Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:02,644Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:03,105Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:03,129Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:03,136Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:03,136Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:03,173Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129) {}
[INFO ] 2023-12-12T05:27:03,197Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:03,200Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:03,200Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:03,237Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:03,237Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:03,308Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:03,340Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129) {}
[INFO ] 2023-12-12T05:27:03,341Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:03,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:03,344Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:03,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:03,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:03,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:03,368Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:03,369Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:03,369Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:03,382Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:27:03,383Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:03,385Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:03,422Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052659.903-3B2223B352B0AC7C/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:03,472Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:03,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:03,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:03,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:03,566Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:03,567Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:03,574Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:03,574Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:03,574Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:03,579Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:26:59.902Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:03,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:03,994Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:03,994Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:04,301Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:04,313Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:04,326Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,326Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:04,344Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313) {}
[INFO ] 2023-12-12T05:27:04,353Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:04,354Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:04,354Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:04,382Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,382Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:04,442Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:04,475Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313) {}
[INFO ] 2023-12-12T05:27:04,476Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:04,479Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358821482), owningKey=DLGdC8gU7Hzyb7HRh4dcB818TGpj4D7jiNMtyzgCrpMsZK {}
[INFO ] 2023-12-12T05:27:04,479Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:04,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,501Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:04,511Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358823129), owningKey=DLGwLcCyE9peTewWHB2Y9Vjug4j7ca1wnqmRPKZj9gAHVF {}
[INFO ] 2023-12-12T05:27:04,511Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:04,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,519Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:04,534Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,534Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:04,534Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358824313), owningKey=DLC8dEKsmHFsbGbWfzGmxJ5sKcYHzPEq71ZBDA7i58kPcF {}
[INFO ] 2023-12-12T05:27:04,534Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:27:04,536Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:04,536Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:27:04,537Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:04,537Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:04,906Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:04,961Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,260Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ef56587a-4abd-4d32-bfd6-7c5f24c4adb8, invocation_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, invocation_timestamp=2023-12-12T05:27:04.539Z, origin=Only For Testing, session_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, session_timestamp=2023-12-12T05:27:04.539Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,260Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ef56587a-4abd-4d32-bfd6-7c5f24c4adb8, invocation_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, invocation_timestamp=2023-12-12T05:27:04.539Z, origin=Only For Testing, session_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, session_timestamp=2023-12-12T05:27:04.539Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,358Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ef56587a-4abd-4d32-bfd6-7c5f24c4adb8, invocation_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, invocation_timestamp=2023-12-12T05:27:04.539Z, origin=Only For Testing, session_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, session_timestamp=2023-12-12T05:27:04.539Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,407Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,425Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,430Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,448Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=04bfb6f3-14ca-4ac3-95e9-9b28222be3b1, invocation_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, invocation_timestamp=2023-12-12T05:27:04.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab51a77-2b4d-47c8-b08a-7743a8ee6f50, session_timestamp=2023-12-12T05:27:04.859Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,496Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ef56587a-4abd-4d32-bfd6-7c5f24c4adb8, invocation_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, invocation_timestamp=2023-12-12T05:27:04.539Z, origin=Only For Testing, session_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, session_timestamp=2023-12-12T05:27:04.539Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,496Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ef56587a-4abd-4d32-bfd6-7c5f24c4adb8, invocation_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, invocation_timestamp=2023-12-12T05:27:04.539Z, origin=Only For Testing, session_id=e876fb1e-6c87-4acf-8e99-0b33a70b6a1a, session_timestamp=2023-12-12T05:27:04.539Z, thread-id=852, tx_id=1CEFBE87DC95F8752BB3F6831A5359F460C9927F74DB83962A31B5B40262A821}
[INFO ] 2023-12-12T05:27:05,516Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:05,522Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T05:27:05,545Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:05,545Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:05,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:05,553Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T05:27:05,567Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:05,568Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:05,569Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:05,573Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T05:27:05,586Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:05,586Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:05,891Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:27:05,897Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:05,899Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:05,984Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:06,050Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:06,052Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:06,053Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:06,053Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:06,070Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:06,070Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:06,081Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:06,081Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:06,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:06,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:05.593Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:06,674Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:06,676Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:06,677Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:07,074Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:07,084Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:07,087Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:07,087Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:07,128Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084) {}
[INFO ] 2023-12-12T05:27:07,147Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:07,148Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:07,148Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:07,180Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:07,181Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:07,237Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:07,244Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:27:07,277Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084) {}
[INFO ] 2023-12-12T05:27:07,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:07,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:07,280Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:07,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:07,280Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:07,294Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:27:07,295Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:07,298Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:07,346Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:07,399Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:07,401Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:07,402Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:07,402Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:07,475Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:07,476Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:07,497Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:07,497Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:07,497Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:07,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:05.593Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:08,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:08,103Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:08,103Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:08,457Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:08,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:08,484Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:08,484Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:08,508Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478) {}
[INFO ] 2023-12-12T05:27:08,519Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:08,522Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:08,522Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:08,560Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:08,560Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:08,623Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:08,650Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478) {}
[INFO ] 2023-12-12T05:27:08,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:08,655Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:08,655Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:08,668Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:08,668Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:08,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:08,681Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:08,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:08,681Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:08,696Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:27:08,698Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:08,698Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:08,724Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052705.594-BE6D3A5CFCC089DA/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:08,754Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:08,755Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:08,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:08,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:08,840Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:08,840Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:08,845Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:08,845Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:08,845Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:08,850Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:05.593Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:09,187Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:09,189Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:09,189Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:09,413Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:09,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:09,434Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,434Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:09,442Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429) {}
[INFO ] 2023-12-12T05:27:09,449Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:09,450Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:09,450Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:09,477Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,477Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:09,516Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:09,590Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429) {}
[INFO ] 2023-12-12T05:27:09,591Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:09,595Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358827084), owningKey=DLCTmQ82qBdcw6zBVSMekGLwEizmmidjjjyKWZSGh1ejbk {}
[INFO ] 2023-12-12T05:27:09,595Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:09,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,614Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:09,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358828478), owningKey=DL9Ah3SVS89Lon2wjN1ktHdm5B54NrSDDqE2zQR5zby8JC {}
[INFO ] 2023-12-12T05:27:09,628Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:09,647Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:09,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:09,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358829429), owningKey=DLvduVypCcRiy6LumSgx8XTAWUf7d1Ucg43eGy6wVC7Ay {}
[INFO ] 2023-12-12T05:27:09,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:27:09,665Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:09,665Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:27:09,666Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:09,666Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:09,996Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,047Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,239Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d841ece-a829-4469-be9c-09ea290b5f6d, invocation_id=bf713395-e4a8-4999-812a-0cfea066df91, invocation_timestamp=2023-12-12T05:27:09.668Z, origin=Only For Testing, session_id=bf713395-e4a8-4999-812a-0cfea066df91, session_timestamp=2023-12-12T05:27:09.668Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,239Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d841ece-a829-4469-be9c-09ea290b5f6d, invocation_id=bf713395-e4a8-4999-812a-0cfea066df91, invocation_timestamp=2023-12-12T05:27:09.668Z, origin=Only For Testing, session_id=bf713395-e4a8-4999-812a-0cfea066df91, session_timestamp=2023-12-12T05:27:09.668Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,286Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d841ece-a829-4469-be9c-09ea290b5f6d, invocation_id=bf713395-e4a8-4999-812a-0cfea066df91, invocation_timestamp=2023-12-12T05:27:09.668Z, origin=Only For Testing, session_id=bf713395-e4a8-4999-812a-0cfea066df91, session_timestamp=2023-12-12T05:27:09.668Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,312Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,325Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,329Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,341Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=937b190c-f362-4ad6-87c7-28eba9dafaca, invocation_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, invocation_timestamp=2023-12-12T05:27:09.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bac5be12-0d78-4b0e-aa57-355f0e66ac88, session_timestamp=2023-12-12T05:27:09.943Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,366Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d841ece-a829-4469-be9c-09ea290b5f6d, invocation_id=bf713395-e4a8-4999-812a-0cfea066df91, invocation_timestamp=2023-12-12T05:27:09.668Z, origin=Only For Testing, session_id=bf713395-e4a8-4999-812a-0cfea066df91, session_timestamp=2023-12-12T05:27:09.668Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,366Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d841ece-a829-4469-be9c-09ea290b5f6d, invocation_id=bf713395-e4a8-4999-812a-0cfea066df91, invocation_timestamp=2023-12-12T05:27:09.668Z, origin=Only For Testing, session_id=bf713395-e4a8-4999-812a-0cfea066df91, session_timestamp=2023-12-12T05:27:09.668Z, thread-id=1132, tx_id=878E9245553303F92B69CE6DE1AD6112162D323F6C0C5DF2EBC3F02C8AC6446D}
[INFO ] 2023-12-12T05:27:10,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:10,412Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T05:27:10,433Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:10,433Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:10,438Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:10,441Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T05:27:10,455Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:10,456Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:10,457Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:10,459Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T05:27:10,469Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:10,469Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:10,729Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:27:10,735Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:10,737Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:10,802Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:10,908Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:10,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:10,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:10,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:10,955Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:10,956Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:10,982Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:10,982Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:10,982Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:10,994Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:10.475Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:11,522Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:11,528Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:11,529Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:11,878Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:11,889Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:11,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:11,895Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:11,967Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889) {}
[INFO ] 2023-12-12T05:27:11,987Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:11,988Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:11,988Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:12,030Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:12,030Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:12,088Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:12,098Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:27:12,125Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889) {}
[INFO ] 2023-12-12T05:27:12,126Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:12,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:12,126Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:12,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:12,126Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:12,136Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:27:12,137Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:12,137Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:12,163Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:12,184Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:12,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:12,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:12,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:12,234Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:12,234Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:12,239Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:12,239Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:12,239Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:12,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:10.475Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:12,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:12,654Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:12,654Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:13,061Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:13,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:13,107Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:13,107Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:13,154Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097) {}
[INFO ] 2023-12-12T05:27:13,178Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:13,182Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:13,183Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:13,231Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:13,231Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:13,305Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:13,342Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097) {}
[INFO ] 2023-12-12T05:27:13,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:13,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:13,352Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:13,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:13,373Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:13,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:13,387Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:13,387Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:13,387Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:13,403Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:27:13,410Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:13,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:13,445Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052710.475-5EA190D033053ABA/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:13,482Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:13,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:13,492Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:13,492Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:13,566Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:13,567Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:13,583Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:13,583Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:13,583Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:13,597Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:10.475Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:13,976Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:13,979Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:13,980Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:14,274Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:14,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:14,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,294Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:14,315Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292) {}
[INFO ] 2023-12-12T05:27:14,324Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:14,325Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:14,325Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:14,349Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,349Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:14,392Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:14,413Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292) {}
[INFO ] 2023-12-12T05:27:14,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:14,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358831889), owningKey=DLGAaw7YyzPwh7wKMwhyfDXkR22T3DHXrNuLbXMXuxgZaQ {}
[INFO ] 2023-12-12T05:27:14,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:14,436Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,436Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:14,452Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358833097), owningKey=DLGfNCc1MFqWThmXVXWay7yem8j5wpqVXUQDdKme6JYBNX {}
[INFO ] 2023-12-12T05:27:14,452Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:14,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:14,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,476Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:14,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358834292), owningKey=DLEHA1tok9UdbqGaziBDRb5Whyf3VjjjEtwWd5DvDfV8iV {}
[INFO ] 2023-12-12T05:27:14,477Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:27:14,477Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:14,477Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:27:14,477Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:14,477Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:14,748Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:14,783Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:14,988Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5148e186-3bf0-45a9-b31c-37c3a5163644, invocation_id=eeefe964-52f0-4e81-85c1-197341fef40a, invocation_timestamp=2023-12-12T05:27:14.480Z, origin=Only For Testing, session_id=eeefe964-52f0-4e81-85c1-197341fef40a, session_timestamp=2023-12-12T05:27:14.480Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:14,988Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5148e186-3bf0-45a9-b31c-37c3a5163644, invocation_id=eeefe964-52f0-4e81-85c1-197341fef40a, invocation_timestamp=2023-12-12T05:27:14.480Z, origin=Only For Testing, session_id=eeefe964-52f0-4e81-85c1-197341fef40a, session_timestamp=2023-12-12T05:27:14.480Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,059Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5148e186-3bf0-45a9-b31c-37c3a5163644, invocation_id=eeefe964-52f0-4e81-85c1-197341fef40a, invocation_timestamp=2023-12-12T05:27:14.480Z, origin=Only For Testing, session_id=eeefe964-52f0-4e81-85c1-197341fef40a, session_timestamp=2023-12-12T05:27:14.480Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,102Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,126Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,130Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,147Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=d512f604-3e4c-4c03-816d-8c693e22bc6e, invocation_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, invocation_timestamp=2023-12-12T05:27:14.699Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d8e5ba5a-eb50-467f-8d21-49255e3161ce, session_timestamp=2023-12-12T05:27:14.699Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,174Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5148e186-3bf0-45a9-b31c-37c3a5163644, invocation_id=eeefe964-52f0-4e81-85c1-197341fef40a, invocation_timestamp=2023-12-12T05:27:14.480Z, origin=Only For Testing, session_id=eeefe964-52f0-4e81-85c1-197341fef40a, session_timestamp=2023-12-12T05:27:14.480Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,174Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5148e186-3bf0-45a9-b31c-37c3a5163644, invocation_id=eeefe964-52f0-4e81-85c1-197341fef40a, invocation_timestamp=2023-12-12T05:27:14.480Z, origin=Only For Testing, session_id=eeefe964-52f0-4e81-85c1-197341fef40a, session_timestamp=2023-12-12T05:27:14.480Z, thread-id=1412, tx_id=7F6B77CFBCE238D75D93A8EAB094AE91318D90E118D373D7EA72AD583347EDFD}
[INFO ] 2023-12-12T05:27:15,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:15,198Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T05:27:15,217Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:15,217Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:15,222Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:15,225Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T05:27:15,232Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:15,232Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:15,233Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:15,236Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T05:27:15,246Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:15,246Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:15,425Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:27:15,426Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:15,427Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:15,460Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:15,498Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:15,500Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:15,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:15,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:15,516Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:15,516Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:15,526Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:15,526Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:15,526Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:15,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:15.252Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:16,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:16,044Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:16,044Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:16,329Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:27:16,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:16,338Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:16,338Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:16,367Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336) {}
[INFO ] 2023-12-12T05:27:16,380Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:16,381Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:16,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:16,409Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:16,409Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:16,441Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:16,453Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:27:16,476Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336) {}
[INFO ] 2023-12-12T05:27:16,477Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:16,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:16,477Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:16,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:16,477Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:16,486Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:27:16,487Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:16,487Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:16,508Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:16,545Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:16,546Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:16,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:16,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:16,608Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:16,609Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:16,613Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:16,613Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:16,613Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:16,616Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:15.252Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:16,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:16,885Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:16,885Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:17,176Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:17,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:17,209Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:17,209Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:17,240Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202) {}
[INFO ] 2023-12-12T05:27:17,256Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:17,258Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:17,258Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:17,307Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:17,307Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:17,366Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:17,411Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202) {}
[INFO ] 2023-12-12T05:27:17,412Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:17,419Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:17,419Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:17,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:17,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:17,440Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:17,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:17,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:17,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:17,456Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:27:17,457Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:27:17,459Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:27:17,486Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-052715.252-433427F16B972F7B/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:27:17,525Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:17,527Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:27:17,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:27:17,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:27:17,604Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:27:17,604Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr, alias: identity-private-key {}
[INFO ] 2023-12-12T05:27:17,616Z [Test worker] internal.NodeFlowManager. - Registered CustomConsumeFlow$ConsumeFlow to initiate CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:27:17,616Z [Test worker] internal.NodeFlowManager. - Registered CustomIssueFlow$IssueFlow to initiate CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:27:17,616Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:17,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:27:15.252Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:27:18,139Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:27:18,144Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:18,145Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:18,483Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:27:18,507Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:27:18,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,514Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:18,558Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507) {}
[INFO ] 2023-12-12T05:27:18,576Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:27:18,577Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:27:18,577Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:27:18,619Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,619Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:18,682Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C0602FFA8FF9D13B02429593B9F73C8B89EE7DD5213E5B7E604A62609E7953EE uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:27:18,705Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507) {}
[INFO ] 2023-12-12T05:27:18,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:27:18,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702358836336), owningKey=DLAzX8WtxCBPNwjGdh14ckMGHvHtnFCJtgAFyxp8yDcSy5 {}
[INFO ] 2023-12-12T05:27:18,707Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:27:18,713Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,713Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:18,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702358837202), owningKey=DL3CwodZcixa8n3eFfr3izgrs16ERw9vZgCrFGToykHaHH {}
[INFO ] 2023-12-12T05:27:18,726Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:18,741Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,741Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:27:18,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,752Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:27:18,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702358838507), owningKey=DLDBG18LEbTtjd48mFvzfHZdfSDnasWyGkZ73PSWvWztBr {}
[INFO ] 2023-12-12T05:27:18,752Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:27:18,753Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:18,753Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:27:18,753Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:27:18,753Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:27:18,985Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,004Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,166Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=51815a62-98c6-4eea-b517-e2035cf6a6cb, invocation_id=524cf7c2-d03d-4888-89c4-0400b61660f5, invocation_timestamp=2023-12-12T05:27:18.756Z, origin=Only For Testing, session_id=524cf7c2-d03d-4888-89c4-0400b61660f5, session_timestamp=2023-12-12T05:27:18.756Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,166Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=51815a62-98c6-4eea-b517-e2035cf6a6cb, invocation_id=524cf7c2-d03d-4888-89c4-0400b61660f5, invocation_timestamp=2023-12-12T05:27:18.756Z, origin=Only For Testing, session_id=524cf7c2-d03d-4888-89c4-0400b61660f5, session_timestamp=2023-12-12T05:27:18.756Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,207Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=51815a62-98c6-4eea-b517-e2035cf6a6cb, invocation_id=524cf7c2-d03d-4888-89c4-0400b61660f5, invocation_timestamp=2023-12-12T05:27:18.756Z, origin=Only For Testing, session_id=524cf7c2-d03d-4888-89c4-0400b61660f5, session_timestamp=2023-12-12T05:27:18.756Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,243Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,262Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,269Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,285Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=3a747ac0-d7e4-4af2-b16b-ccc52584d7e0, invocation_id=bde0c69b-d5cc-401d-9233-59004a74138f, invocation_timestamp=2023-12-12T05:27:18.960Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bde0c69b-d5cc-401d-9233-59004a74138f, session_timestamp=2023-12-12T05:27:18.960Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,312Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=51815a62-98c6-4eea-b517-e2035cf6a6cb, invocation_id=524cf7c2-d03d-4888-89c4-0400b61660f5, invocation_timestamp=2023-12-12T05:27:18.756Z, origin=Only For Testing, session_id=524cf7c2-d03d-4888-89c4-0400b61660f5, session_timestamp=2023-12-12T05:27:18.756Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,312Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=51815a62-98c6-4eea-b517-e2035cf6a6cb, invocation_id=524cf7c2-d03d-4888-89c4-0400b61660f5, invocation_timestamp=2023-12-12T05:27:18.756Z, origin=Only For Testing, session_id=524cf7c2-d03d-4888-89c4-0400b61660f5, session_timestamp=2023-12-12T05:27:18.756Z, thread-id=1692, tx_id=C692A26C28A769B9AFA7FA925FF8AA3696F6DE99B5217F65DA15CCA6B19AB3F8}
[INFO ] 2023-12-12T05:27:19,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:19,504Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T05:27:19,537Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:19,537Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:19,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:19,554Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T05:27:19,570Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:19,570Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:27:19,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:27:19,575Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T05:27:19,586Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:27:19,586Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:55:32,165Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T05:55:32,677Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:55:36,149Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T05:55:37,526Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T05:55:37,585Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T05:55:37,588Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:55:38,300Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:38,311Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T05:55:38,965Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:38,965Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:38,965Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T05:55:39,171Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:39,184Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:55:40,008Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T05:55:40,795Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:55:40,808Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T05:55:40,858Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:55:40,871Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T05:55:40,871Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T05:55:43,029Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:43,030Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T05:55:43,405Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:43,405Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T05:55:43,478Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:43,478Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T05:55:43,725Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T05:55:43,738Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:43,906Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:43,940Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:43,940Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:43,940Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:43,954Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:43,966Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:43,966Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:43,966Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:43,981Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:44,028Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,028Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:44,028Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,123Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:44,148Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,149Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:44,149Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,149Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:55:44,303Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:55:44,329Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,938Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T05:55:44,938Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,962Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:44,962Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T05:55:44,997Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,010Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T05:55:45,023Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T05:55:45,024Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T05:55:45,024Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,036Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T05:55:45,186Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,187Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T05:55:45,220Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,232Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,232Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T05:55:45,256Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,256Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T05:55:45,267Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,278Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T05:55:45,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,291Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:45,304Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,304Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:45,304Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,304Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:55:45,353Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,353Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:55:45,353Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,353Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T05:55:45,367Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,367Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T05:55:45,367Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T05:55:45,367Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T05:55:45,378Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T05:55:45,402Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,403Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T05:55:45,403Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,403Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,416Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T05:55:45,524Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,549Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T05:55:45,560Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,571Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T05:55:45,582Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,583Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T05:55:45,607Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T05:55:45,619Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:45,620Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T05:55:45,620Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T05:55:45,645Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:55:45,683Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T05:55:45,683Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T05:55:45,739Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T05:55:57,018Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:55:57,030Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:55:57,188Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:55:57,499Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:00,029Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:00,358Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:00,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:00,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:00,479Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:00,484Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:00,678Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:00,681Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:00,685Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:00,773Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:55:29.848Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:09,514Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:09,640Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:09,659Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:15,961Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:17,381Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:17,436Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:17,436Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:17,905Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381) {}
[INFO ] 2023-12-12T05:56:18,092Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:18,128Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:18,133Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:18,255Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:18,255Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:18,767Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:18,792Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:20,424Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381) {}
[INFO ] 2023-12-12T05:56:20,435Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:20,440Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:20,445Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:20,453Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:20,454Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:20,529Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:20,532Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:20,543Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:20,637Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:20,813Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:20,815Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:20,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:20,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:20,931Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:20,931Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:20,942Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:20,942Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:20,942Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:20,948Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:55:29.848Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:22,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:22,403Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:22,403Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:22,989Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:23,004Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:23,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:23,015Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:23,060Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004) {}
[INFO ] 2023-12-12T05:56:23,077Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:23,078Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:23,078Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:23,131Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:23,132Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:23,207Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:23,270Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004) {}
[INFO ] 2023-12-12T05:56:23,271Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:23,282Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:23,282Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:23,308Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:23,308Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:23,324Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:23,324Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:23,324Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:23,324Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:23,341Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:23,344Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:23,346Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:23,407Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055529.989-F56F6D52BF218E2D/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:23,487Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:23,496Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:23,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:23,498Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:23,587Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:23,588Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:23,597Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:23,598Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:23,598Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:23,611Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:55:29.848Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:24,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:24,378Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:24,378Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:24,921Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:24,950Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:24,960Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:24,960Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:25,000Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950) {}
[INFO ] 2023-12-12T05:56:25,054Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:25,056Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:25,056Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:25,110Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:25,110Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:25,195Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:25,267Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950) {}
[INFO ] 2023-12-12T05:56:25,268Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:25,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360577381), owningKey=DL5Fy9u8Ja4dZtFCwxnELQrERVDNtiYRdCe91T8eyV9WkJ {}
[INFO ] 2023-12-12T05:56:25,279Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:25,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:25,305Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:25,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360583004), owningKey=DLAUxaRW1uPrPWpStRUftJVhfE2pCaMnwt3iHdugYr5owo {}
[INFO ] 2023-12-12T05:56:25,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:25,372Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:25,372Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:25,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:25,389Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:25,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360584950), owningKey=DLGGLFHUmGBcSpJEhhUg4fs8w1poa9bjS3qcay2TPGSQVv {}
[INFO ] 2023-12-12T05:56:25,389Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:25,401Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:25,401Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:25,410Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:25,410Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:26,218Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302}
[WARN ] 2023-12-12T05:56:26,218Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302}
[INFO ] 2023-12-12T05:56:27,662Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:27,822Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,232Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,232Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,425Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,523Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,547Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,557Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,575Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=34007193-4c66-402a-8e72-4dd5d6ace974, invocation_id=b52d48d1-14be-4388-9df7-46cf3894063a, invocation_timestamp=2023-12-12T05:56:27.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b52d48d1-14be-4388-9df7-46cf3894063a, session_timestamp=2023-12-12T05:56:27.492Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,628Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,628Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a95c39a5-8d70-424c-afbd-caf76fbb9ed7, invocation_id=8f734771-a384-48b9-89bd-8b14410ee591, invocation_timestamp=2023-12-12T05:56:25.523Z, origin=Only For Testing, session_id=8f734771-a384-48b9-89bd-8b14410ee591, session_timestamp=2023-12-12T05:56:25.523Z, thread-id=302, tx_id=6B27A7257E33DBE1A97FA9AEB9F8B352ADE881C1D2B8EE2BFB29E9B7DFA614F3}
[INFO ] 2023-12-12T05:56:28,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:28,672Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T05:56:28,725Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:28,725Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:28,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:28,738Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T05:56:28,773Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:28,774Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:28,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:28,780Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T05:56:28,811Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:28,811Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:29,115Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:56:29,120Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:29,121Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:29,179Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:29,231Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:29,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:29,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:29,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:29,250Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:29,250Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:29,259Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:29,259Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:29,259Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:29,277Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:28.827Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:30,154Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:30,156Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:30,157Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:30,670Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:30,681Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:30,686Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:30,686Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:30,743Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681) {}
[INFO ] 2023-12-12T05:56:30,758Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:30,758Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:30,758Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:30,802Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:30,802Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:30,868Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:30,877Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:30,920Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681) {}
[INFO ] 2023-12-12T05:56:30,921Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:30,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:30,922Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:30,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:30,922Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:30,941Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:30,943Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:30,945Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:30,997Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:31,078Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:31,083Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:31,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:31,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:31,166Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:31,167Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:31,188Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:31,188Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:31,188Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:31,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:28.827Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:31,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:31,904Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:31,904Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:32,463Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:32,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:32,495Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:32,495Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:32,531Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487) {}
[INFO ] 2023-12-12T05:56:32,554Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:32,557Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:32,557Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:32,599Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:32,599Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:32,665Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:32,703Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487) {}
[INFO ] 2023-12-12T05:56:32,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:32,712Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:32,712Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:32,730Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:32,730Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:32,742Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:32,742Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:32,742Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:32,742Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:32,756Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:32,757Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:32,758Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:32,789Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055628.827-6AD8407954C37151/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:32,851Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:32,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:32,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:32,860Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:32,954Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:32,955Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:32,961Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:32,962Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:32,962Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:32,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:28.827Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:33,744Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:33,751Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:33,752Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:34,180Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:34,198Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:34,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,205Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:34,238Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198) {}
[INFO ] 2023-12-12T05:56:34,254Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:34,256Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:34,256Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:34,300Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,300Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:34,365Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:34,411Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198) {}
[INFO ] 2023-12-12T05:56:34,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:34,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360590681), owningKey=DL4G6AZdMnh9idJu3iRBLnFg99Qj3MUxcB1u9tCHH9nCfr {}
[INFO ] 2023-12-12T05:56:34,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:34,451Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,451Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:34,472Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360592487), owningKey=DLHzvLpvJ8sRN9eMK83DDFVQRAuWfJLxY7ciVvTsSrKppU {}
[INFO ] 2023-12-12T05:56:34,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:34,482Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,482Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:34,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,491Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:34,492Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360594198), owningKey=DL9rF2XbtwvEh5txPnyXULB4XDsnk7acYiPDr9PQQvveFL {}
[INFO ] 2023-12-12T05:56:34,492Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:34,493Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:34,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:34,493Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:34,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T05:56:34,684Z [Mock network] internal.Verifier. - Error validating transaction 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T05:56:34,702Z [Mock network] internal.Verifier. - Error validating transaction 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T05:56:34,702Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
[INFO ] 2023-12-12T05:56:34,728Z [Mock network] statemachine.StaffedFlowHospital. - Flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Invocation, sessionId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=4C874714B2C518759F8A3F6E95177E9E44A07BC5C7EE114F1CD305750F0FE1DF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=7360557C732BECC6796E19B22F7FCBA7FE0A4BEB26DEFF2570883ABD3922C5BA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@316af6af, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=e1fee8f6-ec73-49d8-b3e9-dc1eb74b2e40, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@25fa2f45[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
[INFO ] 2023-12-12T05:56:34,737Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T05:56:34,756Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:56:34,785Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] errored, dumping all transitions:

 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.526Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Invocation, sessionId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=4C874714B2C518759F8A3F6E95177E9E44A07BC5C7EE114F1CD305750F0FE1DF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=7360557C732BECC6796E19B22F7FCBA7FE0A4BEB26DEFF2570883ABD3922C5BA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd])
    SignalFlowHasStarted(flowId=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd]
    []


 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.763Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5093133944242711865, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T05:56:34.504Z
    2023-12-12T05:56:34.712Z


 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.770Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.772Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T05:56:34.712Z
    2023-12-12T05:56:34.772Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
[WARN ] 2023-12-12T05:56:34,785Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:56:34,788Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T05:56:34,855Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] errored, dumping all transitions:

 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.526Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Invocation, sessionId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=4C874714B2C518759F8A3F6E95177E9E44A07BC5C7EE114F1CD305750F0FE1DF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=7360557C732BECC6796E19B22F7FCBA7FE0A4BEB26DEFF2570883ABD3922C5BA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd])
    SignalFlowHasStarted(flowId=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5a6de3cd]
    []


 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.763Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5093133944242711865, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T05:56:34.504Z
    2023-12-12T05:56:34.712Z


 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.770Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.772Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T05:56:34.712Z
    2023-12-12T05:56:34.772Z


 --- Transition of flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] ---
  Timestamp: 2023-12-12T05:56:34.845Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E, errorId=-5093133944242711865)], sessions=[], senderUUID=e1fee8f6-ec73-49d8-b3e9-dc1eb74b2e40)
    CreateTransaction
    RemoveCheckpoint(id=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[6aa02791-1038-4d36-9cd2-7ceaa17cc1d0], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5093133944242711865, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Invocation, sessionId=e2badbfe-857c-4d7e-8539-05c23fdaebc5, timestamp: 2023-12-12T05:56:34.499Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=4C874714B2C518759F8A3F6E95177E9E44A07BC5C7EE114F1CD305750F0FE1DF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@3cfc1424, errorState=Errored(errors=[FlowError(errorId=-5093133944242711865, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@316af6af, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=e1fee8f6-ec73-49d8-b3e9-dc1eb74b2e40, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@25fa2f45[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=7360557C732BECC6796E19B22F7FCBA7FE0A4BEB26DEFF2570883ABD3922C5BA)
    net.corda.node.services.statemachine.FlowState$Finished@3cfc1424
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2023-12-12T05:56:34.772Z
    2023-12-12T05:56:34.787Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
[WARN ] 2023-12-12T05:56:34,855Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6aa02791-1038-4d36-9cd2-7ceaa17cc1d0] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6aa02791-1038-4d36-9cd2-7ceaa17cc1d0, invocation_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, invocation_timestamp=2023-12-12T05:56:34.499Z, origin=Only For Testing, session_id=e2badbfe-857c-4d7e-8539-05c23fdaebc5, session_timestamp=2023-12-12T05:56:34.499Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96E1E5EB8C2CFB5DF52426266551EEAE881CBA4ABEBEAB01E37E1676487ED09E
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T05:56:34,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:34,899Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T05:56:34,932Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:34,932Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:34,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:34,940Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T05:56:34,966Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:34,966Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:34,969Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:34,973Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T05:56:34,994Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:34,994Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:35,221Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:56:35,222Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:35,223Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:35,252Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:35,298Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:35,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:35,302Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:35,302Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:35,323Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:35,324Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:35,333Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:35,333Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:35,334Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:35,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:35Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:36,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:36,048Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:36,050Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:36,554Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:36,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:36,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:36,574Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:36,658Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567) {}
[INFO ] 2023-12-12T05:56:36,685Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:36,687Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:36,687Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:36,741Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:36,741Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:36,844Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:36,853Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:36,911Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567) {}
[INFO ] 2023-12-12T05:56:36,911Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:36,916Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:36,916Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:36,917Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:36,917Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:36,936Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:36,938Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:36,940Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:37,010Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:37,090Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:37,094Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:37,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:37,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:37,177Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:37,178Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:37,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:37,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:37,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:37,212Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:35Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:37,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:37,771Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:37,771Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:38,106Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:38,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:38,123Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:38,123Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:38,147Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119) {}
[INFO ] 2023-12-12T05:56:38,156Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:38,157Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:38,157Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:38,190Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:38,190Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:38,234Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:38,261Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119) {}
[INFO ] 2023-12-12T05:56:38,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:38,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:38,264Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:38,276Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:38,276Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:38,285Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:38,285Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:38,285Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:38,285Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:38,297Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:38,298Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:38,299Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:38,341Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055635.001-F82E87F409CED125/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:38,391Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:38,395Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:38,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:38,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:38,495Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:38,496Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:38,520Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:38,520Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:38,520Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:38,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:35Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:39,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:39,121Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:39,122Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:39,563Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:39,588Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:39,603Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,603Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:39,639Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588) {}
[INFO ] 2023-12-12T05:56:39,653Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:39,655Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:39,655Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:39,692Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,692Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:39,744Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:39,778Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588) {}
[INFO ] 2023-12-12T05:56:39,779Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:39,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360596567), owningKey=DLHmj5Co97TThMLi1TRgsFWQSj1J8xiaBjQcxB27wrDNRn {}
[INFO ] 2023-12-12T05:56:39,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:39,808Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,808Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:39,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360598119), owningKey=DL22hpjnwHesVpmTskKaRgLfinjndZpFUADRFDz96twwJb {}
[INFO ] 2023-12-12T05:56:39,817Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:39,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,825Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:39,836Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,836Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:39,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360599588), owningKey=DL7WoxyCyfwJxwxGkLNUPPUfREbAAz12qqchVWb1FHAdNc {}
[INFO ] 2023-12-12T05:56:39,837Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:39,838Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:39,838Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:39,838Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:39,838Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:40,146Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,189Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,461Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=a03098bd-a9b2-4f46-b597-b8b4f197e714, invocation_id=bb8427a6-380f-487e-9a21-674db27a7905, invocation_timestamp=2023-12-12T05:56:39.840Z, origin=Only For Testing, session_id=bb8427a6-380f-487e-9a21-674db27a7905, session_timestamp=2023-12-12T05:56:39.840Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,461Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=a03098bd-a9b2-4f46-b597-b8b4f197e714, invocation_id=bb8427a6-380f-487e-9a21-674db27a7905, invocation_timestamp=2023-12-12T05:56:39.840Z, origin=Only For Testing, session_id=bb8427a6-380f-487e-9a21-674db27a7905, session_timestamp=2023-12-12T05:56:39.840Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,548Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=a03098bd-a9b2-4f46-b597-b8b4f197e714, invocation_id=bb8427a6-380f-487e-9a21-674db27a7905, invocation_timestamp=2023-12-12T05:56:39.840Z, origin=Only For Testing, session_id=bb8427a6-380f-487e-9a21-674db27a7905, session_timestamp=2023-12-12T05:56:39.840Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,602Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,631Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,638Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,664Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=bf1838c6-bc04-437b-97ca-7107a02003b2, invocation_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, invocation_timestamp=2023-12-12T05:56:40.103Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aee84bc4-93f3-4e93-a864-a9bdc3f912d8, session_timestamp=2023-12-12T05:56:40.103Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,712Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=a03098bd-a9b2-4f46-b597-b8b4f197e714, invocation_id=bb8427a6-380f-487e-9a21-674db27a7905, invocation_timestamp=2023-12-12T05:56:39.840Z, origin=Only For Testing, session_id=bb8427a6-380f-487e-9a21-674db27a7905, session_timestamp=2023-12-12T05:56:39.840Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,712Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=a03098bd-a9b2-4f46-b597-b8b4f197e714, invocation_id=bb8427a6-380f-487e-9a21-674db27a7905, invocation_timestamp=2023-12-12T05:56:39.840Z, origin=Only For Testing, session_id=bb8427a6-380f-487e-9a21-674db27a7905, session_timestamp=2023-12-12T05:56:39.840Z, thread-id=847, tx_id=6E97D5EBFC99B7E97A28F474BB2C00498D044DD2174F53B0F433C5C8CFB38B61}
[INFO ] 2023-12-12T05:56:40,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:40,756Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T05:56:40,785Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:40,785Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:40,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:40,799Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T05:56:40,818Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:40,818Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:40,819Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:40,822Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T05:56:40,836Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:40,836Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:41,097Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:56:41,101Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:41,102Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:41,149Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:41,223Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:41,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:41,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:41,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:41,253Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:41,253Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:41,263Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:41,263Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:41,263Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:41,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:40.842Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:41,810Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:41,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:41,813Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:42,216Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:42,229Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:42,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:42,233Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:42,277Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229) {}
[INFO ] 2023-12-12T05:56:42,297Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:42,298Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:42,298Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:42,328Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:42,328Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:42,379Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:42,389Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:42,422Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229) {}
[INFO ] 2023-12-12T05:56:42,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:42,425Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:42,425Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:42,425Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:42,425Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:42,439Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:42,441Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:42,442Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:42,488Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:42,544Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:42,549Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:42,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:42,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:42,615Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:42,616Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:42,635Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:42,635Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:42,635Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:42,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:40.842Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:43,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:43,164Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:43,165Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:43,494Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:43,513Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:43,517Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:43,517Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:43,540Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513) {}
[INFO ] 2023-12-12T05:56:43,548Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:43,548Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:43,548Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:43,572Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:43,572Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:43,624Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:43,646Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513) {}
[INFO ] 2023-12-12T05:56:43,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:43,647Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:43,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:43,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:43,661Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:43,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:43,674Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:43,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:43,674Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:43,684Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:43,686Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:43,686Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:43,715Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055640.843-89E5F82DE621B7C3/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:43,739Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:43,739Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:43,740Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:43,740Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:43,811Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:43,811Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:43,816Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:43,816Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:43,816Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:43,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:40.842Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:44,396Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:44,402Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:44,403Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:44,711Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:44,737Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:44,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:44,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:44,777Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738) {}
[INFO ] 2023-12-12T05:56:44,792Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:44,794Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:44,794Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:44,841Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:44,841Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:44,907Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:44,958Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738) {}
[INFO ] 2023-12-12T05:56:44,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:44,968Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360602229), owningKey=DL2QMNXY46WtvkCrfBYFDkeEwvYrNVYkqrv5u1S9kAdXz1 {}
[INFO ] 2023-12-12T05:56:44,968Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:44,980Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:44,980Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:44,989Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360603513), owningKey=DLGWVs1PL3KueTLcYydN8i2GsGPVEHzZ1nt8my3AwKVBgq {}
[INFO ] 2023-12-12T05:56:44,989Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:45,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:45,008Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:45,019Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:45,019Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:45,019Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360604738), owningKey=DLCFXjnfNAypBYh3JKEEkA61rx2MEaffk1tgxW7ofS2L3L {}
[INFO ] 2023-12-12T05:56:45,019Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:45,022Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:45,022Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:45,022Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:45,022Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:45,345Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,406Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,602Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=7f6ff207-ef25-49d9-a106-f8cdd8c8a2d3, invocation_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, invocation_timestamp=2023-12-12T05:56:45.025Z, origin=Only For Testing, session_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, session_timestamp=2023-12-12T05:56:45.025Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,602Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=7f6ff207-ef25-49d9-a106-f8cdd8c8a2d3, invocation_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, invocation_timestamp=2023-12-12T05:56:45.025Z, origin=Only For Testing, session_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, session_timestamp=2023-12-12T05:56:45.025Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,644Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=7f6ff207-ef25-49d9-a106-f8cdd8c8a2d3, invocation_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, invocation_timestamp=2023-12-12T05:56:45.025Z, origin=Only For Testing, session_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, session_timestamp=2023-12-12T05:56:45.025Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,677Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,694Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,698Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,717Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=3e082595-be68-430c-a428-eb2983d7c63a, invocation_id=78b0639e-d3ce-427a-a54c-17381d98b57b, invocation_timestamp=2023-12-12T05:56:45.303Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78b0639e-d3ce-427a-a54c-17381d98b57b, session_timestamp=2023-12-12T05:56:45.303Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,743Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=7f6ff207-ef25-49d9-a106-f8cdd8c8a2d3, invocation_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, invocation_timestamp=2023-12-12T05:56:45.025Z, origin=Only For Testing, session_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, session_timestamp=2023-12-12T05:56:45.025Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,743Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=7f6ff207-ef25-49d9-a106-f8cdd8c8a2d3, invocation_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, invocation_timestamp=2023-12-12T05:56:45.025Z, origin=Only For Testing, session_id=cc0e5f4a-fd35-459f-9566-63d0077ed2eb, session_timestamp=2023-12-12T05:56:45.025Z, thread-id=1127, tx_id=A9424B9CF94C7D6CED3D935A9B55DEBD73FA0A68E0EF038ECE542FF43300DA70}
[INFO ] 2023-12-12T05:56:45,782Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:45,791Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T05:56:45,813Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:45,813Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:45,819Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:45,824Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T05:56:45,844Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:45,845Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:45,847Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:45,851Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T05:56:45,871Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:45,871Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:46,118Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:56:46,125Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:46,127Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:46,196Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:46,272Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:46,276Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:46,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:46,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:46,300Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:46,300Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:46,310Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:46,310Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:46,310Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:46,323Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:45.880Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:46,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:46,898Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:46,899Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:47,379Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:47,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:47,406Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:47,406Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:47,493Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398) {}
[INFO ] 2023-12-12T05:56:47,519Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:47,522Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:47,522Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:47,576Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:47,576Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:47,641Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:47,651Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:47,686Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398) {}
[INFO ] 2023-12-12T05:56:47,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:47,687Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:47,687Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:47,687Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:47,687Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:47,702Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:47,703Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:47,704Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:47,738Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:47,763Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:47,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:47,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:47,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:47,832Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:47,833Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:47,839Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:47,839Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:47,839Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:47,847Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:45.880Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:48,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:48,219Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:48,220Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:48,536Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:48,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:48,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:48,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:48,561Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548) {}
[INFO ] 2023-12-12T05:56:48,571Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:48,571Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:48,571Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:48,601Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:48,601Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:48,628Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:48,657Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548) {}
[INFO ] 2023-12-12T05:56:48,658Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:48,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:48,661Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:48,672Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:48,672Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:48,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:48,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:48,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:48,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:48,696Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:48,697Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:48,699Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:48,727Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055645.880-80094DF0F852476A/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:48,775Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:48,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:48,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:48,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:48,921Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:48,922Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:48,949Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:48,949Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:48,949Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:48,964Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:45.880Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:49,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:49,359Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:49,359Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:49,685Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:49,709Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:49,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,714Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:49,736Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709) {}
[INFO ] 2023-12-12T05:56:49,745Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:49,746Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:49,746Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:49,776Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,776Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:49,818Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:49,836Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709) {}
[INFO ] 2023-12-12T05:56:49,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:49,839Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360607398), owningKey=DLEK5psPSQ4GpJCAE79YqcFP17B4o2vxuEDYKeG95HrVTa {}
[INFO ] 2023-12-12T05:56:49,839Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:49,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,859Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:49,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360608548), owningKey=DLEe81zJRv1qcCvcuMBSGGCmyXL3vhXYrgXzeesrDX1Aaj {}
[INFO ] 2023-12-12T05:56:49,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:49,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,888Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:49,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,899Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:49,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360609709), owningKey=DL53EeLJxBhrhUs23YD4xaDpMWhhzUQ1pAamzH9oo3Fn6L {}
[INFO ] 2023-12-12T05:56:49,899Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:49,900Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:49,900Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:49,900Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:49,900Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:50,168Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,203Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,436Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=d3ecdeed-acb1-4fb6-a844-14db90fa5302, invocation_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, invocation_timestamp=2023-12-12T05:56:49.904Z, origin=Only For Testing, session_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, session_timestamp=2023-12-12T05:56:49.904Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,436Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=d3ecdeed-acb1-4fb6-a844-14db90fa5302, invocation_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, invocation_timestamp=2023-12-12T05:56:49.904Z, origin=Only For Testing, session_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, session_timestamp=2023-12-12T05:56:49.904Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,514Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=d3ecdeed-acb1-4fb6-a844-14db90fa5302, invocation_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, invocation_timestamp=2023-12-12T05:56:49.904Z, origin=Only For Testing, session_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, session_timestamp=2023-12-12T05:56:49.904Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,560Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,585Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,590Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,614Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=c2154379-ef10-46dd-9b8d-2a19b3ad6ee6, invocation_id=458eb02c-722d-4623-bffe-743fd38db891, invocation_timestamp=2023-12-12T05:56:50.116Z, origin=O=Mock Company 1, L=London, C=GB, session_id=458eb02c-722d-4623-bffe-743fd38db891, session_timestamp=2023-12-12T05:56:50.116Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,646Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=d3ecdeed-acb1-4fb6-a844-14db90fa5302, invocation_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, invocation_timestamp=2023-12-12T05:56:49.904Z, origin=Only For Testing, session_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, session_timestamp=2023-12-12T05:56:49.904Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,646Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=d3ecdeed-acb1-4fb6-a844-14db90fa5302, invocation_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, invocation_timestamp=2023-12-12T05:56:49.904Z, origin=Only For Testing, session_id=9181002b-21c2-4dee-9cb9-5d870f3e7868, session_timestamp=2023-12-12T05:56:49.904Z, thread-id=1407, tx_id=296D10D61F0E3B4B620CFB1DCF888EB3C9763A6E296EA8F69D5D2636940B8C61}
[INFO ] 2023-12-12T05:56:50,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:50,673Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T05:56:50,697Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:50,697Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:50,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:50,702Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T05:56:50,715Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:50,715Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:50,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:50,719Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T05:56:50,730Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:50,730Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:50,972Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/0/cordapps] {}
[INFO ] 2023-12-12T05:56:50,977Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:50,978Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:51,040Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:51,117Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:51,123Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:51,126Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:51,126Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:51,141Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:51,141Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:51,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:51,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:51,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:51,169Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:50.735Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:51,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:51,841Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:51,842Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:52,232Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T05:56:52,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:52,268Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:52,268Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:52,359Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257) {}
[INFO ] 2023-12-12T05:56:52,392Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:52,398Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:52,398Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:52,455Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:52,455Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:52,527Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:52,537Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T05:56:52,579Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257) {}
[INFO ] 2023-12-12T05:56:52,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:52,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:52,584Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:52,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:52,584Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:52,600Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/1/cordapps] {}
[INFO ] 2023-12-12T05:56:52,602Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:52,603Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:52,645Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:52,700Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:52,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:52,702Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:52,702Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:52,781Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:52,782Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:52,790Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:52,790Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:52,790Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:52,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:50.735Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:53,154Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:53,158Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:53,159Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:53,420Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:53,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:53,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:53,441Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:53,461Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437) {}
[INFO ] 2023-12-12T05:56:53,470Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:53,471Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:53,471Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:53,500Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:53,500Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:53,526Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:53,554Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437) {}
[INFO ] 2023-12-12T05:56:53,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:53,560Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:53,560Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:53,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:53,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:53,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:53,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:53,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:53,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:53,588Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/2/cordapps] {}
[INFO ] 2023-12-12T05:56:53,588Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T05:56:53,588Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T05:56:53,623Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-055650.736-FB55C74FC7A231A3/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T05:56:53,655Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:53,656Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T05:56:53,657Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T05:56:53,657Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T05:56:53,713Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T05:56:53,713Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk, alias: identity-private-key {}
[INFO ] 2023-12-12T05:56:53,722Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T05:56:53,722Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T05:56:53,722Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:53,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T05:56:50.735Z
      epoch=1
  } {}
[INFO ] 2023-12-12T05:56:54,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T05:56:54,008Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:54,008Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:54,305Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T05:56:54,327Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T05:56:54,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,331Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:54,366Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327) {}
[INFO ] 2023-12-12T05:56:54,390Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T05:56:54,392Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T05:56:54,392Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T05:56:54,436Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,436Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:54,504Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=874EEDE8E48F4B66CED7610CF6D11B28E75DC4315D9F3FBBEF2FE12CF72CCB2B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T05:56:54,542Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327) {}
[INFO ] 2023-12-12T05:56:54,544Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T05:56:54,550Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702360612257), owningKey=DL6nhUXXoeFJrQ7FP9egSeoMJtwYPFeZ7ynKFSyd9QnhYk {}
[INFO ] 2023-12-12T05:56:54,550Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T05:56:54,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,564Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:54,577Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702360613437), owningKey=DL69LmD9tKdC372R8m2yurJ7tE7WvgsCg3TpyPu1EF5gpK {}
[INFO ] 2023-12-12T05:56:54,577Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:54,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,585Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T05:56:54,589Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,589Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T05:56:54,589Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702360614327), owningKey=DL2s5bZThq932yh4PBxZGKDNG1hwoQVhr4UawUkWmYmTXk {}
[INFO ] 2023-12-12T05:56:54,589Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T05:56:54,591Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:54,591Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T05:56:54,591Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T05:56:54,591Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T05:56:54,821Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:54,842Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,005Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7a782654-0556-4dfc-9704-4d4fceec13da, invocation_id=42ec7620-1019-4b17-af3d-80bb74caf407, invocation_timestamp=2023-12-12T05:56:54.594Z, origin=Only For Testing, session_id=42ec7620-1019-4b17-af3d-80bb74caf407, session_timestamp=2023-12-12T05:56:54.594Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,005Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7a782654-0556-4dfc-9704-4d4fceec13da, invocation_id=42ec7620-1019-4b17-af3d-80bb74caf407, invocation_timestamp=2023-12-12T05:56:54.594Z, origin=Only For Testing, session_id=42ec7620-1019-4b17-af3d-80bb74caf407, session_timestamp=2023-12-12T05:56:54.594Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,042Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7a782654-0556-4dfc-9704-4d4fceec13da, invocation_id=42ec7620-1019-4b17-af3d-80bb74caf407, invocation_timestamp=2023-12-12T05:56:54.594Z, origin=Only For Testing, session_id=42ec7620-1019-4b17-af3d-80bb74caf407, session_timestamp=2023-12-12T05:56:54.594Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,064Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,077Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,081Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,096Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=2a82bffc-25e7-4eb4-9404-dbede9ba296f, invocation_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, invocation_timestamp=2023-12-12T05:56:54.793Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88936d7c-ce83-4384-8bd4-fc7a955a3ca4, session_timestamp=2023-12-12T05:56:54.793Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,126Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7a782654-0556-4dfc-9704-4d4fceec13da, invocation_id=42ec7620-1019-4b17-af3d-80bb74caf407, invocation_timestamp=2023-12-12T05:56:54.594Z, origin=Only For Testing, session_id=42ec7620-1019-4b17-af3d-80bb74caf407, session_timestamp=2023-12-12T05:56:54.594Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,126Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7a782654-0556-4dfc-9704-4d4fceec13da, invocation_id=42ec7620-1019-4b17-af3d-80bb74caf407, invocation_timestamp=2023-12-12T05:56:54.594Z, origin=Only For Testing, session_id=42ec7620-1019-4b17-af3d-80bb74caf407, session_timestamp=2023-12-12T05:56:54.594Z, thread-id=1687, tx_id=125E9E89B76B34038767E01AB8ED4249ADD1E1FDD050897D8C9936FC1A6EDB0C}
[INFO ] 2023-12-12T05:56:55,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:55,316Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T05:56:55,355Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:55,355Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:55,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:55,362Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T05:56:55,373Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:55,373Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T05:56:55,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T05:56:55,378Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T05:56:55,391Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T05:56:55,391Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:03:51,162Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T06:03:51,735Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:03:55,391Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:03:56,753Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T06:03:56,810Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:03:56,814Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:03:57,548Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:03:57,571Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T06:03:58,222Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:03:58,222Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:03:58,222Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T06:03:58,431Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:03:58,455Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:03:59,251Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T06:04:00,060Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:04:00,076Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:04:00,137Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:04:00,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:04:00,137Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:04:02,562Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:04:02,563Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T06:04:02,926Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:04:02,926Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T06:04:03,012Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:04:03,012Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T06:04:03,292Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:04:03,305Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:03,495Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:03,518Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:03,519Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:03,519Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:03,545Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:03,557Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:03,557Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:03,557Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:03,557Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:03,616Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:03,616Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:03,616Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:03,728Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:03,753Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:03,753Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:03,765Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:03,765Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:04:03,932Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:03,932Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:04:03,956Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:04:04,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,629Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:04,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,677Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T06:04:04,678Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T06:04:04,691Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T06:04:04,691Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:04,705Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T06:04:04,788Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:04,788Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T06:04:04,800Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:04,812Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,812Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:04:04,824Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,824Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T06:04:04,837Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,849Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,850Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:04:04,850Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,861Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:04,885Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,886Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:04,886Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,886Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:04:04,924Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,924Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:04:04,937Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,937Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:04:04,937Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,949Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:04:04,949Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:04:04,950Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T06:04:04,950Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T06:04:04,974Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,974Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T06:04:04,974Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:04,974Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:04,974Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T06:04:05,034Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:05,034Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:04:05,058Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:05,058Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:04:05,058Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:05,059Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:04:05,059Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:04:05,059Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:05,059Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:04:05,069Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:05,081Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T06:04:05,093Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:04:05,107Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:05,107Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T06:04:05,107Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:04:05,133Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:04:05,157Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T06:04:05,157Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:04:05,216Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T06:04:16,664Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:04:16,676Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:16,791Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:17,143Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:19,608Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:19,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:19,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:19,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:20,047Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:20,054Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:20,321Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:20,322Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:20,323Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:20,420Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:03:48.324Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:29,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:29,485Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:29,507Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:35,705Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:37,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:37,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:37,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:37,627Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134) {}
[INFO ] 2023-12-12T06:04:37,802Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:37,840Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:37,846Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:37,974Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:37,975Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:38,492Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:38,513Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:04:40,166Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134) {}
[INFO ] 2023-12-12T06:04:40,178Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:40,187Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:40,189Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:40,193Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:40,193Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:40,276Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:04:40,279Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:40,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:40,387Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:40,550Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:40,553Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:40,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:40,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:40,661Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:40,662Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:40,692Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:40,692Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:40,692Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:40,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:03:48.324Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:42,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:42,089Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:42,089Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:42,661Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:42,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:42,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:42,689Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:42,730Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676) {}
[INFO ] 2023-12-12T06:04:42,746Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:42,748Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:42,748Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:42,807Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:42,807Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:42,871Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:42,953Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676) {}
[INFO ] 2023-12-12T06:04:42,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:42,973Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:42,974Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:43,002Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:43,003Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:43,029Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:43,029Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:43,029Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:43,029Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:43,048Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:04:43,050Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:43,055Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:43,129Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060348.511-ACC1513EDC678B79/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:43,208Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:43,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:43,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:43,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:43,320Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:43,320Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:43,328Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:43,328Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:43,328Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:43,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:03:48.324Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:44,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:44,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:44,180Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:44,710Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:44,740Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:44,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:44,748Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:44,788Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740) {}
[INFO ] 2023-12-12T06:04:44,814Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:44,815Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:44,815Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:44,860Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:44,860Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:44,942Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:45,004Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740) {}
[INFO ] 2023-12-12T06:04:45,004Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:45,015Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361077134), owningKey=DLDEEn9UmhAyr6dkwtAdEY88f6hY3xG7sQZ953WxGEzd3p {}
[INFO ] 2023-12-12T06:04:45,015Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:45,046Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:45,046Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:45,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361082676), owningKey=DLFnHafiEgbRaTd2p6idtJAXXn5VGWyBjf7aVkz3GnSsiW {}
[INFO ] 2023-12-12T06:04:45,084Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:45,099Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:45,099Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:45,117Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:45,117Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:45,118Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361084740), owningKey=DL3DcLHWPzUa2wCQvgaCsVWgZgcUSPAW44NdqNVKZ3oqcx {}
[INFO ] 2023-12-12T06:04:45,118Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:04:45,133Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:45,133Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:04:45,143Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:45,143Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:04:45,906Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306}
[WARN ] 2023-12-12T06:04:45,907Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306}
[INFO ] 2023-12-12T06:04:47,326Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:47,443Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:47,765Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:47,765Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:47,922Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,013Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,044Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,054Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,075Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=2beeb682-1057-4b5c-aa01-84dddc868248, invocation_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, invocation_timestamp=2023-12-12T06:04:47.225Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d59d7df-1285-4272-a14a-ac5cdecd1a73, session_timestamp=2023-12-12T06:04:47.225Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,153Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,153Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1485ccb9-1c7e-4526-aa52-d46c4d54900f, invocation_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, invocation_timestamp=2023-12-12T06:04:45.247Z, origin=Only For Testing, session_id=ed93e3a4-1e75-4141-ae51-993caf6bfe5e, session_timestamp=2023-12-12T06:04:45.247Z, thread-id=306, tx_id=1F67A14BA8D54E1177ED79E77B684487987643F8C3FDCE23520A29CC588C50CA}
[INFO ] 2023-12-12T06:04:48,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:48,209Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T06:04:48,267Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:48,267Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:48,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:48,282Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T06:04:48,315Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:48,315Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:48,317Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:48,319Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T06:04:48,344Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:48,344Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:48,678Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:04:48,681Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:48,682Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:48,743Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:48,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:48,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:48,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:48,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:48,827Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:48,827Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:48,838Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:48,838Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:48,838Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:48,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:48.356Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:49,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:49,736Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:49,736Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:50,314Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:50,325Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:50,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:50,328Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:50,382Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325) {}
[INFO ] 2023-12-12T06:04:50,400Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:50,400Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:50,400Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:50,434Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:50,434Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:50,521Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:50,534Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:04:50,576Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325) {}
[INFO ] 2023-12-12T06:04:50,577Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:50,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:50,578Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:50,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:50,578Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:50,601Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:04:50,603Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:50,605Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:50,671Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:50,744Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:50,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:50,751Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:50,751Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:50,851Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:50,851Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:50,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:50,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:50,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:50,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:48.356Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:51,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:51,612Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:51,613Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:52,006Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:52,021Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:52,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:52,026Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:52,053Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021) {}
[INFO ] 2023-12-12T06:04:52,070Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:52,072Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:52,072Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:52,106Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:52,107Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:52,158Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:52,188Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021) {}
[INFO ] 2023-12-12T06:04:52,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:52,198Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:52,198Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:52,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:52,212Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:52,224Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:52,224Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:52,224Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:52,224Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:52,237Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:04:52,238Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:52,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:52,265Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060448.356-DCD70B4E0ED9CC34/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:52,344Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:52,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:52,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:52,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:52,452Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:52,456Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:52,488Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:52,488Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:52,488Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:52,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:48.356Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:53,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:53,265Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:53,266Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:53,597Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:53,612Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:53,617Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,617Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:53,644Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612) {}
[INFO ] 2023-12-12T06:04:53,657Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:53,659Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:53,659Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:53,692Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,692Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:53,755Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:53,798Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612) {}
[INFO ] 2023-12-12T06:04:53,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:53,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361090325), owningKey=DLEabzfBVUmv3VhwLCgHEJw2JeVfcj8c7ypgmbFYN5yTSR {}
[INFO ] 2023-12-12T06:04:53,805Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:53,826Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,826Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:53,846Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361092021), owningKey=DLh7WGaEr2oQ3RC7pubvzXgwaPNVMgB66a2WWTPpx4Ddy {}
[INFO ] 2023-12-12T06:04:53,846Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:53,863Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,863Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:53,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,875Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:53,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361093612), owningKey=DLCmBV8GEgwQi85FiXSUhgsVAh1ooQWrFnvo6McAAQssCg {}
[INFO ] 2023-12-12T06:04:53,875Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:04:53,876Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:53,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:04:53,876Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:53,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T06:04:54,087Z [Mock network] internal.Verifier. - Error validating transaction AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T06:04:54,096Z [Mock network] internal.Verifier. - Error validating transaction AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T06:04:54,096Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
[INFO ] 2023-12-12T06:04:54,175Z [Mock network] statemachine.StaffedFlowHospital. - Flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Invocation, sessionId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=31F0402A9DB5595E1BB006C971C55AF85DF9A29FD88FECBC180C14EA19C18E4C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4DFF680A05BA361BEF739D984B8F3C79502638FA2B772EB796BAEF4DE6F7D507), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@2ad4c14, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=f0894494-cace-4df7-b498-ccbfa56e1d97, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@7ea760df[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
[INFO ] 2023-12-12T06:04:54,180Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:04:54,187Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:04:54,211Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] errored, dumping all transitions:

 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:53.896Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[780aecce-18d7-4fd7-94dd-9a72feb29f41], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Invocation, sessionId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=31F0402A9DB5595E1BB006C971C55AF85DF9A29FD88FECBC180C14EA19C18E4C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4DFF680A05BA361BEF739D984B8F3C79502638FA2B772EB796BAEF4DE6F7D507), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e])
    SignalFlowHasStarted(flowId=[780aecce-18d7-4fd7-94dd-9a72feb29f41])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.191Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6234863647550168171, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:04:53.881Z
    2023-12-12T06:04:54.104Z


 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.198Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.200Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:04:54.104Z
    2023-12-12T06:04:54.200Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
[WARN ] 2023-12-12T06:04:54,212Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:04:54,213Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:04:54,295Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] errored, dumping all transitions:

 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:53.896Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[780aecce-18d7-4fd7-94dd-9a72feb29f41], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Invocation, sessionId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=31F0402A9DB5595E1BB006C971C55AF85DF9A29FD88FECBC180C14EA19C18E4C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4DFF680A05BA361BEF739D984B8F3C79502638FA2B772EB796BAEF4DE6F7D507), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e])
    SignalFlowHasStarted(flowId=[780aecce-18d7-4fd7-94dd-9a72feb29f41])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2cbb6f2e]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.191Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6234863647550168171, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:04:53.881Z
    2023-12-12T06:04:54.104Z


 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.198Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.200Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:04:54.104Z
    2023-12-12T06:04:54.200Z


 --- Transition of flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] ---
  Timestamp: 2023-12-12T06:04:54.285Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0, errorId=-6234863647550168171)], sessions=[], senderUUID=f0894494-cace-4df7-b498-ccbfa56e1d97)
    CreateTransaction
    RemoveCheckpoint(id=[780aecce-18d7-4fd7-94dd-9a72feb29f41], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=780aecce-18d7-4fd7-94dd-9a72feb29f41)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[780aecce-18d7-4fd7-94dd-9a72feb29f41], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-6234863647550168171, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Invocation, sessionId=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, timestamp: 2023-12-12T06:04:53.878Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=31F0402A9DB5595E1BB006C971C55AF85DF9A29FD88FECBC180C14EA19C18E4C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@30bf3d02, errorState=Errored(errors=[FlowError(errorId=-6234863647550168171, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@2ad4c14, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=f0894494-cace-4df7-b498-ccbfa56e1d97, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@7ea760df[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=4DFF680A05BA361BEF739D984B8F3C79502638FA2B772EB796BAEF4DE6F7D507)
    net.corda.node.services.statemachine.FlowState$Finished@30bf3d02
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2023-12-12T06:04:54.200Z
    2023-12-12T06:04:54.212Z
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
[WARN ] 2023-12-12T06:04:54,295Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [780aecce-18d7-4fd7-94dd-9a72feb29f41] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=780aecce-18d7-4fd7-94dd-9a72feb29f41, invocation_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, invocation_timestamp=2023-12-12T06:04:53.878Z, origin=Only For Testing, session_id=74e40ed9-9775-4926-8c15-a8c69ff4b1bb, session_timestamp=2023-12-12T06:04:53.878Z, thread-id=588}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: AA3BE5590D352F84CDAB05CAEB0FC2821F9C8E94604801C172EB42B7CBC510A0
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:04:54,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:54,341Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T06:04:54,384Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:54,384Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:54,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:54,396Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T06:04:54,419Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:54,419Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:54,421Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:04:54,427Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T06:04:54,451Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:04:54,451Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:54,741Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:04:54,748Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:54,749Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:54,829Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:54,882Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:54,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:54,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:54,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:54,903Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:54,903Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:54,913Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:54,913Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:54,913Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:54,929Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:54.459Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:55,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:55,626Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:55,628Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:56,030Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:04:56,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:56,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:56,045Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:56,087Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041) {}
[INFO ] 2023-12-12T06:04:56,103Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:56,104Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:56,104Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:56,134Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:56,134Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:56,196Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:56,205Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:04:56,244Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041) {}
[INFO ] 2023-12-12T06:04:56,246Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:56,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:56,250Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:56,251Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:56,251Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:56,267Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:04:56,271Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:56,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:56,316Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:56,383Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:56,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:56,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:56,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:56,467Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:56,475Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:56,498Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:56,498Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:56,498Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:56,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:54.459Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:57,218Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:57,225Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:57,226Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:57,539Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:57,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:57,559Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:57,559Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:57,581Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556) {}
[INFO ] 2023-12-12T06:04:57,595Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:57,597Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:57,597Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:57,629Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:57,629Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:57,699Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:57,728Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556) {}
[INFO ] 2023-12-12T06:04:57,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:57,731Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:57,731Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:57,742Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:57,742Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:57,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:57,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:57,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:57,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:57,765Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:04:57,765Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:04:57,768Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:04:57,826Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060454.460-95CCC8CBE5C8B21B/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:04:57,868Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:04:57,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:04:57,872Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:04:57,872Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:04:57,954Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:04:57,954Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8, alias: identity-private-key {}
[INFO ] 2023-12-12T06:04:57,960Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:04:57,960Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:04:57,960Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:57,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:04:54.459Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:04:58,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:04:58,365Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:58,366Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:58,788Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:04:58,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:04:58,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:58,832Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:58,878Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818) {}
[INFO ] 2023-12-12T06:04:58,892Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:04:58,894Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:04:58,894Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:04:58,934Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:58,934Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:58,990Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:04:59,025Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818) {}
[INFO ] 2023-12-12T06:04:59,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:04:59,030Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361096041), owningKey=DLHWWb5uzNYoR3Xq8Yp6yv3ZbFie2QeMhhJNBpLzSBxmGd {}
[INFO ] 2023-12-12T06:04:59,030Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:04:59,051Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:59,051Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:59,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361097556), owningKey=DLG4ovkW4SJvkScZnbipxFcQGJp6MQW9DHpLD533P9WCZq {}
[INFO ] 2023-12-12T06:04:59,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:59,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:59,071Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:04:59,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:59,081Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:04:59,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361098818), owningKey=DLBoQuRhMfvBn6WK5jXdmcmqZ2WSXaHypsLLoyX55Bbrf8 {}
[INFO ] 2023-12-12T06:04:59,081Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:04:59,081Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:59,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:04:59,081Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:04:59,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:04:59,444Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,502Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,805Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2cba44bc-6fa9-46cc-ba41-bdb47ebec951, invocation_id=184b5eee-bc87-430e-962f-6abf93741ba8, invocation_timestamp=2023-12-12T06:04:59.083Z, origin=Only For Testing, session_id=184b5eee-bc87-430e-962f-6abf93741ba8, session_timestamp=2023-12-12T06:04:59.083Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,806Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2cba44bc-6fa9-46cc-ba41-bdb47ebec951, invocation_id=184b5eee-bc87-430e-962f-6abf93741ba8, invocation_timestamp=2023-12-12T06:04:59.083Z, origin=Only For Testing, session_id=184b5eee-bc87-430e-962f-6abf93741ba8, session_timestamp=2023-12-12T06:04:59.083Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,899Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2cba44bc-6fa9-46cc-ba41-bdb47ebec951, invocation_id=184b5eee-bc87-430e-962f-6abf93741ba8, invocation_timestamp=2023-12-12T06:04:59.083Z, origin=Only For Testing, session_id=184b5eee-bc87-430e-962f-6abf93741ba8, session_timestamp=2023-12-12T06:04:59.083Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,941Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,968Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,975Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:04:59,993Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=7f9bd06b-d46d-4dd7-9750-9a128b778266, invocation_id=49c04ad7-508d-4a11-997c-f278fd8ba856, invocation_timestamp=2023-12-12T06:04:59.389Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49c04ad7-508d-4a11-997c-f278fd8ba856, session_timestamp=2023-12-12T06:04:59.389Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:05:00,032Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2cba44bc-6fa9-46cc-ba41-bdb47ebec951, invocation_id=184b5eee-bc87-430e-962f-6abf93741ba8, invocation_timestamp=2023-12-12T06:04:59.083Z, origin=Only For Testing, session_id=184b5eee-bc87-430e-962f-6abf93741ba8, session_timestamp=2023-12-12T06:04:59.083Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:05:00,032Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2cba44bc-6fa9-46cc-ba41-bdb47ebec951, invocation_id=184b5eee-bc87-430e-962f-6abf93741ba8, invocation_timestamp=2023-12-12T06:04:59.083Z, origin=Only For Testing, session_id=184b5eee-bc87-430e-962f-6abf93741ba8, session_timestamp=2023-12-12T06:04:59.083Z, thread-id=851, tx_id=71DF50E6BD37E44B5DB72A50E494B4053E8876916C3BAB157EBDBC7C7B723386}
[INFO ] 2023-12-12T06:05:00,065Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:00,076Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T06:05:00,098Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:00,098Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:00,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:00,109Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T06:05:00,134Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:00,134Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:00,136Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:00,138Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T06:05:00,148Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:00,148Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:00,400Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:05:00,404Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:00,405Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:00,469Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:00,514Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:00,516Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:00,518Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:00,518Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:00,554Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:00,555Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:00,565Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:00,565Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:00,565Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:00,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:00.155Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:01,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:01,173Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:01,174Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:01,555Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:01,566Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:01,569Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:01,569Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:01,603Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566) {}
[INFO ] 2023-12-12T06:05:01,620Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:01,621Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:01,621Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:01,645Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:01,645Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:01,693Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:01,699Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:05:01,745Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566) {}
[INFO ] 2023-12-12T06:05:01,745Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:01,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:01,746Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:01,747Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:01,747Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:01,759Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:05:01,761Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:01,762Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:01,809Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:01,865Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:01,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:01,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:01,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:01,960Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:01,965Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:01,992Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:01,992Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:01,992Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:02,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:00.155Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:02,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:02,493Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:02,493Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:02,824Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:02,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:02,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:02,853Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:02,875Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848) {}
[INFO ] 2023-12-12T06:05:02,882Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:02,883Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:02,883Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:02,906Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:02,906Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:02,961Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:02,990Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848) {}
[INFO ] 2023-12-12T06:05:02,990Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:02,992Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:02,992Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:03,011Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:03,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:03,028Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:03,028Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:03,028Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:03,028Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:03,040Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:05:03,043Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:03,044Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:03,079Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060500.156-81D5BC4CDFE04FF6/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:03,121Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:03,122Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:03,123Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:03,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:03,196Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:03,198Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:03,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:03,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:03,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:03,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:00.155Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:03,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:03,939Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:03,939Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:04,263Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:04,293Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:04,301Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,301Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:04,330Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293) {}
[INFO ] 2023-12-12T06:05:04,344Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:04,346Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:04,346Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:04,383Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,383Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:04,433Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:04,484Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293) {}
[INFO ] 2023-12-12T06:05:04,484Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:04,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361101566), owningKey=DL4qvCQz6RzmU2PFqyDZcvX7H1qpZq1nGAkV19BNgfyuC7 {}
[INFO ] 2023-12-12T06:05:04,486Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:04,504Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,504Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:04,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361102848), owningKey=DLFF6sRVcMCXW3hRwrmECdYHBMS3pNgus5gHfH9v9EyWtr {}
[INFO ] 2023-12-12T06:05:04,520Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:04,537Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,537Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:04,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,545Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:04,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361104293), owningKey=DL2pKk5LnwGMQwsQEWgCE733FuGgxjHFwTuomXnQ1Eu2pw {}
[INFO ] 2023-12-12T06:05:04,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:05:04,546Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:04,546Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:05:04,546Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:04,546Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:04,795Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:04,822Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,003Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1e694793-5b23-4302-851e-1048bde08004, invocation_id=c71f12e5-309d-4670-91ff-33cf6385c667, invocation_timestamp=2023-12-12T06:05:04.548Z, origin=Only For Testing, session_id=c71f12e5-309d-4670-91ff-33cf6385c667, session_timestamp=2023-12-12T06:05:04.548Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,003Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1e694793-5b23-4302-851e-1048bde08004, invocation_id=c71f12e5-309d-4670-91ff-33cf6385c667, invocation_timestamp=2023-12-12T06:05:04.548Z, origin=Only For Testing, session_id=c71f12e5-309d-4670-91ff-33cf6385c667, session_timestamp=2023-12-12T06:05:04.548Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,061Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1e694793-5b23-4302-851e-1048bde08004, invocation_id=c71f12e5-309d-4670-91ff-33cf6385c667, invocation_timestamp=2023-12-12T06:05:04.548Z, origin=Only For Testing, session_id=c71f12e5-309d-4670-91ff-33cf6385c667, session_timestamp=2023-12-12T06:05:04.548Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,115Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,135Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,140Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,156Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=33ef4840-208c-4921-b1cf-c4cb4aba6df3, invocation_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, invocation_timestamp=2023-12-12T06:05:04.758Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58a60f6b-34c1-4fae-994d-e8c9793aa0cd, session_timestamp=2023-12-12T06:05:04.758Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,192Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1e694793-5b23-4302-851e-1048bde08004, invocation_id=c71f12e5-309d-4670-91ff-33cf6385c667, invocation_timestamp=2023-12-12T06:05:04.548Z, origin=Only For Testing, session_id=c71f12e5-309d-4670-91ff-33cf6385c667, session_timestamp=2023-12-12T06:05:04.548Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,192Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1e694793-5b23-4302-851e-1048bde08004, invocation_id=c71f12e5-309d-4670-91ff-33cf6385c667, invocation_timestamp=2023-12-12T06:05:04.548Z, origin=Only For Testing, session_id=c71f12e5-309d-4670-91ff-33cf6385c667, session_timestamp=2023-12-12T06:05:04.548Z, thread-id=1131, tx_id=156F22151148565B4570404F31A600B20C66515ABA66683E6ED4525C9C7FE7ED}
[INFO ] 2023-12-12T06:05:05,241Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:05,256Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T06:05:05,285Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:05,285Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:05,290Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:05,294Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T06:05:05,309Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:05,309Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:05,310Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:05,314Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T06:05:05,325Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:05,325Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:05,543Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:05:05,546Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:05,547Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:05,600Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:05,647Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:05,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:05,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:05,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:05,658Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:05,658Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:05,669Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:05,669Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:05,669Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:05,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:05.331Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:06,253Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:06,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:06,259Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:06,742Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:06,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:06,778Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:06,778Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:06,881Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764) {}
[INFO ] 2023-12-12T06:05:06,913Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:06,917Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:06,917Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:06,970Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:06,970Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:07,045Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:07,055Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:05:07,087Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764) {}
[INFO ] 2023-12-12T06:05:07,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:07,089Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:07,089Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:07,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:07,090Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:07,106Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:05:07,107Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:07,108Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:07,148Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:07,175Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:07,175Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:07,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:07,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:07,254Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:07,254Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:07,261Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:07,261Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:07,261Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:07,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:05.331Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:07,698Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:07,700Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:07,700Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:08,024Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:08,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:08,038Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:08,038Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:08,052Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033) {}
[INFO ] 2023-12-12T06:05:08,063Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:08,063Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:08,063Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:08,085Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:08,085Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:08,117Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:08,135Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033) {}
[INFO ] 2023-12-12T06:05:08,136Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:08,137Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:08,137Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:08,148Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:08,148Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:08,160Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:08,160Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:08,160Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:08,160Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:08,168Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:05:08,169Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:08,169Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:08,194Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060505.331-1186B3707D0E6A48/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:08,241Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:08,247Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:08,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:08,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:08,312Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:08,312Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:08,317Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:08,317Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:08,317Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:08,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:05.331Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:08,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:08,795Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:08,796Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:09,141Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:09,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:09,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:09,206Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164) {}
[INFO ] 2023-12-12T06:05:09,220Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:09,222Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:09,222Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:09,267Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,267Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:09,323Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:09,342Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164) {}
[INFO ] 2023-12-12T06:05:09,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:09,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361106764), owningKey=DL3oensQ5v1cM3dzWCQnXoY1kyoCCvUZ7se9Jq27jkkFMz {}
[INFO ] 2023-12-12T06:05:09,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:09,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,370Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:09,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361108033), owningKey=DLGiYM3eNnQpzNsc1sMpWn2wUH1VtkrW41wsUXYBnDR8gm {}
[INFO ] 2023-12-12T06:05:09,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:09,392Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,392Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:09,403Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,403Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:09,403Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361109164), owningKey=DL9wCdoUeStVGz7H3WwrxcvxU4PXUjEmdQD3rwwsJyGr1m {}
[INFO ] 2023-12-12T06:05:09,403Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:05:09,404Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:09,404Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:05:09,404Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:09,404Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:09,641Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,665Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,845Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=ceb5f838-7df0-4707-a3ed-58cd3599ef16, invocation_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, invocation_timestamp=2023-12-12T06:05:09.406Z, origin=Only For Testing, session_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, session_timestamp=2023-12-12T06:05:09.406Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,845Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=ceb5f838-7df0-4707-a3ed-58cd3599ef16, invocation_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, invocation_timestamp=2023-12-12T06:05:09.406Z, origin=Only For Testing, session_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, session_timestamp=2023-12-12T06:05:09.406Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,899Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=ceb5f838-7df0-4707-a3ed-58cd3599ef16, invocation_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, invocation_timestamp=2023-12-12T06:05:09.406Z, origin=Only For Testing, session_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, session_timestamp=2023-12-12T06:05:09.406Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,939Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,960Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,965Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:09,980Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=ada033a5-d580-4cdc-961e-29dff90b4e49, invocation_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, invocation_timestamp=2023-12-12T06:05:09.609Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e700e5c0-7569-4020-9af0-5b0fbd8fc9e2, session_timestamp=2023-12-12T06:05:09.609Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:10,014Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=ceb5f838-7df0-4707-a3ed-58cd3599ef16, invocation_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, invocation_timestamp=2023-12-12T06:05:09.406Z, origin=Only For Testing, session_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, session_timestamp=2023-12-12T06:05:09.406Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:10,014Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=ceb5f838-7df0-4707-a3ed-58cd3599ef16, invocation_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, invocation_timestamp=2023-12-12T06:05:09.406Z, origin=Only For Testing, session_id=d77ac3ea-ec6d-4f04-bec9-80a3ebc37a0b, session_timestamp=2023-12-12T06:05:09.406Z, thread-id=1411, tx_id=76E5409C9F9DF063EAEE962E9CA6E18B57A3C2F8A80BBBB1EAD86E12B0CF62B3}
[INFO ] 2023-12-12T06:05:10,034Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:10,042Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T06:05:10,064Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:10,064Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:10,067Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:10,070Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T06:05:10,086Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:10,086Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:10,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:10,092Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T06:05:10,111Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:10,111Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:10,323Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:05:10,329Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:10,330Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:10,379Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:10,425Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:10,432Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:10,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:10,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:10,470Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:10,471Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:10,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:10,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:10,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:10,506Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:10.118Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:11,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:11,274Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:11,275Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:11,625Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:05:11,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:11,651Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:11,651Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:11,725Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645) {}
[INFO ] 2023-12-12T06:05:11,750Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:11,752Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:11,752Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:11,799Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:11,799Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:11,860Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:11,863Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:05:11,889Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645) {}
[INFO ] 2023-12-12T06:05:11,889Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:11,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:11,890Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:11,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:11,890Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:11,900Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:05:11,901Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:11,901Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:11,954Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:11,982Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:11,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:11,985Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:11,985Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:12,044Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:12,045Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:12,050Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:12,050Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:12,050Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:12,059Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:10.118Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:12,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:12,396Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:12,396Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:12,601Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:12,606Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:12,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:12,608Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:12,618Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606) {}
[INFO ] 2023-12-12T06:05:12,625Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:12,626Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:12,626Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:12,657Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:12,657Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:12,681Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:12,715Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606) {}
[INFO ] 2023-12-12T06:05:12,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:12,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:12,720Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:12,739Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:12,739Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:12,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:12,746Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:12,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:12,746Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:12,759Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:05:12,759Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:05:12,761Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:05:12,800Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060510.119-F2661B3AD75CE87F/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:05:12,850Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:12,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:05:12,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:05:12,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:05:12,903Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:05:12,903Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp, alias: identity-private-key {}
[INFO ] 2023-12-12T06:05:12,926Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:05:12,928Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:05:12,929Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:12,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:05:10.118Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:05:13,395Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:05:13,399Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:13,400Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:13,710Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:05:13,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:05:13,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,738Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:13,768Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732) {}
[INFO ] 2023-12-12T06:05:13,778Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:05:13,780Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:05:13,780Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:05:13,805Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,805Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:13,849Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=2A11C12EF38AAE21E6175FD56BD32512D1B39292F91E113DABA77149EA6445BF uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:05:13,871Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732) {}
[INFO ] 2023-12-12T06:05:13,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:05:13,874Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361111645), owningKey=DL8xx5HJiqM9uHgfS84XDLXYHTscCstFqs9DYTik73nJem {}
[INFO ] 2023-12-12T06:05:13,874Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:05:13,885Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,885Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:13,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361112606), owningKey=DL4XqKXVz3jHhq2Dwxd2dWRXYjKJGG1SQqmzSgrthsvwAw {}
[INFO ] 2023-12-12T06:05:13,898Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:13,910Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,910Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:05:13,914Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,914Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:05:13,914Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361113732), owningKey=DLGvPBMoHW3TxkLS5CEp6HFLoUb8gtdfQZxNj8TCiKBAPp {}
[INFO ] 2023-12-12T06:05:13,914Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:05:13,915Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:13,915Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:05:13,915Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:05:13,915Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:05:14,160Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,195Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,409Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=86e69df8-3184-427f-a3fe-ad21be1636cc, invocation_id=4165ba47-619f-4f38-877b-762cfeeefe50, invocation_timestamp=2023-12-12T06:05:13.917Z, origin=Only For Testing, session_id=4165ba47-619f-4f38-877b-762cfeeefe50, session_timestamp=2023-12-12T06:05:13.917Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,409Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=86e69df8-3184-427f-a3fe-ad21be1636cc, invocation_id=4165ba47-619f-4f38-877b-762cfeeefe50, invocation_timestamp=2023-12-12T06:05:13.917Z, origin=Only For Testing, session_id=4165ba47-619f-4f38-877b-762cfeeefe50, session_timestamp=2023-12-12T06:05:13.917Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,480Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=86e69df8-3184-427f-a3fe-ad21be1636cc, invocation_id=4165ba47-619f-4f38-877b-762cfeeefe50, invocation_timestamp=2023-12-12T06:05:13.917Z, origin=Only For Testing, session_id=4165ba47-619f-4f38-877b-762cfeeefe50, session_timestamp=2023-12-12T06:05:13.917Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,525Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,544Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,548Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,568Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=6c62a199-f17d-437c-a746-e9a40560aebe, invocation_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, invocation_timestamp=2023-12-12T06:05:14.128Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8c4ea82a-bbb7-47d3-981f-0b31b5941a23, session_timestamp=2023-12-12T06:05:14.128Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,600Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=86e69df8-3184-427f-a3fe-ad21be1636cc, invocation_id=4165ba47-619f-4f38-877b-762cfeeefe50, invocation_timestamp=2023-12-12T06:05:13.917Z, origin=Only For Testing, session_id=4165ba47-619f-4f38-877b-762cfeeefe50, session_timestamp=2023-12-12T06:05:13.917Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,600Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=86e69df8-3184-427f-a3fe-ad21be1636cc, invocation_id=4165ba47-619f-4f38-877b-762cfeeefe50, invocation_timestamp=2023-12-12T06:05:13.917Z, origin=Only For Testing, session_id=4165ba47-619f-4f38-877b-762cfeeefe50, session_timestamp=2023-12-12T06:05:13.917Z, thread-id=1691, tx_id=A31866FAEC2728CC21DCC12F6644A8FB9172BB4683C1A83586993630F52BD9EE}
[INFO ] 2023-12-12T06:05:14,755Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:14,768Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T06:05:14,795Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:14,795Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:14,801Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:14,813Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T06:05:14,826Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:14,826Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:05:14,828Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:05:14,830Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T06:05:14,842Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:05:14,842Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:01,689Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T06:10:02,278Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:10:05,604Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:10:06,987Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T06:10:07,043Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:10:07,046Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:10:07,786Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:07,798Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T06:10:08,443Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:08,443Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:08,443Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T06:10:08,660Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:08,672Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:10:09,436Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T06:10:10,293Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:10:10,294Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:10:10,379Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:10:10,379Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:10:10,379Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:10:12,453Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:12,453Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T06:10:12,753Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:12,753Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T06:10:12,803Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:12,804Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T06:10:13,009Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:10:13,009Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:13,185Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:13,212Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:13,212Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:13,213Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:13,227Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:13,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:13,240Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:13,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:13,253Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:13,304Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:13,316Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:13,317Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:13,416Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:13,442Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:13,442Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:13,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:13,443Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:10:13,665Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:13,666Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:10:13,702Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,327Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:10:14,339Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,362Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:14,363Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,399Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,399Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,412Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T06:10:14,498Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,499Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T06:10:14,524Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,524Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,524Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:10:14,536Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,537Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T06:10:14,561Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:10:14,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,584Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:14,596Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,597Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:14,597Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,597Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:10:14,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:10:14,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:10:14,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,648Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:10:14,648Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:10:14,648Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,648Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T06:10:14,660Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,661Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T06:10:14,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T06:10:14,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T06:10:14,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:10:14,747Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:10:14,760Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,773Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T06:10:14,786Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:10:14,799Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:14,799Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T06:10:14,799Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:10:14,828Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:10:14,853Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T06:10:14,853Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:10:14,893Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T06:10:26,481Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:10:26,495Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:10:26,618Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:10:26,961Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:10:29,452Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:29,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:10:29,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:10:29,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:10:29,921Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:10:29,927Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr, alias: identity-private-key {}
[INFO ] 2023-12-12T06:10:30,137Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:10:30,138Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:10:30,142Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:10:30,240Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:09:59.121Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:10:38,883Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:10:39,038Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:10:39,060Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:10:45,628Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:10:47,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:10:47,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:47,201Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:10:47,701Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144) {}
[INFO ] 2023-12-12T06:10:47,839Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:10:47,881Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:10:47,890Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:10:48,015Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:48,016Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:48,582Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:10:48,600Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:10:50,259Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144) {}
[INFO ] 2023-12-12T06:10:50,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:10:50,275Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:50,278Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:50,287Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:50,287Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:50,402Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:10:50,408Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:10:50,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:10:50,508Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:10:50,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:50,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:10:50,698Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:10:50,698Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:10:50,788Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:10:50,788Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW, alias: identity-private-key {}
[INFO ] 2023-12-12T06:10:50,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:10:50,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:10:50,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:10:50,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:09:59.121Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:10:52,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:10:52,162Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:52,162Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:52,771Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:52,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:10:52,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:52,816Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:52,856Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792) {}
[INFO ] 2023-12-12T06:10:52,879Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:10:52,880Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:10:52,880Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:10:52,940Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:52,940Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:53,015Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:10:53,080Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792) {}
[INFO ] 2023-12-12T06:10:53,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:10:53,097Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:53,097Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:10:53,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:53,120Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:53,132Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:53,133Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:53,133Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:53,133Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:53,148Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:10:53,151Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:10:53,155Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:10:53,213Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-060959.267-9221A35ACD693C60/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:10:53,272Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:53,282Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:10:53,286Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:10:53,286Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:10:53,352Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:10:53,353Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT, alias: identity-private-key {}
[INFO ] 2023-12-12T06:10:53,364Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:10:53,364Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:10:53,364Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:10:53,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:09:59.121Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:10:54,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:10:54,326Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:54,326Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:54,776Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:10:54,844Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:10:54,851Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:54,851Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:54,889Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844) {}
[INFO ] 2023-12-12T06:10:54,912Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:10:54,916Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:10:54,917Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:10:54,967Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:54,967Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:55,036Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:10:55,085Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844) {}
[INFO ] 2023-12-12T06:10:55,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:10:55,095Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361447144), owningKey=DLE8rJv7UQx5GpQgu9zrZf8xHt6kmDwDC2YC9kV2fvmAEr {}
[INFO ] 2023-12-12T06:10:55,095Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:10:55,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:55,127Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:55,162Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361452792), owningKey=DLEhFydDGNmmWWn3PWtDrd25sReFAZ6uvBp1govapGhPVW {}
[INFO ] 2023-12-12T06:10:55,162Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:55,189Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:55,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:10:55,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:55,203Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:10:55,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361454844), owningKey=DL3qpHUuxxk2geUGJEQLLB9ogTQC2c2ocZ4pSqS1dSqmiT {}
[INFO ] 2023-12-12T06:10:55,203Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:10:55,220Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:10:55,220Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:10:55,229Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:10:55,229Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:10:55,997Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302}
[WARN ] 2023-12-12T06:10:55,998Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302}
[INFO ] 2023-12-12T06:10:57,367Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:57,482Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:57,881Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:57,881Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,133Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,325Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,369Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,384Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,416Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=47f99899-3006-4061-a7bb-609e1038b104, invocation_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, invocation_timestamp=2023-12-12T06:10:57.253Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2feff9a7-a72b-4c00-b270-0088f9b32c51, session_timestamp=2023-12-12T06:10:57.253Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,472Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,472Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=891c81ec-d30f-4a1a-9124-c3f92bdfb33c, invocation_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, invocation_timestamp=2023-12-12T06:10:55.353Z, origin=Only For Testing, session_id=8db284aa-405f-4cc1-ab2b-9e1418ba7265, session_timestamp=2023-12-12T06:10:55.353Z, thread-id=302, tx_id=3DD31A3FF9C3D3F74DA123E0FC51C2FF8E53C5FD7B15CE6E7CCC02AD0ADA3F82}
[INFO ] 2023-12-12T06:10:58,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:10:58,512Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T06:10:58,560Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:10:58,560Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:58,568Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:10:58,572Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T06:10:58,604Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:10:58,604Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:58,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:10:58,611Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T06:10:58,638Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:10:58,638Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:58,913Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:10:58,915Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:10:58,917Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:10:58,970Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:10:59,032Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:10:59,036Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:10:59,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:10:59,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:10:59,054Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:10:59,054Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE, alias: identity-private-key {}
[INFO ] 2023-12-12T06:10:59,065Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:10:59,065Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:10:59,065Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:10:59,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:10:58.655Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:00,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:00,022Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:00,022Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:00,610Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:00,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:00,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:00,628Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:00,682Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624) {}
[INFO ] 2023-12-12T06:11:00,704Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:00,705Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:00,705Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:00,739Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:00,739Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:00,818Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:00,829Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:11:00,874Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624) {}
[INFO ] 2023-12-12T06:11:00,875Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:00,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:00,876Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:00,877Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:00,877Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:00,893Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:11:00,894Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:00,898Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:00,936Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:00,998Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:01,002Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:01,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:01,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:01,056Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:01,057Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:01,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:01,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:01,081Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:01,090Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:10:58.655Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:01,867Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:01,872Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:01,872Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:02,290Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:02,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:02,327Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:02,327Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:02,360Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318) {}
[INFO ] 2023-12-12T06:11:02,381Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:02,391Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:02,391Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:02,432Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:02,433Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:02,503Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:02,553Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318) {}
[INFO ] 2023-12-12T06:11:02,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:02,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:02,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:02,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:02,579Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:02,590Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:02,590Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:02,591Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:02,591Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:02,605Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:11:02,607Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:02,610Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:02,642Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061058.655-13DB5F67565474DC/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:02,713Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:02,714Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:02,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:02,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:02,778Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:02,778Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:02,784Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:02,784Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:02,785Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:02,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:10:58.655Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:03,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:03,336Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:03,336Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:03,730Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:03,740Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:03,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:03,761Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740) {}
[INFO ] 2023-12-12T06:11:03,771Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:03,772Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:03,772Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:03,796Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,796Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:03,845Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:03,894Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740) {}
[INFO ] 2023-12-12T06:11:03,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:03,905Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361460624), owningKey=DLqSkoP8LRjFVUQWcfBMNFVMsAArUJXNsAALhnYPerTJE {}
[INFO ] 2023-12-12T06:11:03,905Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:03,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:03,950Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361462318), owningKey=DLFjjEF5ZXzQK6xtadW1KyupzDcxqUxfBpwFqtYmeR8YQy {}
[INFO ] 2023-12-12T06:11:03,950Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:03,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,971Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:03,986Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,986Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:03,986Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361463740), owningKey=DLANCcKH1PZ4V4PddptxqnQkLa3Pdkiue7DQRrDfLNYPHR {}
[INFO ] 2023-12-12T06:11:03,986Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:11:03,989Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:03,989Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:11:03,989Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:03,989Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T06:11:04,183Z [Mock network] internal.Verifier. - Error validating transaction DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T06:11:04,196Z [Mock network] internal.Verifier. - Error validating transaction DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T06:11:04,196Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
[INFO ] 2023-12-12T06:11:04,240Z [Mock network] statemachine.StaffedFlowHospital. - Flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Invocation, sessionId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=7349495F0E41279DEA973B17E8F0C686F621101DA893F7B964A52A6945BA8291), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F192299BEC54D5F7507A3A71E6273D0916940307DCA6013AB365CE7EE9C58AD8), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@790923a7, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=0a54dfec-4d38-4ef0-aaef-3de2a983dce7, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@7499e34[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
[INFO ] 2023-12-12T06:11:04,246Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:11:04,252Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:11:04,286Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] errored, dumping all transitions:

 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.020Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[70b52d22-15d5-4629-9b2c-b1d56e617ed7], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Invocation, sessionId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=7349495F0E41279DEA973B17E8F0C686F621101DA893F7B964A52A6945BA8291), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F192299BEC54D5F7507A3A71E6273D0916940307DCA6013AB365CE7EE9C58AD8), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5])
    SignalFlowHasStarted(flowId=[70b52d22-15d5-4629-9b2c-b1d56e617ed7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.258Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-880585215481548953, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:11:04Z
    2023-12-12T06:11:04.208Z
isFlowResumed: 
    true
    false


 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.271Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.273Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:11:04.208Z
    2023-12-12T06:11:04.273Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
[WARN ] 2023-12-12T06:11:04,286Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:11:04,287Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:11:04,351Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] errored, dumping all transitions:

 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.020Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[70b52d22-15d5-4629-9b2c-b1d56e617ed7], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Invocation, sessionId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=7349495F0E41279DEA973B17E8F0C686F621101DA893F7B964A52A6945BA8291), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F192299BEC54D5F7507A3A71E6273D0916940307DCA6013AB365CE7EE9C58AD8), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5])
    SignalFlowHasStarted(flowId=[70b52d22-15d5-4629-9b2c-b1d56e617ed7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55fd61c5]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.258Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-880585215481548953, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:11:04Z
    2023-12-12T06:11:04.208Z
isFlowResumed: 
    true
    false


 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.271Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.273Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:11:04.208Z
    2023-12-12T06:11:04.273Z


 --- Transition of flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] ---
  Timestamp: 2023-12-12T06:11:04.340Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA, errorId=-880585215481548953)], sessions=[], senderUUID=0a54dfec-4d38-4ef0-aaef-3de2a983dce7)
    CreateTransaction
    RemoveCheckpoint(id=[70b52d22-15d5-4629-9b2c-b1d56e617ed7], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=70b52d22-15d5-4629-9b2c-b1d56e617ed7)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[70b52d22-15d5-4629-9b2c-b1d56e617ed7], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-880585215481548953, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Invocation, sessionId=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, timestamp: 2023-12-12T06:11:03.993Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=7349495F0E41279DEA973B17E8F0C686F621101DA893F7B964A52A6945BA8291), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@35b5ae88, errorState=Errored(errors=[FlowError(errorId=-880585215481548953, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@790923a7, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=0a54dfec-4d38-4ef0-aaef-3de2a983dce7, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@7499e34[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
numberOfCommits: 
    0
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=F192299BEC54D5F7507A3A71E6273D0916940307DCA6013AB365CE7EE9C58AD8)
    net.corda.node.services.statemachine.FlowState$Finished@35b5ae88
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-12-12T06:11:04.273Z
    2023-12-12T06:11:04.286Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
[WARN ] 2023-12-12T06:11:04,351Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [70b52d22-15d5-4629-9b2c-b1d56e617ed7] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=70b52d22-15d5-4629-9b2c-b1d56e617ed7, invocation_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, invocation_timestamp=2023-12-12T06:11:03.993Z, origin=Only For Testing, session_id=05c6bc80-b8f0-47f8-8566-e4eef4241b1e, session_timestamp=2023-12-12T06:11:03.993Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: DCBFA9AC3AB912890096DF6D20C0036A05BBAB7849DC40D20AE190D41CB0E3FA
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:11:04,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:04,390Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T06:11:04,433Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:04,433Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:04,439Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:04,442Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T06:11:04,462Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:04,462Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:04,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:04,469Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T06:11:04,479Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:04,479Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:04,703Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:11:04,706Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:04,708Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:04,769Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:04,845Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:04,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:04,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:04,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:04,869Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:04,870Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:04,880Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:04,881Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:04,881Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:04,891Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:04.486Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:05,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:05,566Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:05,566Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:05,985Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:05,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:05,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:05,996Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:06,042Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993) {}
[INFO ] 2023-12-12T06:11:06,062Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:06,062Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:06,062Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:06,088Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:06,088Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:06,150Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:06,158Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:11:06,200Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993) {}
[INFO ] 2023-12-12T06:11:06,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:06,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:06,201Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:06,202Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:06,202Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:06,223Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:11:06,224Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:06,225Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:06,265Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:06,313Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:06,314Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:06,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:06,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:06,363Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:06,363Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:06,369Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:06,369Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:06,369Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:06,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:04.486Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:07,109Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:07,118Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:07,119Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:07,587Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:07,609Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:07,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:07,616Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:07,659Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609) {}
[INFO ] 2023-12-12T06:11:07,677Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:07,679Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:07,679Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:07,724Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:07,724Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:07,790Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:07,857Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609) {}
[INFO ] 2023-12-12T06:11:07,858Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:07,862Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:07,862Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:07,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:07,879Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:07,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:07,891Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:07,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:07,891Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:07,903Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:11:07,904Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:07,906Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:07,946Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061104.487-BD587B1016CBD1CE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:08,014Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:08,016Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:08,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:08,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:08,080Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:08,080Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:08,088Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:08,088Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:08,088Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:08,092Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:04.486Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:08,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:08,692Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:08,692Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:09,041Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:09,061Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:09,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,078Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:09,107Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061) {}
[INFO ] 2023-12-12T06:11:09,125Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:09,127Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:09,127Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:09,170Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,170Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:09,258Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:09,300Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061) {}
[INFO ] 2023-12-12T06:11:09,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:09,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361465993), owningKey=DL9EXBaT2gFLnJEFruEHYRRhvuyXueVhPVMB2vmzMpPQTD {}
[INFO ] 2023-12-12T06:11:09,306Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:09,342Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,342Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:09,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361467609), owningKey=DLExwruPuh2VKFPLf8m1LqhhKbWGuGrMW7V4V8GhB9rE6F {}
[INFO ] 2023-12-12T06:11:09,354Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:09,362Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,362Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:09,372Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,373Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:09,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361469061), owningKey=DLC4JrEpSkAfHXqH4JgksUxZmGCeB25JwRshBPxnEjNv6D {}
[INFO ] 2023-12-12T06:11:09,373Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:11:09,375Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:09,375Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:11:09,375Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:09,375Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:09,716Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:09,769Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,008Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=fe4303db-5fbc-4736-adb1-97aa34f608f9, invocation_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, invocation_timestamp=2023-12-12T06:11:09.377Z, origin=Only For Testing, session_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, session_timestamp=2023-12-12T06:11:09.377Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,008Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=fe4303db-5fbc-4736-adb1-97aa34f608f9, invocation_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, invocation_timestamp=2023-12-12T06:11:09.377Z, origin=Only For Testing, session_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, session_timestamp=2023-12-12T06:11:09.377Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,054Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=fe4303db-5fbc-4736-adb1-97aa34f608f9, invocation_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, invocation_timestamp=2023-12-12T06:11:09.377Z, origin=Only For Testing, session_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, session_timestamp=2023-12-12T06:11:09.377Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,084Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,097Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,102Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,117Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=f6df84af-e5c9-4b47-a655-53fa0248d5e4, invocation_id=e5675560-d823-4f2a-9689-089567b87c1f, invocation_timestamp=2023-12-12T06:11:09.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5675560-d823-4f2a-9689-089567b87c1f, session_timestamp=2023-12-12T06:11:09.682Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,155Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=fe4303db-5fbc-4736-adb1-97aa34f608f9, invocation_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, invocation_timestamp=2023-12-12T06:11:09.377Z, origin=Only For Testing, session_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, session_timestamp=2023-12-12T06:11:09.377Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,155Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=fe4303db-5fbc-4736-adb1-97aa34f608f9, invocation_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, invocation_timestamp=2023-12-12T06:11:09.377Z, origin=Only For Testing, session_id=9a46a68e-2cff-498b-b3c9-2c7b9003e113, session_timestamp=2023-12-12T06:11:09.377Z, thread-id=847, tx_id=AF4DF7A704ED5CA75ACDEF95A58ECB932417AC9512B254A77CCB517602708968}
[INFO ] 2023-12-12T06:11:10,178Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:10,184Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T06:11:10,205Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:10,205Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:10,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:10,213Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T06:11:10,232Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:10,232Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:10,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:10,238Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T06:11:10,251Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:10,251Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:10,463Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:11:10,467Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:10,469Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:10,541Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:10,619Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:10,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:10,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:10,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:10,632Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:10,632Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:10,645Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:10,645Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:10,645Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:10,658Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:10.259Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:11,435Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:11,440Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:11,441Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:11,852Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:11,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:11,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:11,867Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:11,932Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862) {}
[INFO ] 2023-12-12T06:11:11,953Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:11,955Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:11,955Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:12,001Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:12,001Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:12,063Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:12,066Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:11:12,107Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862) {}
[INFO ] 2023-12-12T06:11:12,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:12,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:12,109Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:12,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:12,109Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:12,121Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:11:12,122Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:12,123Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:12,169Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:12,228Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:12,233Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:12,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:12,236Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:12,308Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:12,309Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:12,327Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:12,327Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:12,327Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:12,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:10.259Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:12,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:12,789Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:12,789Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:13,127Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:13,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:13,152Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:13,152Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:13,175Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147) {}
[INFO ] 2023-12-12T06:11:13,188Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:13,189Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:13,189Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:13,219Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:13,219Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:13,275Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:13,301Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147) {}
[INFO ] 2023-12-12T06:11:13,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:13,304Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:13,304Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:13,318Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:13,318Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:13,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:13,333Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:13,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:13,333Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:13,341Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:11:13,342Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:13,343Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:13,363Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061110.260-8B1D9622E4236165/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:13,390Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:13,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:13,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:13,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:13,432Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:13,432Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:13,437Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:13,437Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:13,437Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:13,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:10.259Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:13,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:13,773Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:13,773Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:14,005Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:14,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:14,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,039Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:14,050Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029) {}
[INFO ] 2023-12-12T06:11:14,056Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:14,057Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:14,057Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:14,086Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,086Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:14,121Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:14,165Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029) {}
[INFO ] 2023-12-12T06:11:14,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:14,167Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361471862), owningKey=DL6NmqtXnF4N4aryqcMqfFpywL4dS4iMgM9aYSbTVD35yh {}
[INFO ] 2023-12-12T06:11:14,167Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:14,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,181Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:14,189Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361473147), owningKey=DLtYTioxX9eN47nvewNeEAxpj5QeEKRAcRvQPHqRftJsz {}
[INFO ] 2023-12-12T06:11:14,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:14,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,203Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:14,214Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,214Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:14,215Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361474029), owningKey=DL67TecwL9Za2WhefnS7vgsXazVjyk7Kyoh6nxQpqhq12F {}
[INFO ] 2023-12-12T06:11:14,215Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:11:14,217Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:14,217Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:11:14,217Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:14,217Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:14,524Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,573Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,795Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=897bbdf2-84c0-4c31-8e5c-657094888a46, invocation_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, invocation_timestamp=2023-12-12T06:11:14.220Z, origin=Only For Testing, session_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, session_timestamp=2023-12-12T06:11:14.220Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,795Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=897bbdf2-84c0-4c31-8e5c-657094888a46, invocation_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, invocation_timestamp=2023-12-12T06:11:14.220Z, origin=Only For Testing, session_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, session_timestamp=2023-12-12T06:11:14.220Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,876Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=897bbdf2-84c0-4c31-8e5c-657094888a46, invocation_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, invocation_timestamp=2023-12-12T06:11:14.220Z, origin=Only For Testing, session_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, session_timestamp=2023-12-12T06:11:14.220Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,929Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,956Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,964Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:14,985Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=159dd101-6e2f-430f-9554-c74f7cddbe4e, invocation_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, invocation_timestamp=2023-12-12T06:11:14.472Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d12200f7-c902-4f2c-89a4-16e5ef291c7f, session_timestamp=2023-12-12T06:11:14.472Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:15,026Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=897bbdf2-84c0-4c31-8e5c-657094888a46, invocation_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, invocation_timestamp=2023-12-12T06:11:14.220Z, origin=Only For Testing, session_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, session_timestamp=2023-12-12T06:11:14.220Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:15,026Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=897bbdf2-84c0-4c31-8e5c-657094888a46, invocation_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, invocation_timestamp=2023-12-12T06:11:14.220Z, origin=Only For Testing, session_id=b7e1173d-88f4-44a3-a6c4-f57504b7661d, session_timestamp=2023-12-12T06:11:14.220Z, thread-id=1127, tx_id=E89098B33A9301D29CBF42779A6F810B1A23C7F6F7142842FDADACE1468A75F3}
[INFO ] 2023-12-12T06:11:15,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:15,092Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T06:11:15,116Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:15,116Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:15,122Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:15,127Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T06:11:15,136Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:15,136Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:15,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:15,141Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T06:11:15,154Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:15,154Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:15,352Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:11:15,354Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:15,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:15,388Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:15,422Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:15,423Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:15,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:15,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:15,429Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:15,430Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:15,438Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:15,438Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:15,438Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:15,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:15.159Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:15,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:15,908Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:15,908Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:16,326Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:16,340Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:16,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:16,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:16,412Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340) {}
[INFO ] 2023-12-12T06:11:16,437Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:16,440Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:16,440Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:16,479Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:16,479Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:16,542Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:16,548Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:11:16,585Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340) {}
[INFO ] 2023-12-12T06:11:16,587Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:16,587Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:16,587Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:16,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:16,588Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:16,600Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:11:16,601Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:16,602Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:16,630Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:16,670Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:16,674Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:16,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:16,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:16,712Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:16,713Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:16,719Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:16,719Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:16,719Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:16,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:15.159Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:17,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:17,165Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:17,165Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:17,538Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:17,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:17,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:17,557Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:17,573Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554) {}
[INFO ] 2023-12-12T06:11:17,585Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:17,587Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:17,587Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:17,609Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:17,609Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:17,660Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:17,689Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554) {}
[INFO ] 2023-12-12T06:11:17,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:17,692Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:17,692Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:17,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:17,702Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:17,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:17,711Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:17,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:17,711Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:17,725Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:11:17,726Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:17,729Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:17,752Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061115.160-EAF7CDC4CBCF8E75/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:17,786Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:17,789Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:17,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:17,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:17,839Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:17,840Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:17,853Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:17,853Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:17,853Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:17,863Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:15.159Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:18,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:18,475Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:18,476Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:18,817Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:18,838Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:18,844Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:18,844Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:18,877Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838) {}
[INFO ] 2023-12-12T06:11:18,892Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:18,894Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:18,894Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:18,936Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:18,936Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:18,981Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:19,002Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838) {}
[INFO ] 2023-12-12T06:11:19,002Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:19,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361476340), owningKey=DLGzXYFF3LN7UbPmkzdY8415Gpe2rJZXt5RdRF726JaXkv {}
[INFO ] 2023-12-12T06:11:19,004Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:19,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:19,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:19,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361477554), owningKey=DL4RDbHQt2xBvqWAF6PzysYhngCA4veiBi2Zrcuw9JWBuV {}
[INFO ] 2023-12-12T06:11:19,034Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:19,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:19,058Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:19,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:19,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:19,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361478838), owningKey=DL7QygrWsG6cQLPTaULBhSVfHyZtnM2oErs1sRGSyWeXN8 {}
[INFO ] 2023-12-12T06:11:19,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:11:19,072Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:19,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:11:19,072Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:19,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:19,317Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,342Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,527Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9e0c407f-f4f6-4c2f-8f9e-d0144a9a602d, invocation_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, invocation_timestamp=2023-12-12T06:11:19.074Z, origin=Only For Testing, session_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, session_timestamp=2023-12-12T06:11:19.074Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,527Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9e0c407f-f4f6-4c2f-8f9e-d0144a9a602d, invocation_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, invocation_timestamp=2023-12-12T06:11:19.074Z, origin=Only For Testing, session_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, session_timestamp=2023-12-12T06:11:19.074Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,596Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9e0c407f-f4f6-4c2f-8f9e-d0144a9a602d, invocation_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, invocation_timestamp=2023-12-12T06:11:19.074Z, origin=Only For Testing, session_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, session_timestamp=2023-12-12T06:11:19.074Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,632Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,648Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,652Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,670Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=16d39577-4b5c-45c5-9205-10fd23d18c9f, invocation_id=e156a754-21a7-4118-87e8-b2d18f122f89, invocation_timestamp=2023-12-12T06:11:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e156a754-21a7-4118-87e8-b2d18f122f89, session_timestamp=2023-12-12T06:11:19.280Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,699Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9e0c407f-f4f6-4c2f-8f9e-d0144a9a602d, invocation_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, invocation_timestamp=2023-12-12T06:11:19.074Z, origin=Only For Testing, session_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, session_timestamp=2023-12-12T06:11:19.074Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,699Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9e0c407f-f4f6-4c2f-8f9e-d0144a9a602d, invocation_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, invocation_timestamp=2023-12-12T06:11:19.074Z, origin=Only For Testing, session_id=0a13892e-c9dd-416f-afb3-cfdb512d40ce, session_timestamp=2023-12-12T06:11:19.074Z, thread-id=1407, tx_id=29DE3F995F4843CD62CC60D05C049FADDF0D99EF6A5C5218FFABD8DB807B60C2}
[INFO ] 2023-12-12T06:11:19,715Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:19,722Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T06:11:19,749Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:19,749Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:19,754Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:19,757Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T06:11:19,771Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:19,771Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:19,773Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:19,776Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T06:11:19,787Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:19,787Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:19,990Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:11:19,992Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:19,992Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:20,020Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:20,065Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:20,067Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:20,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:20,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:20,075Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:20,075Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:20,085Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:20,085Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:20,085Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:20,092Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:19.793Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:20,580Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:20,584Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:20,584Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:20,878Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:11:20,889Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:20,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:20,893Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:20,924Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889) {}
[INFO ] 2023-12-12T06:11:20,937Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:20,938Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:20,938Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:20,961Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:20,961Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,004Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:21,018Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:11:21,043Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889) {}
[INFO ] 2023-12-12T06:11:21,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:21,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:21,044Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:21,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,052Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:11:21,053Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:21,053Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:21,090Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:21,116Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:21,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:21,117Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:21,117Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:21,155Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:21,156Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:21,161Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:21,161Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:21,161Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:21,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:19.793Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:21,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:21,437Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:21,437Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:21,685Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:21,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:21,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:21,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:21,732Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700) {}
[INFO ] 2023-12-12T06:11:21,745Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:21,747Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:21,747Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:21,781Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:21,781Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,836Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:21,871Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700) {}
[INFO ] 2023-12-12T06:11:21,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:21,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:21,875Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:21,889Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:21,889Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:21,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:21,922Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:21,922Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:21,935Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:11:21,938Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:11:21,940Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:11:21,963Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-061119.794-2568C2E3BDE9E865/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:11:22,003Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:22,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:11:22,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:11:22,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:11:22,059Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:11:22,059Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ, alias: identity-private-key {}
[INFO ] 2023-12-12T06:11:22,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:11:22,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:11:22,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:22,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:11:19.793Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:11:22,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:11:22,613Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:22,614Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:22,972Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:11:22,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:11:23,006Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,006Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:23,045Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997) {}
[INFO ] 2023-12-12T06:11:23,061Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:11:23,063Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:11:23,063Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:11:23,104Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,104Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:23,154Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=FB37DF9C2B6F9E7D41BF1EA803552AC41B840BFB14CA2C42E262FB21B997C65B uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:11:23,182Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997) {}
[INFO ] 2023-12-12T06:11:23,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:11:23,186Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702361480889), owningKey=DLDik7dPbZmh9ZYFaz5eSAoasEAusPLg3xhVwgunxi9kpq {}
[INFO ] 2023-12-12T06:11:23,186Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:11:23,198Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,198Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:23,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702361481700), owningKey=DL96Ar7Q7LfRpx3edu1RzjzWivgmiofrQCpH9Lw14R6Die {}
[INFO ] 2023-12-12T06:11:23,212Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:23,228Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,228Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:11:23,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,237Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:11:23,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702361482997), owningKey=DL5Am3WPJHjUnMVxGUAuAy8P8FT1Xgwt2DQL9eNDUNpdpQ {}
[INFO ] 2023-12-12T06:11:23,237Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:11:23,238Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:23,238Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:11:23,238Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:11:23,238Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:11:23,463Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,486Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,671Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d5801b29-1e2e-4ca5-ab53-6d96aaddc7a4, invocation_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, invocation_timestamp=2023-12-12T06:11:23.240Z, origin=Only For Testing, session_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, session_timestamp=2023-12-12T06:11:23.240Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,672Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d5801b29-1e2e-4ca5-ab53-6d96aaddc7a4, invocation_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, invocation_timestamp=2023-12-12T06:11:23.240Z, origin=Only For Testing, session_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, session_timestamp=2023-12-12T06:11:23.240Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,750Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d5801b29-1e2e-4ca5-ab53-6d96aaddc7a4, invocation_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, invocation_timestamp=2023-12-12T06:11:23.240Z, origin=Only For Testing, session_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, session_timestamp=2023-12-12T06:11:23.240Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,794Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,814Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,818Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,843Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=dc887a02-b074-47fc-b958-c93967143e86, invocation_id=7c2313c1-8536-45fb-a542-d198a74de07a, invocation_timestamp=2023-12-12T06:11:23.436Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7c2313c1-8536-45fb-a542-d198a74de07a, session_timestamp=2023-12-12T06:11:23.436Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,871Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d5801b29-1e2e-4ca5-ab53-6d96aaddc7a4, invocation_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, invocation_timestamp=2023-12-12T06:11:23.240Z, origin=Only For Testing, session_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, session_timestamp=2023-12-12T06:11:23.240Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:23,871Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d5801b29-1e2e-4ca5-ab53-6d96aaddc7a4, invocation_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, invocation_timestamp=2023-12-12T06:11:23.240Z, origin=Only For Testing, session_id=053e7132-f138-4bc3-b9c2-34fe191f99ba, session_timestamp=2023-12-12T06:11:23.240Z, thread-id=1687, tx_id=58B580340198BDB001889C767982FAD2D65D4A5FEA5E7488D3E1507B63782CE1}
[INFO ] 2023-12-12T06:11:24,022Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:24,033Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T06:11:24,058Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:24,059Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:24,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:24,065Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T06:11:24,080Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:24,080Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:11:24,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:11:24,085Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T06:11:24,098Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:11:24,098Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:30:34,564Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T06:30:35,172Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:30:38,135Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:30:39,477Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T06:30:39,527Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:30:39,530Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:30:40,234Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:40,258Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T06:30:40,890Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:40,890Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:40,890Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T06:30:41,105Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:41,128Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:30:41,857Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T06:30:42,599Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:30:42,611Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:30:42,673Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:30:42,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:30:42,674Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:30:44,492Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:44,493Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T06:30:44,788Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:44,788Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T06:30:44,824Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:44,824Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T06:30:45,026Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:30:45,026Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:45,193Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:45,231Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:45,231Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:45,231Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:45,245Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:45,259Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:45,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:45,259Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:45,259Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:45,320Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:45,321Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:45,321Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:45,419Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:45,431Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:45,431Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:45,431Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:45,431Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:30:45,566Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:45,566Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:30:45,592Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,238Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:30:46,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,264Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:46,264Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,300Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,300Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T06:30:46,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,313Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T06:30:46,325Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,325Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T06:30:46,325Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,326Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,339Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T06:30:46,413Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,413Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T06:30:46,425Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,438Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,438Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:30:46,449Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,449Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T06:30:46,474Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:30:46,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,487Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:46,499Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,499Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:46,499Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,499Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:30:46,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,538Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:30:46,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:30:46,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:30:46,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:30:46,551Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,564Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T06:30:46,564Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,564Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T06:30:46,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,576Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T06:30:46,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,576Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,576Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T06:30:46,662Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,662Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:30:46,685Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,696Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:30:46,709Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T06:30:46,720Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:30:46,733Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:46,733Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T06:30:46,733Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:30:46,761Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:30:46,785Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T06:30:46,785Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:30:46,827Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T06:30:58,428Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:30:58,440Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:30:58,559Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:30:58,911Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:01,398Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:01,738Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:01,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:01,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:01,852Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:01,858Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:02,061Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:02,062Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:02,065Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:02,149Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:30:32.167Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:10,702Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:10,826Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:10,843Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:17,116Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:18,587Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:18,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:18,637Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:19,092Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587) {}
[INFO ] 2023-12-12T06:31:19,225Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:19,271Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:19,276Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:19,401Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:19,402Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:19,916Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:19,935Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:21,476Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587) {}
[INFO ] 2023-12-12T06:31:21,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:21,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:21,535Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:21,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:21,538Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:21,616Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:21,627Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:21,728Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:21,869Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:21,873Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:21,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:21,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:21,998Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:21,998Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:22,022Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:22,022Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:22,022Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:22,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:30:32.167Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:23,440Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:23,444Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:23,444Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:24,022Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:24,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:24,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:24,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:24,101Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044) {}
[INFO ] 2023-12-12T06:31:24,119Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:24,121Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:24,121Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:24,174Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:24,175Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:24,259Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:24,319Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044) {}
[INFO ] 2023-12-12T06:31:24,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:24,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:24,339Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:24,362Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:24,363Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:24,377Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:24,377Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:24,378Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:24,378Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:24,393Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:24,396Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:24,400Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:24,448Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063032.320-8F8DC6DEE48D479A/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:24,519Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:24,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:24,527Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:24,527Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:24,628Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:24,628Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:24,638Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:24,639Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:24,639Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:24,654Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:30:32.167Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:25,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:25,564Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:25,565Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:26,026Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:26,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:26,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,048Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:26,067Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041) {}
[INFO ] 2023-12-12T06:31:26,081Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:26,083Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:26,083Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:26,125Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,125Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:26,220Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:26,284Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041) {}
[INFO ] 2023-12-12T06:31:26,286Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:26,299Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362678587), owningKey=DL3nuZR3Ldz5Xh9XKg97hiyE2FkCV2Gr3oJyt3gR7Vbh11 {}
[INFO ] 2023-12-12T06:31:26,299Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:26,323Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,323Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:26,357Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362684044), owningKey=DL4sPdg5Pm1eJ1H54UJWCuAr3usgrAdfUDv34NhDSeAdx9 {}
[INFO ] 2023-12-12T06:31:26,357Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:26,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,373Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:26,395Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,395Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:26,395Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362686041), owningKey=DL52NNrUStqbkL6qP3B9EFJRmqvYRrVVMh9p4d1NFxjiuh {}
[INFO ] 2023-12-12T06:31:26,395Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:26,412Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:26,414Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:26,424Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:26,424Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:27,191Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302}
[WARN ] 2023-12-12T06:31:27,192Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302}
[INFO ] 2023-12-12T06:31:28,749Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:28,867Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,181Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,181Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,393Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,558Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,604Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,613Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,643Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=f353ecf5-5c4b-4471-b8ec-493fee9af9c8, invocation_id=c1b6ab87-eb1c-488e-8d58-972151219f61, invocation_timestamp=2023-12-12T06:31:28.600Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c1b6ab87-eb1c-488e-8d58-972151219f61, session_timestamp=2023-12-12T06:31:28.600Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,695Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,695Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b0d56441-c842-474e-b55f-dfac97aff8cb, invocation_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, invocation_timestamp=2023-12-12T06:31:26.551Z, origin=Only For Testing, session_id=9f3afeb0-9261-47be-ab4a-d44e44983aee, session_timestamp=2023-12-12T06:31:26.551Z, thread-id=302, tx_id=7442CB1E327FACDD352CA20325C5C0606DAA9C75949586097FFD804F32250BC0}
[INFO ] 2023-12-12T06:31:29,717Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:29,742Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T06:31:29,787Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:29,787Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:29,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:29,798Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T06:31:29,824Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:29,824Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:29,827Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:29,829Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T06:31:29,855Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:29,855Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:30,222Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:31:30,227Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:30,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:30,332Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:30,401Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:30,402Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:30,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:30,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:30,419Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:30,419Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:30,428Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:30,428Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:30,428Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:30,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:29.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:31,578Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:31,585Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:31,586Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:32,161Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:32,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:32,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:32,182Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:32,253Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176) {}
[INFO ] 2023-12-12T06:31:32,274Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:32,275Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:32,275Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:32,320Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:32,320Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:32,399Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:32,404Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:32,440Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176) {}
[INFO ] 2023-12-12T06:31:32,440Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:32,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:32,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:32,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:32,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:32,461Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:32,471Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:32,474Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:32,542Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:32,620Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:32,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:32,627Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:32,627Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:32,732Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:32,733Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:32,764Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:32,764Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:32,764Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:32,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:29.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:33,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:33,310Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:33,310Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:33,690Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:33,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:33,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:33,711Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:33,730Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706) {}
[INFO ] 2023-12-12T06:31:33,741Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:33,747Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:33,747Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:33,780Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:33,780Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:33,837Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:33,878Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706) {}
[INFO ] 2023-12-12T06:31:33,879Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:33,887Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:33,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:33,900Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:33,900Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:33,909Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:33,909Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:33,909Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:33,909Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:33,925Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:33,926Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:33,928Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:33,967Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063129.872-DF0C1F4AC7775BBE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:34,064Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:34,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:34,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:34,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:34,170Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:34,176Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:34,204Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:34,204Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:34,204Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:34,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:29.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:34,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:34,954Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:34,954Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:35,285Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:35,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:35,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,307Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:35,335Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301) {}
[INFO ] 2023-12-12T06:31:35,348Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:35,349Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:35,349Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:35,382Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,382Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:35,439Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:35,487Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301) {}
[INFO ] 2023-12-12T06:31:35,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:35,490Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362692176), owningKey=DL6eyv9Sn1czkCycDrr7jSkJsyY5uaHZ6DpJvHBWxBA4Di {}
[INFO ] 2023-12-12T06:31:35,490Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:35,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,506Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:35,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362693706), owningKey=DL428mQTMX5ymsmiENvANQzkfpKsN23P4STtaniUTHebYx {}
[INFO ] 2023-12-12T06:31:35,526Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:35,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,543Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:35,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,554Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:35,556Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362695301), owningKey=DL2imqty2p7X8T8iyfGwmio8jDd8yMbPv6wMxWA2GW33ge {}
[INFO ] 2023-12-12T06:31:35,556Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:35,557Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:35,557Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:35,557Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:35,557Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T06:31:35,783Z [Mock network] internal.Verifier. - Error validating transaction 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T06:31:35,798Z [Mock network] internal.Verifier. - Error validating transaction 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T06:31:35,798Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
[INFO ] 2023-12-12T06:31:35,849Z [Mock network] statemachine.StaffedFlowHospital. - Flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Invocation, sessionId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=2AC43B9322BC45C4CE2000F772AC6E88A76132777B509AE67E9FA2E36B970451), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3BA1983FE010D0D0CAF44E844346894237FD8BB7A7C122CE30F3364949544F01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@483da4d8, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=338eb228-f3aa-4722-99a2-458b7827a3ab, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@4263cf4a[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
[INFO ] 2023-12-12T06:31:35,854Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:31:35,859Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:31:35,880Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] errored, dumping all transitions:

 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.591Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Invocation, sessionId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=2AC43B9322BC45C4CE2000F772AC6E88A76132777B509AE67E9FA2E36B970451), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3BA1983FE010D0D0CAF44E844346894237FD8BB7A7C122CE30F3364949544F01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9])
    SignalFlowHasStarted(flowId=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.861Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-621262053683832813, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:31:35.568Z
    2023-12-12T06:31:35.805Z
isFlowResumed: 
    true
    false


 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.867Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.868Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:31:35.805Z
    2023-12-12T06:31:35.868Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
[WARN ] 2023-12-12T06:31:35,880Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:31:35,883Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:31:35,956Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] errored, dumping all transitions:

 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.591Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Invocation, sessionId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=2AC43B9322BC45C4CE2000F772AC6E88A76132777B509AE67E9FA2E36B970451), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3BA1983FE010D0D0CAF44E844346894237FD8BB7A7C122CE30F3364949544F01), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9])
    SignalFlowHasStarted(flowId=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7dfe99e9]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.861Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-621262053683832813, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:31:35.568Z
    2023-12-12T06:31:35.805Z
isFlowResumed: 
    true
    false


 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.867Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.868Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:31:35.805Z
    2023-12-12T06:31:35.868Z


 --- Transition of flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] ---
  Timestamp: 2023-12-12T06:31:35.949Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20, errorId=-621262053683832813)], sessions=[], senderUUID=338eb228-f3aa-4722-99a2-458b7827a3ab)
    CreateTransaction
    RemoveCheckpoint(id=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-621262053683832813, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Invocation, sessionId=8f04196b-1918-4f7b-a164-3c16f1019cb1, timestamp: 2023-12-12T06:31:35.563Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=2AC43B9322BC45C4CE2000F772AC6E88A76132777B509AE67E9FA2E36B970451), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@360eea19, errorState=Errored(errors=[FlowError(errorId=-621262053683832813, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@483da4d8, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=338eb228-f3aa-4722-99a2-458b7827a3ab, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@4263cf4a[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=3BA1983FE010D0D0CAF44E844346894237FD8BB7A7C122CE30F3364949544F01)
    net.corda.node.services.statemachine.FlowState$Finished@360eea19
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2023-12-12T06:31:35.868Z
    2023-12-12T06:31:35.882Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
[WARN ] 2023-12-12T06:31:35,956Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=51c47f04-96fd-45ef-b6bc-7f9f3eaf7a28, invocation_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, invocation_timestamp=2023-12-12T06:31:35.563Z, origin=Only For Testing, session_id=8f04196b-1918-4f7b-a164-3c16f1019cb1, session_timestamp=2023-12-12T06:31:35.563Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 8845B9115BE7E0AFD8CA50D98DC610D46A0E43FB8226BA8C91E468545CB45E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:31:35,986Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:35,996Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T06:31:36,037Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:36,037Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:36,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:36,045Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T06:31:36,068Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:36,068Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:36,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:36,073Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T06:31:36,088Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:36,088Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:36,316Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:31:36,317Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:36,317Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:36,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:36,402Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:36,403Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:36,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:36,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:36,422Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:36,423Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:36,431Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:36,432Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:36,432Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:36,445Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:36.093Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:37,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:37,353Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:37,354Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:37,758Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:37,772Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:37,780Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:37,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:37,856Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772) {}
[INFO ] 2023-12-12T06:31:37,874Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:37,876Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:37,876Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:37,923Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:37,923Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:37,995Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:38,003Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:38,036Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772) {}
[INFO ] 2023-12-12T06:31:38,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:38,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:38,039Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:38,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:38,040Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:38,062Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:38,063Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:38,064Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:38,122Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:38,204Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:38,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:38,215Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:38,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:38,332Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:38,332Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:38,350Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:38,350Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:38,350Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:38,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:36.093Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:38,917Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:38,922Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:38,922Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:39,231Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:39,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:39,249Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:39,249Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:39,266Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245) {}
[INFO ] 2023-12-12T06:31:39,274Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:39,275Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:39,275Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:39,297Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:39,297Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:39,348Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:39,375Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245) {}
[INFO ] 2023-12-12T06:31:39,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:39,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:39,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:39,391Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:39,391Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:39,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:39,401Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:39,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:39,401Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:39,414Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:39,415Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:39,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:39,472Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063136.093-FF69A79F1B891219/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:39,519Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:39,522Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:39,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:39,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:39,606Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:39,606Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:39,612Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:39,612Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:39,612Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:39,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:36.093Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:40,268Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:40,276Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:40,276Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:40,712Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:40,737Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:40,753Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:40,753Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:40,796Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737) {}
[INFO ] 2023-12-12T06:31:40,811Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:40,827Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:40,827Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:40,871Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:40,871Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:40,926Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:40,955Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737) {}
[INFO ] 2023-12-12T06:31:40,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:40,959Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362697772), owningKey=DLJBtgEFWauaT2P63fh4dWJjoDUXtaWyL9BWoN6Xryitoz {}
[INFO ] 2023-12-12T06:31:40,959Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:40,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:40,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:40,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362699245), owningKey=DL4RPLgKH32Lbp7zMkWLJM84YWDwbPWd4suYTtftBHe35k {}
[INFO ] 2023-12-12T06:31:40,996Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:41,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:41,004Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:41,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:41,014Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:41,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362700737), owningKey=DL8KWiNCqPhNvfzb3BTfoupbRAPqbnaLuf81o6wcF6R5XW {}
[INFO ] 2023-12-12T06:31:41,014Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:41,015Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:41,015Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:41,015Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:41,015Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:41,325Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,372Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,627Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7adfb632-82c2-494e-a122-3cdc7ae88207, invocation_id=9afb6711-8f59-4a81-a062-22a3936df37e, invocation_timestamp=2023-12-12T06:31:41.017Z, origin=Only For Testing, session_id=9afb6711-8f59-4a81-a062-22a3936df37e, session_timestamp=2023-12-12T06:31:41.017Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,627Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7adfb632-82c2-494e-a122-3cdc7ae88207, invocation_id=9afb6711-8f59-4a81-a062-22a3936df37e, invocation_timestamp=2023-12-12T06:31:41.017Z, origin=Only For Testing, session_id=9afb6711-8f59-4a81-a062-22a3936df37e, session_timestamp=2023-12-12T06:31:41.017Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,715Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7adfb632-82c2-494e-a122-3cdc7ae88207, invocation_id=9afb6711-8f59-4a81-a062-22a3936df37e, invocation_timestamp=2023-12-12T06:31:41.017Z, origin=Only For Testing, session_id=9afb6711-8f59-4a81-a062-22a3936df37e, session_timestamp=2023-12-12T06:31:41.017Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,756Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,775Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,781Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,801Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=704b39be-e6d5-4c55-943d-0d95d3c8242e, invocation_id=74213db8-27ca-4e72-a372-17c153793c17, invocation_timestamp=2023-12-12T06:31:41.285Z, origin=O=Mock Company 1, L=London, C=GB, session_id=74213db8-27ca-4e72-a372-17c153793c17, session_timestamp=2023-12-12T06:31:41.285Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,838Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7adfb632-82c2-494e-a122-3cdc7ae88207, invocation_id=9afb6711-8f59-4a81-a062-22a3936df37e, invocation_timestamp=2023-12-12T06:31:41.017Z, origin=Only For Testing, session_id=9afb6711-8f59-4a81-a062-22a3936df37e, session_timestamp=2023-12-12T06:31:41.017Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,838Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7adfb632-82c2-494e-a122-3cdc7ae88207, invocation_id=9afb6711-8f59-4a81-a062-22a3936df37e, invocation_timestamp=2023-12-12T06:31:41.017Z, origin=Only For Testing, session_id=9afb6711-8f59-4a81-a062-22a3936df37e, session_timestamp=2023-12-12T06:31:41.017Z, thread-id=847, tx_id=C6D22B5D24C43047E70F24A331968643973609D2C1401861C0B272BBEA5B9111}
[INFO ] 2023-12-12T06:31:41,866Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:41,876Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T06:31:41,901Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:41,901Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:41,908Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:41,910Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T06:31:41,922Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:41,922Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:41,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:41,925Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T06:31:41,945Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:41,945Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:42,261Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:31:42,265Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:42,266Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:42,336Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:42,390Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:42,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:42,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:42,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:42,405Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:42,405Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:42,415Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:42,415Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:42,415Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:42,426Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:41.950Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:42,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:42,991Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:42,992Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:43,376Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:43,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:43,391Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:43,391Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:43,426Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386) {}
[INFO ] 2023-12-12T06:31:43,445Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:43,445Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:43,445Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:43,479Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:43,480Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:43,527Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:43,535Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:43,572Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386) {}
[INFO ] 2023-12-12T06:31:43,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:43,573Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:43,573Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:43,575Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:43,575Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:43,593Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:43,594Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:43,597Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:43,631Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:43,693Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:43,697Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:43,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:43,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:43,770Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:43,771Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:43,793Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:43,793Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:43,793Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:43,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:41.950Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:44,271Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:44,276Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:44,277Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:44,605Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:44,627Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:44,631Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:44,631Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:44,652Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627) {}
[INFO ] 2023-12-12T06:31:44,661Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:44,661Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:44,661Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:44,689Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:44,689Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:44,741Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:44,765Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627) {}
[INFO ] 2023-12-12T06:31:44,765Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:44,767Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:44,767Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:44,785Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:44,785Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:44,799Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:44,799Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:44,799Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:44,799Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:44,809Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:44,809Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:44,810Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:44,838Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063141.950-8B5FC295B20021FA/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:44,859Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:44,860Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:44,861Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:44,861Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:44,915Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:44,915Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:44,920Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:44,920Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:44,920Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:44,924Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:41.950Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:45,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:45,486Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:45,486Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:45,772Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:45,802Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:45,808Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:45,808Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:45,835Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802) {}
[INFO ] 2023-12-12T06:31:45,848Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:45,850Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:45,850Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:45,894Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:45,894Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:45,964Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:46,044Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802) {}
[INFO ] 2023-12-12T06:31:46,046Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:46,050Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362703386), owningKey=DLmdp4GbQLRw8eDXUxSzHxLz8d47NH2sTVbjfSJjoATcD {}
[INFO ] 2023-12-12T06:31:46,050Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:46,067Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:46,067Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:46,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362704627), owningKey=DLGYLH6ZT12T31Vs8Z1EU1xbe6KL2YQf9e5RmJ7aZc75HR {}
[INFO ] 2023-12-12T06:31:46,081Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:46,096Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:46,096Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:46,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:46,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:46,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362705802), owningKey=DLmiY9vZH7f7h4Gg94iMVfyNHrrw64TKX69i3VuDTYaVc {}
[INFO ] 2023-12-12T06:31:46,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:46,113Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:46,113Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:46,113Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:46,113Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:46,441Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,486Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,658Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9a68bd94-1f7b-4b6d-8877-1194e9f36a8c, invocation_id=e4848bdb-57f5-41f6-827f-b54646765728, invocation_timestamp=2023-12-12T06:31:46.116Z, origin=Only For Testing, session_id=e4848bdb-57f5-41f6-827f-b54646765728, session_timestamp=2023-12-12T06:31:46.116Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,658Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9a68bd94-1f7b-4b6d-8877-1194e9f36a8c, invocation_id=e4848bdb-57f5-41f6-827f-b54646765728, invocation_timestamp=2023-12-12T06:31:46.116Z, origin=Only For Testing, session_id=e4848bdb-57f5-41f6-827f-b54646765728, session_timestamp=2023-12-12T06:31:46.116Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,699Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9a68bd94-1f7b-4b6d-8877-1194e9f36a8c, invocation_id=e4848bdb-57f5-41f6-827f-b54646765728, invocation_timestamp=2023-12-12T06:31:46.116Z, origin=Only For Testing, session_id=e4848bdb-57f5-41f6-827f-b54646765728, session_timestamp=2023-12-12T06:31:46.116Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,723Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,734Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,737Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,754Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=0bda7be5-ee8c-4a9a-801e-a91368618640, invocation_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, invocation_timestamp=2023-12-12T06:31:46.401Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1b92e9e-bda1-412b-92d0-fe521d237f7a, session_timestamp=2023-12-12T06:31:46.401Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,775Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9a68bd94-1f7b-4b6d-8877-1194e9f36a8c, invocation_id=e4848bdb-57f5-41f6-827f-b54646765728, invocation_timestamp=2023-12-12T06:31:46.116Z, origin=Only For Testing, session_id=e4848bdb-57f5-41f6-827f-b54646765728, session_timestamp=2023-12-12T06:31:46.116Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,775Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9a68bd94-1f7b-4b6d-8877-1194e9f36a8c, invocation_id=e4848bdb-57f5-41f6-827f-b54646765728, invocation_timestamp=2023-12-12T06:31:46.116Z, origin=Only For Testing, session_id=e4848bdb-57f5-41f6-827f-b54646765728, session_timestamp=2023-12-12T06:31:46.116Z, thread-id=1127, tx_id=98EDE9E00A35E0FB87244AF723EA0AEFEA6DD5F9C9B0E37F488E5402110321F6}
[INFO ] 2023-12-12T06:31:46,810Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:46,816Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T06:31:46,835Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:46,835Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:46,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:46,842Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T06:31:46,854Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:46,854Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:46,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:46,857Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T06:31:46,868Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:46,868Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:47,128Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:31:47,135Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:47,138Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:47,215Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:47,268Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:47,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:47,270Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:47,270Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:47,289Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:47,289Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:47,298Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:47,298Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:47,298Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:47,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:46.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:47,961Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:47,967Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:47,968Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:48,297Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:48,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:48,315Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:48,315Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:48,383Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308) {}
[INFO ] 2023-12-12T06:31:48,400Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:48,402Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:48,402Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:48,437Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:48,437Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:48,499Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:48,511Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:48,541Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308) {}
[INFO ] 2023-12-12T06:31:48,542Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:48,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:48,543Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:48,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:48,543Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:48,556Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:48,557Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:48,557Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:48,592Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:48,622Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:48,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:48,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:48,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:48,685Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:48,685Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:48,691Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:48,691Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:48,691Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:48,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:46.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:49,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:49,016Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:49,017Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:49,326Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:49,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:49,341Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:49,341Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:49,351Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337) {}
[INFO ] 2023-12-12T06:31:49,362Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:49,362Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:49,362Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:49,390Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:49,390Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:49,444Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:49,493Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337) {}
[INFO ] 2023-12-12T06:31:49,495Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:49,499Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:49,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:49,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:49,515Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:49,523Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:49,523Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:49,523Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:49,523Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:49,537Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:49,539Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:49,541Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:49,578Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063146.872-BE0D9C583F0B9948/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:49,623Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:49,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:49,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:49,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:49,716Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:49,716Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:49,745Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:49,745Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:49,745Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:49,760Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:46.872Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:50,178Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:50,184Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:50,184Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:50,467Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:50,491Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:50,497Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,497Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:50,520Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491) {}
[INFO ] 2023-12-12T06:31:50,533Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:50,534Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:50,534Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:50,564Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,565Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:50,621Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:50,643Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491) {}
[INFO ] 2023-12-12T06:31:50,644Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:50,647Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362708308), owningKey=DLEuh7FT5d4FRrEj4fXQoQa6dd9iNA9AmSmtfqCx3FFCUW {}
[INFO ] 2023-12-12T06:31:50,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:50,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,661Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:50,673Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362709337), owningKey=DLBZziwUyV74N78LPLr9VuwruRcQeVg3LDH86dJU6aGqtP {}
[INFO ] 2023-12-12T06:31:50,673Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:50,692Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,692Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362710491), owningKey=DL2Ha5p7x6xhwWeqHtqiuKJWVx67RC5LN4n2etKKMrKS3x {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:50,701Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:50,701Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:50,701Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:50,952Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:50,985Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,190Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fb90badc-9fe4-4403-a883-ecf525879cd4, invocation_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, invocation_timestamp=2023-12-12T06:31:50.705Z, origin=Only For Testing, session_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, session_timestamp=2023-12-12T06:31:50.705Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,190Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fb90badc-9fe4-4403-a883-ecf525879cd4, invocation_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, invocation_timestamp=2023-12-12T06:31:50.705Z, origin=Only For Testing, session_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, session_timestamp=2023-12-12T06:31:50.705Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,264Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fb90badc-9fe4-4403-a883-ecf525879cd4, invocation_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, invocation_timestamp=2023-12-12T06:31:50.705Z, origin=Only For Testing, session_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, session_timestamp=2023-12-12T06:31:50.705Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,300Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,320Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,324Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,343Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=46d63568-a489-46d3-9d50-a801e2810769, invocation_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, invocation_timestamp=2023-12-12T06:31:50.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4af92c6a-c9f6-4d7c-8ad9-5979707678b8, session_timestamp=2023-12-12T06:31:50.912Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,366Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fb90badc-9fe4-4403-a883-ecf525879cd4, invocation_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, invocation_timestamp=2023-12-12T06:31:50.705Z, origin=Only For Testing, session_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, session_timestamp=2023-12-12T06:31:50.705Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,366Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fb90badc-9fe4-4403-a883-ecf525879cd4, invocation_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, invocation_timestamp=2023-12-12T06:31:50.705Z, origin=Only For Testing, session_id=e398c6ca-1dc8-4fa2-8203-c27f46cb6eb4, session_timestamp=2023-12-12T06:31:50.705Z, thread-id=1407, tx_id=4630029A244D5D7034EC122F6909015511C989DAE339D9755961C184BF891243}
[INFO ] 2023-12-12T06:31:51,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:51,386Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T06:31:51,411Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:51,412Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:51,417Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:51,419Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T06:31:51,431Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:51,431Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:51,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:51,435Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T06:31:51,442Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:51,442Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:51,642Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:31:51,643Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:51,644Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:51,696Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:51,743Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:51,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:51,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:51,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:51,767Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:51,768Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:51,784Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:51,785Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:51,785Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:51,803Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:51.446Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:52,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:52,440Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:52,440Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:52,759Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:31:52,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:52,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:52,781Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:52,847Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771) {}
[INFO ] 2023-12-12T06:31:52,868Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:52,870Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:52,870Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:52,911Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:52,911Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:52,954Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:52,958Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:31:52,988Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771) {}
[INFO ] 2023-12-12T06:31:52,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:52,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:52,988Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:52,989Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:52,989Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:53,001Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:31:53,001Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:53,002Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:53,035Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:53,070Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:53,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:53,072Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:53,072Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:53,144Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:53,145Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:53,149Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:53,150Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:53,150Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:53,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:51.446Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:53,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:53,418Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:53,418Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:53,641Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:53,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:53,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:53,653Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:53,670Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650) {}
[INFO ] 2023-12-12T06:31:53,682Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:53,684Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:53,684Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:53,718Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:53,718Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:53,780Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:53,820Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650) {}
[INFO ] 2023-12-12T06:31:53,821Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:53,824Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:53,824Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:53,836Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:53,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:53,845Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:53,845Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:53,845Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:53,845Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:53,861Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:31:53,864Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:31:53,866Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:31:53,897Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-063151.447-AE2316DB1FE08E2D/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:31:53,939Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:53,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:31:53,943Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:31:53,943Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:31:54,025Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:31:54,025Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5, alias: identity-private-key {}
[INFO ] 2023-12-12T06:31:54,041Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:31:54,041Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:31:54,041Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:54,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:31:51.446Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:31:54,428Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:31:54,431Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:54,431Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:54,709Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:31:54,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:31:54,728Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,728Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:54,750Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726) {}
[INFO ] 2023-12-12T06:31:54,756Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:31:54,756Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:31:54,756Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:31:54,778Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,778Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:54,810Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F1B48215318FE48B24CE22476CE3044C53E0E28B45B93AE39B30FE8C0340AD07 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:31:54,831Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726) {}
[INFO ] 2023-12-12T06:31:54,831Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:31:54,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702362712771), owningKey=DL6yX5hs2oBYX6xbaGjeqnLCvUv8bmic7aAqhZpEk4ie59 {}
[INFO ] 2023-12-12T06:31:54,835Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:31:54,844Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,844Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:54,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702362713650), owningKey=DL7DznktnvN1tQXwBXGrbSSehu4BqPrhSfNwMUYWsjY6gr {}
[INFO ] 2023-12-12T06:31:54,857Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:54,869Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,869Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:31:54,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,879Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:31:54,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702362714726), owningKey=DL5wXULLVffyQvibfprUF74fCwgJ9NBYrQMHM6xyVmiya5 {}
[INFO ] 2023-12-12T06:31:54,879Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:31:54,879Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:54,879Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:31:54,880Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:31:54,880Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:31:55,098Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,122Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,336Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d16e7024-2dc6-4e5d-9f44-39adbc524109, invocation_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, invocation_timestamp=2023-12-12T06:31:54.882Z, origin=Only For Testing, session_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, session_timestamp=2023-12-12T06:31:54.882Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,336Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d16e7024-2dc6-4e5d-9f44-39adbc524109, invocation_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, invocation_timestamp=2023-12-12T06:31:54.882Z, origin=Only For Testing, session_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, session_timestamp=2023-12-12T06:31:54.882Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,405Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d16e7024-2dc6-4e5d-9f44-39adbc524109, invocation_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, invocation_timestamp=2023-12-12T06:31:54.882Z, origin=Only For Testing, session_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, session_timestamp=2023-12-12T06:31:54.882Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,438Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,452Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,457Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,475Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=5c0d98eb-4d9b-431b-b9cd-a597fd7fe00b, invocation_id=7f260850-01a3-41fd-a632-f3c1e189f533, invocation_timestamp=2023-12-12T06:31:55.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f260850-01a3-41fd-a632-f3c1e189f533, session_timestamp=2023-12-12T06:31:55.069Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,501Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d16e7024-2dc6-4e5d-9f44-39adbc524109, invocation_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, invocation_timestamp=2023-12-12T06:31:54.882Z, origin=Only For Testing, session_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, session_timestamp=2023-12-12T06:31:54.882Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,501Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d16e7024-2dc6-4e5d-9f44-39adbc524109, invocation_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, invocation_timestamp=2023-12-12T06:31:54.882Z, origin=Only For Testing, session_id=40ef7e1f-733e-4a4f-87a0-3a208ea1eedb, session_timestamp=2023-12-12T06:31:54.882Z, thread-id=1687, tx_id=1EABE34CDB5E7432D5194B51176BE52DFA084FE3F1A63223DC217071459B9C6B}
[INFO ] 2023-12-12T06:31:55,657Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:55,670Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T06:31:55,699Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:55,699Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:55,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:55,709Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T06:31:55,723Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:55,723Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:31:55,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:31:55,727Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T06:31:55,739Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:31:55,739Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:57:03,539Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T06:57:04,046Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:57:07,612Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:57:09,057Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T06:57:09,109Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T06:57:09,113Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:57:09,901Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:09,912Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T06:57:10,558Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:10,570Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:10,571Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T06:57:10,789Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:10,801Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:57:11,665Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T06:57:12,477Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:57:12,491Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:57:12,566Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:57:12,566Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T06:57:12,566Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T06:57:15,055Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:15,068Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T06:57:15,426Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:15,426Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T06:57:15,511Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:15,511Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T06:57:15,766Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T06:57:15,766Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:15,932Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:15,968Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:15,969Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:15,981Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:15,982Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:15,993Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:15,993Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:15,993Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:16,005Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:16,065Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,065Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:16,065Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,164Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:16,189Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,189Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:16,189Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,201Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:57:16,346Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,359Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:57:16,383Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:16,969Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T06:57:16,982Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,007Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:17,007Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,032Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,046Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T06:57:17,058Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,058Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T06:57:17,059Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,059Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T06:57:17,059Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,059Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,071Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T06:57:17,192Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,192Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T06:57:17,228Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,238Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,249Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:57:17,262Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,262Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T06:57:17,274Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,286Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,286Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T06:57:17,286Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,311Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:17,312Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,312Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:17,312Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,326Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:57:17,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,376Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:57:17,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,389Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T06:57:17,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,389Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T06:57:17,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T06:57:17,401Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,402Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T06:57:17,415Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T06:57:17,425Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T06:57:17,425Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T06:57:17,488Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,499Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:57:17,523Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,524Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:57:17,524Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,524Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T06:57:17,524Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T06:57:17,524Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,535Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T06:57:17,545Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,545Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T06:57:17,572Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T06:57:17,584Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:17,584Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T06:57:17,584Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T06:57:17,614Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:57:17,651Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T06:57:17,653Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T06:57:17,694Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T06:57:29,579Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:57:29,590Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:57:29,705Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:57:30,090Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:57:32,598Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:57:32,887Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:57:33,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:57:33,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:57:33,058Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:57:33,064Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B, alias: identity-private-key {}
[INFO ] 2023-12-12T06:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:57:33,277Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:57:33,282Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:57:33,365Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:57:01.032Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:57:42,357Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:57:42,498Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:57:42,521Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:57:49,251Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:57:50,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:57:50,770Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:50,770Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:57:51,196Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712) {}
[INFO ] 2023-12-12T06:57:51,331Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:57:51,379Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:57:51,385Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:57:51,521Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:51,523Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:52,108Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:57:52,143Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:57:53,742Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712) {}
[INFO ] 2023-12-12T06:57:53,773Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:57:53,786Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:53,788Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:53,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:53,792Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:53,862Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:57:53,864Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:57:53,877Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:57:53,965Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:57:54,129Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:57:54,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:57:54,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:57:54,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:57:54,275Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:57:54,277Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH, alias: identity-private-key {}
[INFO ] 2023-12-12T06:57:54,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:57:54,307Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:57:54,307Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:57:54,321Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:57:01.032Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:57:55,671Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:57:55,681Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:55,681Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:56,370Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:56,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:57:56,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:56,424Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:56,466Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399) {}
[INFO ] 2023-12-12T06:57:56,490Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:57:56,491Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:57:56,491Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:57:56,543Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:56,544Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:56,711Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:57:56,805Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399) {}
[INFO ] 2023-12-12T06:57:56,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:57:56,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:56,824Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:57:56,869Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:56,869Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:56,892Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:56,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:56,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:56,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:56,912Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:57:56,914Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:57:56,917Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:57:56,970Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065701.182-B7D26037B984BB9F/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:57:57,029Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:57:57,030Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:57:57,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:57:57,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:57:57,161Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:57:57,161Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW, alias: identity-private-key {}
[INFO ] 2023-12-12T06:57:57,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:57:57,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:57:57,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:57:57,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:57:01.032Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:57:57,987Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:57:57,989Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:57,989Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:58,475Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:57:58,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:57:58,495Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,495Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:58,519Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489) {}
[INFO ] 2023-12-12T06:57:58,531Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:57:58,532Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:57:58,532Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:57:58,574Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,574Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:58,659Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:57:58,721Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489) {}
[INFO ] 2023-12-12T06:57:58,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:57:58,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364270712), owningKey=DLBnPGUeW88rF9s2ycT9utVC1pNyVgP3bioC5X2PX3tW7B {}
[INFO ] 2023-12-12T06:57:58,733Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:57:58,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,754Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:58,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364276399), owningKey=DLCj3EJwHD23ed3dgz1nitMS6rLguvcRuFLRvQ2U5PD8MH {}
[INFO ] 2023-12-12T06:57:58,794Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:58,822Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,822Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:57:58,884Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,884Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:57:58,884Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364278489), owningKey=DLT62tkT2o53hMvDJGUgSxss2rmoAW4pQQu88LMHBurfW {}
[INFO ] 2023-12-12T06:57:58,884Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:57:58,904Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:57:58,904Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:57:58,915Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:57:58,915Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:57:59,711Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302}
[WARN ] 2023-12-12T06:57:59,711Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302}
[INFO ] 2023-12-12T06:58:01,217Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:01,345Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:01,671Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:01,671Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:01,872Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,050Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,096Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,104Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,132Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=bdee0e7e-b654-4fa8-ab0c-b1251c939702, invocation_id=6fbef590-487b-4c16-b5d3-70e92b64c016, invocation_timestamp=2023-12-12T06:58:01.077Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6fbef590-487b-4c16-b5d3-70e92b64c016, session_timestamp=2023-12-12T06:58:01.077Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,196Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,196Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=757a5040-b0f6-42c5-9fd1-601899a90903, invocation_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, invocation_timestamp=2023-12-12T06:57:59.034Z, origin=Only For Testing, session_id=2f6c7db7-2b5e-4bd9-9172-3079f6736765, session_timestamp=2023-12-12T06:57:59.034Z, thread-id=302, tx_id=7F9D4CAB04D7B57506D4EA0EB29FDE65E25B51CEA88732BBF65D8729AD755E65}
[INFO ] 2023-12-12T06:58:02,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:02,244Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T06:58:02,310Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:02,312Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:02,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:02,328Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T06:58:02,359Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:02,360Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:02,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:02,368Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T06:58:02,392Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:02,393Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:02,741Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:58:02,745Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:02,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:02,848Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:02,945Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:02,947Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:02,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:02,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:02,965Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:02,965Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:02,974Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:02,974Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:02,974Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:02,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:02.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:03,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:03,992Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:03,993Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:04,622Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:04,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:04,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:04,636Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:04,682Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631) {}
[INFO ] 2023-12-12T06:58:04,700Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:04,700Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:04,700Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:04,736Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:04,736Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:04,845Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:04,856Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:58:04,895Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631) {}
[INFO ] 2023-12-12T06:58:04,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:04,897Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:04,897Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:04,900Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:04,900Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:04,923Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:58:04,942Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:04,951Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:04,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:05,070Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:05,073Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:05,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:05,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:05,173Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:05,174Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:05,189Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:05,189Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:05,189Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:05,201Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:02.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:05,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:05,924Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:05,924Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:06,399Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:06,417Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:06,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:06,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:06,458Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417) {}
[INFO ] 2023-12-12T06:58:06,485Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:06,487Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:06,488Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:06,526Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:06,526Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:06,577Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:06,609Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417) {}
[INFO ] 2023-12-12T06:58:06,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:06,620Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:06,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:06,643Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:06,643Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:06,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:06,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:06,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:06,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:06,683Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:58:06,684Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:06,685Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:06,710Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065802.414-58BC5D6D832B9723/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:06,810Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:06,814Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:06,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:06,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:06,927Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:06,929Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:06,963Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:06,963Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:06,963Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:06,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:02.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:07,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:07,820Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:07,820Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:08,326Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:08,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:08,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,368Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:08,414Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360) {}
[INFO ] 2023-12-12T06:58:08,433Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:08,434Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:08,435Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:08,490Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,490Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:08,551Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:08,602Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360) {}
[INFO ] 2023-12-12T06:58:08,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:08,609Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364284631), owningKey=DLHYJHiQK2qhLSobSSPFMHVy1bDMVFSs3dQPWhTPCFAfYb {}
[INFO ] 2023-12-12T06:58:08,609Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:08,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,628Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:08,649Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364286417), owningKey=DL8Qe4Ncsr8GkNSWd6fjSsYcD8aUCcvxJcXcbVAwiBnjqt {}
[INFO ] 2023-12-12T06:58:08,649Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:08,665Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,665Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:08,680Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,680Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:08,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364288360), owningKey=DL8SubfJSzt3kQcRuR5Pi6q2CXXhmAQ3kg2tR8zJqpHTCj {}
[INFO ] 2023-12-12T06:58:08,681Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:58:08,682Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:08,682Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:58:08,682Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:08,682Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T06:58:08,878Z [Mock network] internal.Verifier. - Error validating transaction 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T06:58:08,891Z [Mock network] internal.Verifier. - Error validating transaction 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T06:58:08,892Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
[INFO ] 2023-12-12T06:58:08,920Z [Mock network] statemachine.StaffedFlowHospital. - Flow [5e7341bb-3698-486e-889a-00600717ab46] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Invocation, sessionId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=A7FD08CFCDFF20696CA0A9D8ABA974550AEF69A7BDE3F8E5F0F41BB433A1406E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DD34C1207C7FA03B9947636F713362B5BEB284030683AB0BEE56D8DBCC670829), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@479a89a6, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=11254668-74d0-4746-ace6-b31b1ab460ef, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@48e5cdde[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
[INFO ] 2023-12-12T06:58:08,927Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:58:08,940Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:58:08,968Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5e7341bb-3698-486e-889a-00600717ab46] errored, dumping all transitions:

 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.713Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5e7341bb-3698-486e-889a-00600717ab46], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Invocation, sessionId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=A7FD08CFCDFF20696CA0A9D8ABA974550AEF69A7BDE3F8E5F0F41BB433A1406E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DD34C1207C7FA03B9947636F713362B5BEB284030683AB0BEE56D8DBCC670829), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b])
    SignalFlowHasStarted(flowId=[5e7341bb-3698-486e-889a-00600717ab46])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.945Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7980235823325576454, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:58:08.689Z
    2023-12-12T06:58:08.902Z


 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.953Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.955Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:58:08.902Z
    2023-12-12T06:58:08.955Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
[WARN ] 2023-12-12T06:58:08,968Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5e7341bb-3698-486e-889a-00600717ab46] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:58:08,973Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T06:58:09,037Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5e7341bb-3698-486e-889a-00600717ab46] errored, dumping all transitions:

 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.713Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5e7341bb-3698-486e-889a-00600717ab46], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Invocation, sessionId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=A7FD08CFCDFF20696CA0A9D8ABA974550AEF69A7BDE3F8E5F0F41BB433A1406E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DD34C1207C7FA03B9947636F713362B5BEB284030683AB0BEE56D8DBCC670829), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b])
    SignalFlowHasStarted(flowId=[5e7341bb-3698-486e-889a-00600717ab46])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7bf3459b]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.945Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7980235823325576454, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T06:58:08.689Z
    2023-12-12T06:58:08.902Z


 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.953Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:08.955Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T06:58:08.902Z
    2023-12-12T06:58:08.955Z


 --- Transition of flow [5e7341bb-3698-486e-889a-00600717ab46] ---
  Timestamp: 2023-12-12T06:58:09.026Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20, errorId=7980235823325576454)], sessions=[], senderUUID=11254668-74d0-4746-ace6-b31b1ab460ef)
    CreateTransaction
    RemoveCheckpoint(id=[5e7341bb-3698-486e-889a-00600717ab46], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=5e7341bb-3698-486e-889a-00600717ab46)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[5e7341bb-3698-486e-889a-00600717ab46], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7980235823325576454, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Invocation, sessionId=c70d997f-b939-4acf-8d55-365d35987cc1, timestamp: 2023-12-12T06:58:08.685Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=A7FD08CFCDFF20696CA0A9D8ABA974550AEF69A7BDE3F8E5F0F41BB433A1406E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@25fea9e4, errorState=Errored(errors=[FlowError(errorId=7980235823325576454, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@479a89a6, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=11254668-74d0-4746-ace6-b31b1ab460ef, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@48e5cdde[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
numberOfCommits: 
    0
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=DD34C1207C7FA03B9947636F713362B5BEB284030683AB0BEE56D8DBCC670829)
    net.corda.node.services.statemachine.FlowState$Finished@25fea9e4
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2023-12-12T06:58:08.955Z
    2023-12-12T06:58:08.970Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
[WARN ] 2023-12-12T06:58:09,038Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5e7341bb-3698-486e-889a-00600717ab46] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=5e7341bb-3698-486e-889a-00600717ab46, invocation_id=c70d997f-b939-4acf-8d55-365d35987cc1, invocation_timestamp=2023-12-12T06:58:08.685Z, origin=Only For Testing, session_id=c70d997f-b939-4acf-8d55-365d35987cc1, session_timestamp=2023-12-12T06:58:08.685Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 4B1933303D522259DDAC25D0EF89A7B458A2E5F1E103F9AAAE220262CFF14E20
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T06:58:09,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:09,086Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T06:58:09,125Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:09,125Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:09,129Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:09,133Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T06:58:09,158Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:09,158Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:09,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:09,168Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T06:58:09,191Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:09,192Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:09,430Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:58:09,434Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:09,435Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:09,467Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:09,519Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:09,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:09,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:09,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:09,538Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:09,539Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:09,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:09,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:09,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:09,562Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:09.198Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:10,277Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:10,283Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:10,283Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:10,800Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:10,815Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:10,826Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:10,826Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:10,919Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815) {}
[INFO ] 2023-12-12T06:58:10,958Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:10,963Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:10,963Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:11,013Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:11,013Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:11,107Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:11,120Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:58:11,172Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815) {}
[INFO ] 2023-12-12T06:58:11,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:11,172Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:11,173Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:11,173Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:11,173Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:11,199Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:58:11,200Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:11,201Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:11,255Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:11,310Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:11,311Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:11,312Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:11,312Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:11,402Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:11,402Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:11,410Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:11,410Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:11,410Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:11,417Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:09.198Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:11,878Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:11,882Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:11,882Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:12,228Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:12,238Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:12,242Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:12,242Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:12,251Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238) {}
[INFO ] 2023-12-12T06:58:12,260Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:12,261Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:12,261Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:12,287Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:12,287Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:12,332Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:12,361Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238) {}
[INFO ] 2023-12-12T06:58:12,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:12,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:12,368Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:12,386Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:12,386Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:12,398Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:12,398Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:12,398Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:12,398Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:12,419Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:58:12,421Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:12,425Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:12,482Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065809.198-194AB1987EBA63A0/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:12,533Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:12,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:12,540Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:12,540Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:12,621Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:12,624Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:12,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:12,642Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:12,642Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:12,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:09.198Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:13,299Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:13,307Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:13,307Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:13,774Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:13,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:13,822Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:13,822Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:13,870Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809) {}
[INFO ] 2023-12-12T06:58:13,894Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:13,897Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:13,897Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:13,944Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:13,944Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:14,017Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:14,065Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809) {}
[INFO ] 2023-12-12T06:58:14,066Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:14,073Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364290815), owningKey=DLENmrwWoSr3Y4V29KKHRwGG5bNfsMEhm7YGDcHx3Ck7q4 {}
[INFO ] 2023-12-12T06:58:14,073Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:14,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:14,094Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:14,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364292238), owningKey=DLFBxiNLiUCctufwePQB2JBJvT6KoZDpLTFPx9BTYXMpFE {}
[INFO ] 2023-12-12T06:58:14,104Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:14,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:14,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:14,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:14,122Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:14,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364293809), owningKey=DL5JR6GM8pSQu1Lejk9krtLJ1QeYaVQ3UEXaJSUHrRLkZD {}
[INFO ] 2023-12-12T06:58:14,122Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:58:14,123Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:14,123Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:58:14,123Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:14,123Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:14,491Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,519Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,713Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c0bbd364-4cb3-4b7f-919f-0f25b2143a7b, invocation_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, invocation_timestamp=2023-12-12T06:58:14.125Z, origin=Only For Testing, session_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, session_timestamp=2023-12-12T06:58:14.125Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,713Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c0bbd364-4cb3-4b7f-919f-0f25b2143a7b, invocation_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, invocation_timestamp=2023-12-12T06:58:14.125Z, origin=Only For Testing, session_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, session_timestamp=2023-12-12T06:58:14.125Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,759Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c0bbd364-4cb3-4b7f-919f-0f25b2143a7b, invocation_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, invocation_timestamp=2023-12-12T06:58:14.125Z, origin=Only For Testing, session_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, session_timestamp=2023-12-12T06:58:14.125Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,806Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,824Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,830Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,851Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=7e2ee4ba-3803-4ac9-acd9-7145f40ea52e, invocation_id=2c69b438-ec2a-4063-86d5-b47221c40296, invocation_timestamp=2023-12-12T06:58:14.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c69b438-ec2a-4063-86d5-b47221c40296, session_timestamp=2023-12-12T06:58:14.441Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,888Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c0bbd364-4cb3-4b7f-919f-0f25b2143a7b, invocation_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, invocation_timestamp=2023-12-12T06:58:14.125Z, origin=Only For Testing, session_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, session_timestamp=2023-12-12T06:58:14.125Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,888Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c0bbd364-4cb3-4b7f-919f-0f25b2143a7b, invocation_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, invocation_timestamp=2023-12-12T06:58:14.125Z, origin=Only For Testing, session_id=e4938def-95bf-47d9-bfea-cf35a2a1c977, session_timestamp=2023-12-12T06:58:14.125Z, thread-id=847, tx_id=6E10B6334508375C881B6669217C3C877BA6FD364C0B8E70B669C6B783A52F6A}
[INFO ] 2023-12-12T06:58:14,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:14,930Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T06:58:14,957Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:14,957Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:14,962Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:14,966Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T06:58:14,982Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:14,982Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:14,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:14,987Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T06:58:14,997Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:14,997Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:15,239Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:58:15,242Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:15,245Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:15,299Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:15,344Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:15,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:15,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:15,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:15,378Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:15,378Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:15,388Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:15,388Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:15,388Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:15,396Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:15.004Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:15,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:15,990Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:15,990Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:16,369Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:16,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:16,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:16,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:16,417Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377) {}
[INFO ] 2023-12-12T06:58:16,433Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:16,434Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:16,434Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:16,467Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:16,468Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:16,532Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:16,541Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:58:16,577Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377) {}
[INFO ] 2023-12-12T06:58:16,578Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:16,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:16,578Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:16,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:16,578Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:16,591Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:58:16,592Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:16,596Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:16,632Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:16,688Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:16,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:16,695Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:16,695Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:16,778Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:16,780Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:16,804Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:16,804Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:16,804Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:16,819Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:15.004Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:17,434Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:17,440Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:17,441Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:17,779Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:17,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:17,803Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:17,803Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:17,827Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798) {}
[INFO ] 2023-12-12T06:58:17,839Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:17,842Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:17,842Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:17,878Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:17,878Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:17,944Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:17,977Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798) {}
[INFO ] 2023-12-12T06:58:17,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:17,979Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:17,979Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:17,991Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:17,991Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:18,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:18,005Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:18,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:18,005Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:18,015Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:58:18,016Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:18,017Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:18,054Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065815.004-63F17F388F9318B2/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:18,077Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:18,077Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:18,078Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:18,078Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:18,147Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:18,147Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:18,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:18,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:18,152Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:18,156Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:15.004Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:18,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:18,597Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:18,598Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:18,933Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:18,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:18,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:18,965Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:19,001Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957) {}
[INFO ] 2023-12-12T06:58:19,017Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:19,019Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:19,019Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:19,068Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:19,068Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:19,123Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:19,167Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957) {}
[INFO ] 2023-12-12T06:58:19,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:19,169Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364296377), owningKey=DLBFX8BJk4xWsZSHJHsL9W2oAnfyGsErTcJeq2k5jfMbVz {}
[INFO ] 2023-12-12T06:58:19,169Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:19,186Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:19,186Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:19,199Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364297798), owningKey=DL9T3unXFAwPi9YXubcCMreTFTGH19G1dVnCTwSfyds11j {}
[INFO ] 2023-12-12T06:58:19,199Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:19,215Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:19,215Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:19,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:19,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:19,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364298957), owningKey=DLJBVkDniqTh7pkd6HEHi5UtuKC4Pm7xYv9nf91SAz9vmb {}
[INFO ] 2023-12-12T06:58:19,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:58:19,227Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:19,227Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:58:19,227Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:19,227Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:19,511Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,540Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,696Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4fcfcb78-a98b-43d1-ad30-45579da01d78, invocation_id=e3d4802f-83e9-4b62-b523-6eba83044890, invocation_timestamp=2023-12-12T06:58:19.229Z, origin=Only For Testing, session_id=e3d4802f-83e9-4b62-b523-6eba83044890, session_timestamp=2023-12-12T06:58:19.229Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,696Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4fcfcb78-a98b-43d1-ad30-45579da01d78, invocation_id=e3d4802f-83e9-4b62-b523-6eba83044890, invocation_timestamp=2023-12-12T06:58:19.229Z, origin=Only For Testing, session_id=e3d4802f-83e9-4b62-b523-6eba83044890, session_timestamp=2023-12-12T06:58:19.229Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,736Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4fcfcb78-a98b-43d1-ad30-45579da01d78, invocation_id=e3d4802f-83e9-4b62-b523-6eba83044890, invocation_timestamp=2023-12-12T06:58:19.229Z, origin=Only For Testing, session_id=e3d4802f-83e9-4b62-b523-6eba83044890, session_timestamp=2023-12-12T06:58:19.229Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,779Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,818Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,829Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,857Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=a76fc6d8-980c-4ef2-aceb-215a1717b766, invocation_id=7a0361a3-572c-4a1e-9324-321584ef6146, invocation_timestamp=2023-12-12T06:58:19.474Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7a0361a3-572c-4a1e-9324-321584ef6146, session_timestamp=2023-12-12T06:58:19.474Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,893Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4fcfcb78-a98b-43d1-ad30-45579da01d78, invocation_id=e3d4802f-83e9-4b62-b523-6eba83044890, invocation_timestamp=2023-12-12T06:58:19.229Z, origin=Only For Testing, session_id=e3d4802f-83e9-4b62-b523-6eba83044890, session_timestamp=2023-12-12T06:58:19.229Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,893Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4fcfcb78-a98b-43d1-ad30-45579da01d78, invocation_id=e3d4802f-83e9-4b62-b523-6eba83044890, invocation_timestamp=2023-12-12T06:58:19.229Z, origin=Only For Testing, session_id=e3d4802f-83e9-4b62-b523-6eba83044890, session_timestamp=2023-12-12T06:58:19.229Z, thread-id=1127, tx_id=5820841EE1FF68F3EABF5BBF485AC7B16E426BBBF1A227EFC032C4BB392D6803}
[INFO ] 2023-12-12T06:58:19,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:19,953Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T06:58:19,979Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:19,979Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:19,984Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:19,989Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T06:58:20,003Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:20,003Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:20,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:20,010Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T06:58:20,025Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:20,025Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:20,245Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:58:20,249Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:20,250Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:20,306Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:20,341Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:20,342Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:20,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:20,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:20,358Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:20,359Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:20,370Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:20,370Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:20,371Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:20,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:20.031Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:21,059Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:21,064Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:21,064Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:21,378Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:21,390Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:21,396Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:21,396Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:21,459Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390) {}
[INFO ] 2023-12-12T06:58:21,480Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:21,482Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:21,482Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:21,530Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:21,530Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:21,580Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:21,589Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:58:21,620Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390) {}
[INFO ] 2023-12-12T06:58:21,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:21,622Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:21,622Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:21,625Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:21,625Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:21,639Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:58:21,640Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:21,641Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:21,672Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:21,696Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:21,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:21,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:21,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:21,771Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:21,771Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:21,777Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:21,777Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:21,777Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:21,782Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:20.031Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:22,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:22,221Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:22,221Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:22,628Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:22,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:22,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:22,662Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:22,708Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655) {}
[INFO ] 2023-12-12T06:58:22,729Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:22,743Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:22,743Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:22,818Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:22,818Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:22,874Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:22,901Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655) {}
[INFO ] 2023-12-12T06:58:22,903Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:22,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:22,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:22,918Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:22,918Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:22,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:22,927Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:22,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:22,927Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:22,940Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:58:22,941Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:22,942Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:22,977Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065820.032-74926CA72019AB3A/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:23,011Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:23,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:23,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:23,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:23,070Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:23,070Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:23,076Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:23,076Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:23,076Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:23,083Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:20.031Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:23,421Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:23,425Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:23,425Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:23,656Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:23,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:23,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:23,676Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662) {}
[INFO ] 2023-12-12T06:58:23,682Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:23,682Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:23,682Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:23,715Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,715Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:23,745Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:23,770Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662) {}
[INFO ] 2023-12-12T06:58:23,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:23,773Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364301390), owningKey=DL2CQXRbTBbsMuDWFanxx76xk7xkw7KRLm1rUiyq2FkFCS {}
[INFO ] 2023-12-12T06:58:23,773Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:23,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,790Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:23,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364302655), owningKey=DLJ7eUV34r4aBn4WzVisrU67gKoV1GQfTjmeFgHq4sdqE6 {}
[INFO ] 2023-12-12T06:58:23,806Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:23,824Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,824Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:23,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,832Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:23,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364303662), owningKey=DL8fXGNagzFq1Y88zfbNForu4GcrdRT3ciiD8hF8RgNdYu {}
[INFO ] 2023-12-12T06:58:23,832Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:58:23,834Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:23,834Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:58:23,834Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:23,834Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:24,104Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,159Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,413Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=71c12041-d354-453a-8a1f-cd5c74ba5bef, invocation_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, invocation_timestamp=2023-12-12T06:58:23.837Z, origin=Only For Testing, session_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, session_timestamp=2023-12-12T06:58:23.837Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,413Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=71c12041-d354-453a-8a1f-cd5c74ba5bef, invocation_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, invocation_timestamp=2023-12-12T06:58:23.837Z, origin=Only For Testing, session_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, session_timestamp=2023-12-12T06:58:23.837Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,487Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=71c12041-d354-453a-8a1f-cd5c74ba5bef, invocation_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, invocation_timestamp=2023-12-12T06:58:23.837Z, origin=Only For Testing, session_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, session_timestamp=2023-12-12T06:58:23.837Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,531Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,559Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,565Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,590Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=5fd790e2-6242-40c9-ad54-29109e5839cc, invocation_id=7b848268-0435-46ee-83a7-26368277e1cf, invocation_timestamp=2023-12-12T06:58:24.069Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7b848268-0435-46ee-83a7-26368277e1cf, session_timestamp=2023-12-12T06:58:24.069Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,626Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=71c12041-d354-453a-8a1f-cd5c74ba5bef, invocation_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, invocation_timestamp=2023-12-12T06:58:23.837Z, origin=Only For Testing, session_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, session_timestamp=2023-12-12T06:58:23.837Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,626Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=71c12041-d354-453a-8a1f-cd5c74ba5bef, invocation_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, invocation_timestamp=2023-12-12T06:58:23.837Z, origin=Only For Testing, session_id=f0012a3c-54ff-436a-8d61-8b2ce3a2a3fb, session_timestamp=2023-12-12T06:58:23.837Z, thread-id=1407, tx_id=3A19DB9EB36D01FA2FD53B3B5A248B35087DB0F48748A60FF68FEAE7288D59A1}
[INFO ] 2023-12-12T06:58:24,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:24,658Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T06:58:24,687Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:24,687Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:24,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:24,695Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T06:58:24,709Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:24,709Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:24,710Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:24,714Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T06:58:24,726Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:24,726Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:24,927Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/0/cordapps] {}
[INFO ] 2023-12-12T06:58:24,928Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:24,929Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:24,978Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:25,009Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:25,010Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:25,011Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:25,011Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:25,026Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:25,026Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:25,035Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:25,035Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:25,035Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:25,047Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:24.732Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:25,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:25,535Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:25,535Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:25,833Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T06:58:25,843Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:25,846Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:25,846Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:25,881Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843) {}
[INFO ] 2023-12-12T06:58:25,898Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:25,899Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:25,899Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:25,931Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:25,931Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:25,962Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:25,970Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T06:58:25,995Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843) {}
[INFO ] 2023-12-12T06:58:25,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:25,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:25,996Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:25,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:25,996Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:26,014Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/1/cordapps] {}
[INFO ] 2023-12-12T06:58:26,015Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:26,018Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:26,052Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:26,113Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:26,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:26,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:26,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:26,201Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:26,208Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:26,233Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:26,233Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:26,233Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:26,246Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:24.732Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:26,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:26,729Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:26,730Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:27,004Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:27,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:27,031Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:27,031Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:27,060Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027) {}
[INFO ] 2023-12-12T06:58:27,070Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:27,071Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:27,071Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:27,105Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:27,105Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:27,154Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:27,185Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027) {}
[INFO ] 2023-12-12T06:58:27,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:27,193Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:27,193Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:27,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:27,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:27,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:27,213Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:27,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:27,213Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:27,225Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/2/cordapps] {}
[INFO ] 2023-12-12T06:58:27,225Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T06:58:27,226Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T06:58:27,256Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-065824.732-37E184F54CC90C85/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T06:58:27,277Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:27,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T06:58:27,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T06:58:27,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T06:58:27,328Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T06:58:27,328Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV, alias: identity-private-key {}
[INFO ] 2023-12-12T06:58:27,337Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T06:58:27,337Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T06:58:27,337Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:27,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T06:58:24.732Z
      epoch=1
  } {}
[INFO ] 2023-12-12T06:58:27,803Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T06:58:27,809Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:27,810Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:28,123Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T06:58:28,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T06:58:28,156Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:28,195Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148) {}
[INFO ] 2023-12-12T06:58:28,211Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T06:58:28,213Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T06:58:28,214Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T06:58:28,261Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,261Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:28,333Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E211947768214FC7A16B3A5AEA125A04686CEA86FBDC867435DC04C278A48965 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T06:58:28,372Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148) {}
[INFO ] 2023-12-12T06:58:28,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T06:58:28,382Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702364305843), owningKey=DLCTeE4YKTxetnWa5dC9KirGv92Fu9bcW66k79rB6EmcBr {}
[INFO ] 2023-12-12T06:58:28,382Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T06:58:28,399Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,399Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:28,411Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702364307027), owningKey=DLFLM8ad8AWSA5Gm83igbCrQqZ1x2JfusqTVqWZooihg2U {}
[INFO ] 2023-12-12T06:58:28,411Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:28,422Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,422Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T06:58:28,429Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,429Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T06:58:28,429Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702364308148), owningKey=DL3LVT1uBwchkJMVDxFEUEzbagEQcKj5eX1kEVgde4V4DV {}
[INFO ] 2023-12-12T06:58:28,429Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T06:58:28,431Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:28,431Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T06:58:28,431Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T06:58:28,431Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T06:58:28,702Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:28,749Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:28,939Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a323567b-9fc0-4776-a7e3-89910189758e, invocation_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, invocation_timestamp=2023-12-12T06:58:28.433Z, origin=Only For Testing, session_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, session_timestamp=2023-12-12T06:58:28.433Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:28,939Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a323567b-9fc0-4776-a7e3-89910189758e, invocation_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, invocation_timestamp=2023-12-12T06:58:28.433Z, origin=Only For Testing, session_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, session_timestamp=2023-12-12T06:58:28.433Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:28,979Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a323567b-9fc0-4776-a7e3-89910189758e, invocation_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, invocation_timestamp=2023-12-12T06:58:28.433Z, origin=Only For Testing, session_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, session_timestamp=2023-12-12T06:58:28.433Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,001Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,012Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,016Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,027Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=de61fb3c-34cb-4d79-b881-c3555b028625, invocation_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, invocation_timestamp=2023-12-12T06:58:28.660Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23c2ccbb-9799-4bfd-9039-7b61d95b24f7, session_timestamp=2023-12-12T06:58:28.660Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,044Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a323567b-9fc0-4776-a7e3-89910189758e, invocation_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, invocation_timestamp=2023-12-12T06:58:28.433Z, origin=Only For Testing, session_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, session_timestamp=2023-12-12T06:58:28.433Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,044Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a323567b-9fc0-4776-a7e3-89910189758e, invocation_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, invocation_timestamp=2023-12-12T06:58:28.433Z, origin=Only For Testing, session_id=5aaabb3d-f111-4bad-8c4a-b26d36a311fa, session_timestamp=2023-12-12T06:58:28.433Z, thread-id=1687, tx_id=10CC2119CFB43682BEACABB810D3C81FD31D2651D390E992CF14CD9DE4546760}
[INFO ] 2023-12-12T06:58:29,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:29,159Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T06:58:29,185Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:29,185Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:29,190Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:29,191Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T06:58:29,202Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:29,202Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T06:58:29,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T06:58:29,214Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T06:58:29,226Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T06:58:29,226Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:06:06,427Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-12-12T10:06:06,995Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T10:06:10,642Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T10:06:12,155Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-12-12T10:06:12,214Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-12-12T10:06:12,217Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T10:06:13,025Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:13,037Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-12-12T10:06:13,765Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:13,765Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:13,766Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-12-12T10:06:14,015Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:14,036Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T10:06:15,220Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-12-12T10:06:16,191Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T10:06:16,192Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T10:06:16,298Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T10:06:16,298Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-12-12T10:06:16,298Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-12-12T10:06:18,797Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:18,798Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-12-12T10:06:19,203Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:19,203Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-12-12T10:06:19,311Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:19,311Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-12-12T10:06:19,628Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-12-12T10:06:19,628Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:19,811Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:19,834Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:19,835Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:19,835Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:19,860Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:19,873Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:19,873Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:19,873Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:19,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:19,935Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:19,948Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:19,949Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,057Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:20,083Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,083Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:20,083Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,095Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-12-12T10:06:20,266Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,266Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T10:06:20,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,938Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-12-12T10:06:20,938Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:20,974Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:20,974Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,009Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,009Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,034Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,059Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-12-12T10:06:21,183Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,183Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-12-12T10:06:21,218Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,240Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,240Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T10:06:21,253Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,253Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-12-12T10:06:21,278Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,278Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-12-12T10:06:21,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,302Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:21,313Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,313Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:21,314Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,314Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-12-12T10:06:21,354Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,354Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T10:06:21,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,366Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-12-12T10:06:21,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,378Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-12-12T10:06:21,379Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-12-12T10:06:21,379Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,391Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-12-12T10:06:21,391Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,391Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-12-12T10:06:21,404Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-12-12T10:06:21,404Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,416Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-12-12T10:06:21,512Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,512Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-12-12T10:06:21,536Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-12-12T10:06:21,560Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-12-12T10:06:21,584Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-12-12T10:06:21,597Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:21,597Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-12-12T10:06:21,597Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-12-12T10:06:21,629Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T10:06:21,674Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-12-12T10:06:21,674Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-12-12T10:06:21,714Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-12-12T10:06:33,743Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:06:33,759Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:06:33,886Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:06:34,233Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:06:36,858Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:06:37,183Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:06:37,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:06:37,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:06:37,331Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:06:37,338Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1, alias: identity-private-key {}
[INFO ] 2023-12-12T10:06:37,618Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:06:37,620Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:06:37,621Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:06:37,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:06:03.574Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:06:47,110Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:06:47,254Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:06:47,272Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:06:53,970Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:06:55,470Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:06:55,534Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:06:55,534Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:06:56,017Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470) {}
[INFO ] 2023-12-12T10:06:56,159Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:06:56,201Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:06:56,208Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:06:56,345Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:06:56,346Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:06:56,887Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:06:56,908Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:06:58,941Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470) {}
[INFO ] 2023-12-12T10:06:58,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:06:58,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:06:58,965Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:06:58,967Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:06:58,967Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:06:59,099Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:06:59,102Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:06:59,112Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:06:59,230Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:06:59,402Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:06:59,406Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:06:59,409Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:06:59,409Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:06:59,529Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:06:59,530Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr, alias: identity-private-key {}
[INFO ] 2023-12-12T10:06:59,560Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:06:59,560Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:06:59,560Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:06:59,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:06:03.574Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:01,047Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:01,053Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:01,053Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:01,776Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:01,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:01,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:01,816Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:01,862Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794) {}
[INFO ] 2023-12-12T10:07:01,884Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:01,885Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:01,885Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:01,947Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:01,948Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:02,055Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:02,143Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794) {}
[INFO ] 2023-12-12T10:07:02,144Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:02,158Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:07:02,158Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:02,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:02,181Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:02,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:02,203Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:02,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:02,203Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:02,234Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:02,240Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:02,245Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:02,315Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100603.774-8F3BA893089977CA/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:02,402Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:02,410Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:02,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:02,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:02,593Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:02,594Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:02,633Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:02,633Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:02,633Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:02,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:06:03.574Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:03,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:03,563Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:03,563Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:04,127Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:04,142Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:04,149Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,149Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:04,174Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142) {}
[INFO ] 2023-12-12T10:07:04,259Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:04,261Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:04,261Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:04,347Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,347Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:04,439Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:04,544Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142) {}
[INFO ] 2023-12-12T10:07:04,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:04,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375615470), owningKey=DLC5riyKW8AKeUvCVXHAnf4ixVvvj11DyuN3b1icNJC3R1 {}
[INFO ] 2023-12-12T10:07:04,584Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:04,629Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,629Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:04,678Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375621794), owningKey=DL2Ur6dJWKCkXKPUB5h4pezRGiJnVhjYqPPHewwmk4Ccpr {}
[INFO ] 2023-12-12T10:07:04,678Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:04,696Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,696Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:04,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,707Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:04,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375624142), owningKey=DL9ZLt233cu3rzEcT9dJBUUtF3uZZEvoK88rujtDMJNV9s {}
[INFO ] 2023-12-12T10:07:04,707Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:04,726Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:04,726Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:04,736Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:04,737Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:05,587Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302}
[WARN ] 2023-12-12T10:07:05,587Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302}
[INFO ] 2023-12-12T10:07:07,303Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:07,428Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:07,807Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:07,807Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,043Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,193Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,232Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,246Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,273Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=114c36fb-c84b-4fac-844a-4edf87f53d97, invocation_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, invocation_timestamp=2023-12-12T10:07:07.141Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fc9982d7-b69b-4ce2-9a5d-97fcc867fff5, session_timestamp=2023-12-12T10:07:07.141Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,383Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,383Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4476fc1f-c26d-4d5c-aad2-917e9b74c255, invocation_id=4db90555-394b-45d6-88cf-3f6b8847aadf, invocation_timestamp=2023-12-12T10:07:04.851Z, origin=Only For Testing, session_id=4db90555-394b-45d6-88cf-3f6b8847aadf, session_timestamp=2023-12-12T10:07:04.851Z, thread-id=302, tx_id=6A5AA62E7057AF855BA965FD42DBEFC638D2CEB2A84645C64BDAFE2CF2BFC309}
[INFO ] 2023-12-12T10:07:08,430Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:08,458Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-12-12T10:07:08,515Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:08,515Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:08,524Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:08,528Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-12-12T10:07:08,558Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:08,558Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:08,559Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:08,562Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-12-12T10:07:08,598Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:08,598Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:09,021Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:07:09,025Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:09,028Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:09,105Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:09,167Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:09,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:09,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:09,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:09,198Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:09,199Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:09,207Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:09,207Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:09,207Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:09,226Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:08.614Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:10,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:10,207Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:10,208Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:10,790Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:10,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:10,810Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:10,810Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:10,857Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805) {}
[INFO ] 2023-12-12T10:07:10,876Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:10,877Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:10,877Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:10,917Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:10,918Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:10,999Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:11,009Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:07:11,051Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805) {}
[INFO ] 2023-12-12T10:07:11,053Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:11,054Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:11,054Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:11,054Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:11,054Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:11,072Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:07:11,074Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:11,076Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:11,145Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:11,227Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:11,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:11,233Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:11,233Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:11,333Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:11,334Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:11,358Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:11,358Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:11,358Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:11,369Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:08.614Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:11,928Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:11,930Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:11,931Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:12,369Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:12,390Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:12,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:12,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:12,428Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390) {}
[INFO ] 2023-12-12T10:07:12,447Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:12,458Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:12,458Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:12,496Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:12,497Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:12,566Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:12,618Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390) {}
[INFO ] 2023-12-12T10:07:12,619Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:12,630Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:12,630Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:12,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:12,646Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:12,660Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:12,660Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:12,660Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:12,660Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:12,674Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:12,675Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:12,678Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:12,730Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100708.614-B4F0625E0FDCC4A4/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:12,835Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:12,842Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:12,847Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:12,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:12,962Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:12,964Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:13,000Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:13,000Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:13,000Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:13,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:08.614Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:13,642Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:13,645Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:13,646Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:14,032Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:14,047Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:14,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:14,077Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047) {}
[INFO ] 2023-12-12T10:07:14,086Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:14,087Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:14,087Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:14,116Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,116Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:14,176Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:14,225Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047) {}
[INFO ] 2023-12-12T10:07:14,225Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:14,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375630805), owningKey=DL8yaRoDMuE4ymPQuzfL3QJSRqbS7u15z2qz1cpfUf3XKU {}
[INFO ] 2023-12-12T10:07:14,235Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:14,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,256Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:14,283Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375632390), owningKey=DL98t3EJV5ijemvr6fi1oJNpB8CFxdP9NaAH4aY3aeH7zP {}
[INFO ] 2023-12-12T10:07:14,283Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:14,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,305Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:14,321Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,321Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:14,321Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375634047), owningKey=DLC822xAZNPfUmydzzox6NzHVPwNSBbWtUaMtf6Pp2c9Ab {}
[INFO ] 2023-12-12T10:07:14,321Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:14,323Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:14,323Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:14,324Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:14,324Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-12-12T10:07:14,565Z [Mock network] internal.Verifier. - Error validating transaction BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-12-12T10:07:14,587Z [Mock network] internal.Verifier. - Error validating transaction BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-12-12T10:07:14,587Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
[INFO ] 2023-12-12T10:07:14,651Z [Mock network] statemachine.StaffedFlowHospital. - Flow [25520636-95e0-405c-ba66-94448e9b80cc] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Invocation, sessionId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=948ACEC1D1C24DA844D34DE7B289A42B1FCCB6690379F799C9241C59F2DB6433), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F8D739B2C3926683C0A37A10995F4D0F19F98A82BA101B04A979E48AC98A1455), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@579f37ef, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=b0d9e867-06e0-49a8-8617-cbd56241e432, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@446a648c[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
[INFO ] 2023-12-12T10:07:14,656Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T10:07:14,660Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T10:07:14,685Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [25520636-95e0-405c-ba66-94448e9b80cc] errored, dumping all transitions:

 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.354Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[25520636-95e0-405c-ba66-94448e9b80cc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Invocation, sessionId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=948ACEC1D1C24DA844D34DE7B289A42B1FCCB6690379F799C9241C59F2DB6433), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F8D739B2C3926683C0A37A10995F4D0F19F98A82BA101B04A979E48AC98A1455), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83])
    SignalFlowHasStarted(flowId=[25520636-95e0-405c-ba66-94448e9b80cc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.664Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-2357823907746112148, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T10:07:14.333Z
    2023-12-12T10:07:14.598Z
isFlowResumed: 
    true
    false


 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.671Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.673Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T10:07:14.598Z
    2023-12-12T10:07:14.673Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
[WARN ] 2023-12-12T10:07:14,685Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [25520636-95e0-405c-ba66-94448e9b80cc] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T10:07:14,689Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-12-12T10:07:14,769Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [25520636-95e0-405c-ba66-94448e9b80cc] errored, dumping all transitions:

 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.354Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[25520636-95e0-405c-ba66-94448e9b80cc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Invocation, sessionId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=948ACEC1D1C24DA844D34DE7B289A42B1FCCB6690379F799C9241C59F2DB6433), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F8D739B2C3926683C0A37A10995F4D0F19F98A82BA101B04A979E48AC98A1455), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83])
    SignalFlowHasStarted(flowId=[25520636-95e0-405c-ba66-94448e9b80cc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6c7d3c83]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.664Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-2357823907746112148, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-12-12T10:07:14.333Z
    2023-12-12T10:07:14.598Z
isFlowResumed: 
    true
    false


 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.671Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.673Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-12-12T10:07:14.598Z
    2023-12-12T10:07:14.673Z


 --- Transition of flow [25520636-95e0-405c-ba66-94448e9b80cc] ---
  Timestamp: 2023-12-12T10:07:14.754Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7, errorId=-2357823907746112148)], sessions=[], senderUUID=b0d9e867-06e0-49a8-8617-cbd56241e432)
    CreateTransaction
    RemoveCheckpoint(id=[25520636-95e0-405c-ba66-94448e9b80cc], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=25520636-95e0-405c-ba66-94448e9b80cc)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[25520636-95e0-405c-ba66-94448e9b80cc], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-2357823907746112148, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Invocation, sessionId=31167803-41d9-4241-9c22-dccf46156726, timestamp: 2023-12-12T10:07:14.328Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=948ACEC1D1C24DA844D34DE7B289A42B1FCCB6690379F799C9241C59F2DB6433), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@152d79d, errorState=Errored(errors=[FlowError(errorId=-2357823907746112148, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@579f37ef, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=b0d9e867-06e0-49a8-8617-cbd56241e432, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@446a648c[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=F8D739B2C3926683C0A37A10995F4D0F19F98A82BA101B04A979E48AC98A1455)
    net.corda.node.services.statemachine.FlowState$Finished@152d79d
checkpoint.timestamp: 
    2023-12-12T10:07:14.673Z
    2023-12-12T10:07:14.688Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
[WARN ] 2023-12-12T10:07:14,769Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [25520636-95e0-405c-ba66-94448e9b80cc] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=25520636-95e0-405c-ba66-94448e9b80cc, invocation_id=31167803-41d9-4241-9c22-dccf46156726, invocation_timestamp=2023-12-12T10:07:14.328Z, origin=Only For Testing, session_id=31167803-41d9-4241-9c22-dccf46156726, session_timestamp=2023-12-12T10:07:14.328Z, thread-id=584}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: BE0565891FDB58C79B94450E40CFEC6FB1A1E4860506A377034805B3E82541C7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-12-12T10:07:14,802Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:14,812Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-12-12T10:07:14,857Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:14,857Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:14,864Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:14,868Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-12-12T10:07:14,896Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:14,896Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:14,898Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:14,902Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-12-12T10:07:14,918Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:14,918Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:15,210Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100714.926-E5554291226ED231/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:07:15,216Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:15,216Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:15,283Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:15,336Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:15,338Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:15,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:15,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:15,357Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:15,357Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:15,370Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:15,370Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:15,371Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:15,384Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:14.925Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:16,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:16,170Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:16,170Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:16,593Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:16,606Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:16,613Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:16,613Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:16,665Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606) {}
[INFO ] 2023-12-12T10:07:16,684Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:16,685Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:16,685Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:16,721Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:16,721Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:16,784Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:16,792Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:07:16,838Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606) {}
[INFO ] 2023-12-12T10:07:16,839Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:16,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:16,840Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:16,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:16,840Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:16,863Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100714.926-E5554291226ED231/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:07:16,865Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:16,867Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:16,921Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:17,000Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:17,004Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:17,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:17,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:17,110Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:17,111Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:17,134Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:17,135Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:17,135Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:17,153Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:14.925Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:17,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:17,941Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:17,941Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:18,306Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:18,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:18,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:18,331Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:18,367Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322) {}
[INFO ] 2023-12-12T10:07:18,381Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:18,383Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:18,383Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:18,424Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:18,425Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:18,509Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:18,546Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322) {}
[INFO ] 2023-12-12T10:07:18,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:18,552Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:18,552Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:18,569Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:18,569Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:18,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:18,584Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:18,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:18,585Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:18,600Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100714.926-E5554291226ED231/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:18,605Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:18,608Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:18,659Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100714.926-E5554291226ED231/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:18,724Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:18,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:18,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:18,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:18,835Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:18,835Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:18,843Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:18,843Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:18,843Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:18,849Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:14.925Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:19,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:19,575Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:19,576Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:20,033Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:20,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:20,073Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,073Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:20,108Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058) {}
[INFO ] 2023-12-12T10:07:20,124Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:20,126Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:20,126Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:20,174Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,174Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:20,233Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:20,277Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058) {}
[INFO ] 2023-12-12T10:07:20,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:20,287Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375636606), owningKey=DL2pL3efEXxHxNKHxYopecGYDARZscodQ7sJfFXYm61VFb {}
[INFO ] 2023-12-12T10:07:20,287Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:20,312Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,312Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:20,324Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375638322), owningKey=DL6ZKASBLAgbu1M3dWmUtMoy66q1RPi4TVbhYj4wCssvjZ {}
[INFO ] 2023-12-12T10:07:20,324Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:20,338Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,338Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:20,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,352Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:20,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375640058), owningKey=DL7drm88TdLeX2i882eBGKyH3n4Y7p2W4MiK2unsCRQU8q {}
[INFO ] 2023-12-12T10:07:20,353Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:20,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:20,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:20,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:20,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:20,719Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:20,765Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,046Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2c653c0b-fe20-421e-8c2d-b6a56a0cac72, invocation_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, invocation_timestamp=2023-12-12T10:07:20.355Z, origin=Only For Testing, session_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, session_timestamp=2023-12-12T10:07:20.355Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,047Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2c653c0b-fe20-421e-8c2d-b6a56a0cac72, invocation_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, invocation_timestamp=2023-12-12T10:07:20.355Z, origin=Only For Testing, session_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, session_timestamp=2023-12-12T10:07:20.355Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,139Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2c653c0b-fe20-421e-8c2d-b6a56a0cac72, invocation_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, invocation_timestamp=2023-12-12T10:07:20.355Z, origin=Only For Testing, session_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, session_timestamp=2023-12-12T10:07:20.355Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,193Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,216Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,223Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,245Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=2bd3c5bf-a7d9-477c-b3a2-9465649ede89, invocation_id=ac729928-ed46-4180-aaf7-5e64d2368408, invocation_timestamp=2023-12-12T10:07:20.670Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ac729928-ed46-4180-aaf7-5e64d2368408, session_timestamp=2023-12-12T10:07:20.670Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,289Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2c653c0b-fe20-421e-8c2d-b6a56a0cac72, invocation_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, invocation_timestamp=2023-12-12T10:07:20.355Z, origin=Only For Testing, session_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, session_timestamp=2023-12-12T10:07:20.355Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,289Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=2c653c0b-fe20-421e-8c2d-b6a56a0cac72, invocation_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, invocation_timestamp=2023-12-12T10:07:20.355Z, origin=Only For Testing, session_id=91889378-eb9b-4e68-b0ef-fd5e3239dc5e, session_timestamp=2023-12-12T10:07:20.355Z, thread-id=847, tx_id=C8AFCA09B98CE39278D92078478FA615BB2D784E7766B85B3BE7F472B25B18A5}
[INFO ] 2023-12-12T10:07:21,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:21,327Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-12-12T10:07:21,357Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:21,358Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:21,365Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:21,368Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-12-12T10:07:21,391Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:21,391Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:21,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:21,394Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-12-12T10:07:21,408Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:21,408Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:21,722Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:07:21,734Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:21,737Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:21,795Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:21,852Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:21,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:21,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:21,856Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:21,873Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:21,874Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:21,885Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:21,885Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:21,885Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:21,901Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:21.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:22,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:22,535Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:22,535Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:22,966Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:22,979Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:22,984Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:22,984Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:23,025Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979) {}
[INFO ] 2023-12-12T10:07:23,042Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:23,043Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:23,043Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:23,075Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:23,075Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:23,134Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:23,146Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:07:23,183Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979) {}
[INFO ] 2023-12-12T10:07:23,184Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:23,185Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:23,185Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:23,187Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:23,187Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:23,205Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:07:23,206Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:23,208Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:23,256Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:23,322Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:23,328Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:23,331Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:23,332Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:23,407Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:23,408Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:23,430Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:23,430Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:23,430Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:23,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:21.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:23,920Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:23,923Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:23,924Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:24,290Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:24,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:24,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:24,311Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:24,330Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308) {}
[INFO ] 2023-12-12T10:07:24,337Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:24,338Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:24,338Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:24,361Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:24,361Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:24,423Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:24,455Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308) {}
[INFO ] 2023-12-12T10:07:24,455Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:24,457Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:24,457Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:24,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:24,471Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:24,483Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:24,483Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:24,483Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:24,483Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:24,495Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:24,496Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:24,497Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:24,532Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100721.414-1D68B5C80FDE5108/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:24,556Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:24,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:24,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:24,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:24,645Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:24,645Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:24,651Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:24,651Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:24,651Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:24,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:21.413Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:25,240Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:25,247Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:25,248Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:25,640Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:25,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:25,696Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:25,696Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:25,751Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687) {}
[INFO ] 2023-12-12T10:07:25,780Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:25,786Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:25,786Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:25,841Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:25,841Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:25,947Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:26,025Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687) {}
[INFO ] 2023-12-12T10:07:26,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:26,037Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375642979), owningKey=DL2BBzi5SLvuAyVhaqe5agWbhdV1rAKFNeKRNvYHYxfg2s {}
[INFO ] 2023-12-12T10:07:26,037Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:26,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:26,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:26,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375644308), owningKey=DLJ6JwGg6z6rvqsp7EE7ySV82bSV2oUL4DMzdWU5Hc3e7i {}
[INFO ] 2023-12-12T10:07:26,080Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:26,099Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:26,099Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:26,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:26,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:26,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375645687), owningKey=DLHBfoPmbx6BoNJwDdUiDKnEPEgsJFrJkz48RZcsZQVWzo {}
[INFO ] 2023-12-12T10:07:26,111Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:26,112Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:26,112Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:26,112Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:26,112Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:26,411Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,442Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,617Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=ba2c3387-a9fb-48ca-85e0-60aef2eb4e06, invocation_id=56f7e37a-0827-4f7b-b077-2b286d743a39, invocation_timestamp=2023-12-12T10:07:26.114Z, origin=Only For Testing, session_id=56f7e37a-0827-4f7b-b077-2b286d743a39, session_timestamp=2023-12-12T10:07:26.114Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,617Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=ba2c3387-a9fb-48ca-85e0-60aef2eb4e06, invocation_id=56f7e37a-0827-4f7b-b077-2b286d743a39, invocation_timestamp=2023-12-12T10:07:26.114Z, origin=Only For Testing, session_id=56f7e37a-0827-4f7b-b077-2b286d743a39, session_timestamp=2023-12-12T10:07:26.114Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,659Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=ba2c3387-a9fb-48ca-85e0-60aef2eb4e06, invocation_id=56f7e37a-0827-4f7b-b077-2b286d743a39, invocation_timestamp=2023-12-12T10:07:26.114Z, origin=Only For Testing, session_id=56f7e37a-0827-4f7b-b077-2b286d743a39, session_timestamp=2023-12-12T10:07:26.114Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,685Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,694Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,698Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,719Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=4321e72a-6ba8-46b9-a88f-5027df6a36a5, invocation_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, invocation_timestamp=2023-12-12T10:07:26.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2311b8a0-6749-4efd-a4e7-183c3f4abde8, session_timestamp=2023-12-12T10:07:26.369Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,753Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=ba2c3387-a9fb-48ca-85e0-60aef2eb4e06, invocation_id=56f7e37a-0827-4f7b-b077-2b286d743a39, invocation_timestamp=2023-12-12T10:07:26.114Z, origin=Only For Testing, session_id=56f7e37a-0827-4f7b-b077-2b286d743a39, session_timestamp=2023-12-12T10:07:26.114Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,753Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=ba2c3387-a9fb-48ca-85e0-60aef2eb4e06, invocation_id=56f7e37a-0827-4f7b-b077-2b286d743a39, invocation_timestamp=2023-12-12T10:07:26.114Z, origin=Only For Testing, session_id=56f7e37a-0827-4f7b-b077-2b286d743a39, session_timestamp=2023-12-12T10:07:26.114Z, thread-id=1127, tx_id=E1EC41EEC7AEBD47283CCACB73B850F3195E6F37E3A053E318E39CCD473C5AFC}
[INFO ] 2023-12-12T10:07:26,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:26,808Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-12-12T10:07:26,838Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:26,838Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:26,841Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:26,843Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-12-12T10:07:26,853Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:26,853Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:26,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:26,857Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-12-12T10:07:26,868Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:26,869Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:27,140Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:07:27,147Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:27,148Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:27,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:27,320Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:27,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:27,327Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:27,327Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:27,349Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:27,351Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:27,376Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:27,376Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:27,376Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:27,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:26.875Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:27,975Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:27,980Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:27,981Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:28,334Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:28,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:28,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:28,350Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:28,416Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344) {}
[INFO ] 2023-12-12T10:07:28,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:28,440Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:28,440Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:28,478Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:28,479Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:28,535Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:28,547Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:07:28,582Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344) {}
[INFO ] 2023-12-12T10:07:28,583Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:28,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:28,583Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:28,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:28,583Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:28,599Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:07:28,600Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:28,601Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:28,644Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:28,673Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:28,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:28,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:28,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:28,777Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:28,777Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:28,782Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:28,782Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:28,782Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:28,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:26.875Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:29,141Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:29,143Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:29,143Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:29,519Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:29,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:29,553Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:29,553Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:29,579Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543) {}
[INFO ] 2023-12-12T10:07:29,601Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:29,603Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:29,603Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:29,651Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:29,651Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:29,718Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:29,761Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543) {}
[INFO ] 2023-12-12T10:07:29,761Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:29,766Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:29,766Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:29,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:29,781Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:29,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:29,817Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:29,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:29,817Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:29,840Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:29,842Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:29,844Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:29,920Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100726.875-8F2C815E6D3854B5/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:29,976Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:29,978Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:29,980Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:29,980Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:30,069Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:30,070Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:30,078Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:30,078Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:30,079Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:30,090Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:26.875Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:30,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:30,503Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:30,504Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:30,847Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:30,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:30,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:30,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:30,887Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865) {}
[INFO ] 2023-12-12T10:07:30,896Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:30,896Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:30,896Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:30,928Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:30,929Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:30,956Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:30,973Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865) {}
[INFO ] 2023-12-12T10:07:30,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:30,976Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375648344), owningKey=DLBiAjQS77wa7iw6coUGDT17nqzwyWNJM5E1G2v6mxJvDi {}
[INFO ] 2023-12-12T10:07:30,976Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:30,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:30,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:31,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375649543), owningKey=DL691ZVspRwr9CzbjsuopPnV65qDeiytTXsW81rpZR1qaF {}
[INFO ] 2023-12-12T10:07:31,008Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:31,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:31,027Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375650865), owningKey=DLAmkWxztVGsmTsivDtQJ7uwqNsdiPcqqftyzGzUWi6BfQ {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:31,040Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:31,040Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:31,040Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:31,324Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,359Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,569Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b51be077-8a93-4f81-9527-5cf8e1747999, invocation_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, invocation_timestamp=2023-12-12T10:07:31.042Z, origin=Only For Testing, session_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, session_timestamp=2023-12-12T10:07:31.042Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,570Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b51be077-8a93-4f81-9527-5cf8e1747999, invocation_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, invocation_timestamp=2023-12-12T10:07:31.042Z, origin=Only For Testing, session_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, session_timestamp=2023-12-12T10:07:31.042Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,636Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b51be077-8a93-4f81-9527-5cf8e1747999, invocation_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, invocation_timestamp=2023-12-12T10:07:31.042Z, origin=Only For Testing, session_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, session_timestamp=2023-12-12T10:07:31.042Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,672Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,688Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,692Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,710Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=cce6905b-9f48-4829-a214-2366a3311308, invocation_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, invocation_timestamp=2023-12-12T10:07:31.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=facb6ef3-b0aa-4822-ad20-586d1076d7ea, session_timestamp=2023-12-12T10:07:31.277Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,738Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b51be077-8a93-4f81-9527-5cf8e1747999, invocation_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, invocation_timestamp=2023-12-12T10:07:31.042Z, origin=Only For Testing, session_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, session_timestamp=2023-12-12T10:07:31.042Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,738Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b51be077-8a93-4f81-9527-5cf8e1747999, invocation_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, invocation_timestamp=2023-12-12T10:07:31.042Z, origin=Only For Testing, session_id=ee5decd0-3fa6-4a81-9c6c-cd1277893bd1, session_timestamp=2023-12-12T10:07:31.042Z, thread-id=1407, tx_id=8AECD9E4D388CC7B122FB4CBA281355B1E426119209E03424D3881BCA6DB5BB4}
[INFO ] 2023-12-12T10:07:31,753Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:31,760Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-12-12T10:07:31,786Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:31,786Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:31,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:31,794Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-12-12T10:07:31,809Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:31,809Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:31,810Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:31,813Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-12-12T10:07:31,828Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:31,828Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:32,062Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/0/cordapps] {}
[INFO ] 2023-12-12T10:07:32,064Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:32,065Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:32,103Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:32,152Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:32,153Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:32,154Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:32,154Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:32,185Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:32,185Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:32,197Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:32,197Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:32,197Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:32,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:31.832Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:32,947Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:32,955Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:32,956Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:33,281Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-12-12T10:07:33,293Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:33,308Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:33,308Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:33,382Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293) {}
[INFO ] 2023-12-12T10:07:33,406Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:33,408Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:33,408Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:33,478Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:33,478Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:33,537Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:33,548Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-12-12T10:07:33,581Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293) {}
[INFO ] 2023-12-12T10:07:33,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:33,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:33,581Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:33,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:33,582Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:33,596Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/1/cordapps] {}
[INFO ] 2023-12-12T10:07:33,597Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:33,598Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:33,636Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:33,677Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:33,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:33,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:33,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:33,756Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:33,756Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:33,762Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:33,762Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:33,762Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:33,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:31.832Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:34,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:34,108Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:34,108Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:34,317Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:34,323Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:34,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:34,328Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:34,338Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323) {}
[INFO ] 2023-12-12T10:07:34,346Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:34,346Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:34,346Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:34,389Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:34,389Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:34,415Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:34,458Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323) {}
[INFO ] 2023-12-12T10:07:34,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:34,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:34,463Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:34,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:34,486Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:34,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:34,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:34,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:34,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:34,515Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/2/cordapps] {}
[INFO ] 2023-12-12T10:07:34,517Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-12-12T10:07:34,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-12-12T10:07:34,562Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/apoorva.agnihotri/Documents/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231212-100731.832-091AFE52A9E572E2/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-12-12T10:07:34,623Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:34,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-12-12T10:07:34,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-12-12T10:07:34,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-12-12T10:07:34,744Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-12-12T10:07:34,745Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip, alias: identity-private-key {}
[INFO ] 2023-12-12T10:07:34,774Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomConsumeFlow$ConsumeFlow to initiate net.corda.samples.example.flows.CustomConsumeFlow$CustomConsumeResponder (version 1) {}
[INFO ] 2023-12-12T10:07:34,774Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.CustomIssueFlow$IssueFlow to initiate net.corda.samples.example.flows.CustomIssueFlow$CustomIssueResponder (version 1) {}
[INFO ] 2023-12-12T10:07:34,774Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:34,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-12-12T10:07:31.832Z
      epoch=1
  } {}
[INFO ] 2023-12-12T10:07:35,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-12-12T10:07:35,480Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:35,481Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:35,817Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-12-12T10:07:35,844Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-12-12T10:07:35,852Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:35,852Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:35,886Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844) {}
[INFO ] 2023-12-12T10:07:35,902Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-12-12T10:07:35,904Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-12-12T10:07:35,904Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-12-12T10:07:35,948Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:35,948Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:36,002Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37EA6A75D2FC0B3FAADA410F4C62EE5DEF2D5E0B071E99C055640B2634EF3980 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-12-12T10:07:36,032Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844) {}
[INFO ] 2023-12-12T10:07:36,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-12-12T10:07:36,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1702375653293), owningKey=DLHmbR1c2pqvyV8pCXboNGk77DuTRbK5YnpWJZXCPgcG5o {}
[INFO ] 2023-12-12T10:07:36,042Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-12-12T10:07:36,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:36,056Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:36,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1702375654323), owningKey=DL9NA5czsYDNdL541H3hK5HqPxREuHAy7YRmYXk6Eg2BWF {}
[INFO ] 2023-12-12T10:07:36,071Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:36,085Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:36,085Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-12-12T10:07:36,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:36,094Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-12-12T10:07:36,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1702375655844), owningKey=DL8xsU6D4YHqEq6T9Pga97JJnCT6TGbvvxipYmJb24vLip {}
[INFO ] 2023-12-12T10:07:36,094Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-12-12T10:07:36,095Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:36,095Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-12-12T10:07:36,095Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-12-12T10:07:36,095Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-12-12T10:07:36,318Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,331Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,521Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=bd35c117-6838-47fc-97f9-725191eec288, invocation_id=5abb8504-0adf-42a0-adf0-10ac922b1631, invocation_timestamp=2023-12-12T10:07:36.097Z, origin=Only For Testing, session_id=5abb8504-0adf-42a0-adf0-10ac922b1631, session_timestamp=2023-12-12T10:07:36.097Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,521Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=bd35c117-6838-47fc-97f9-725191eec288, invocation_id=5abb8504-0adf-42a0-adf0-10ac922b1631, invocation_timestamp=2023-12-12T10:07:36.097Z, origin=Only For Testing, session_id=5abb8504-0adf-42a0-adf0-10ac922b1631, session_timestamp=2023-12-12T10:07:36.097Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,589Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=bd35c117-6838-47fc-97f9-725191eec288, invocation_id=5abb8504-0adf-42a0-adf0-10ac922b1631, invocation_timestamp=2023-12-12T10:07:36.097Z, origin=Only For Testing, session_id=5abb8504-0adf-42a0-adf0-10ac922b1631, session_timestamp=2023-12-12T10:07:36.097Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,630Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,644Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,649Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,667Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=7ad09279-63f5-4f9c-bfba-3e539fabfe37, invocation_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, invocation_timestamp=2023-12-12T10:07:36.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fec2eba2-5b90-44a5-956f-8510c2b938eb, session_timestamp=2023-12-12T10:07:36.297Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,693Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=bd35c117-6838-47fc-97f9-725191eec288, invocation_id=5abb8504-0adf-42a0-adf0-10ac922b1631, invocation_timestamp=2023-12-12T10:07:36.097Z, origin=Only For Testing, session_id=5abb8504-0adf-42a0-adf0-10ac922b1631, session_timestamp=2023-12-12T10:07:36.097Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,693Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=bd35c117-6838-47fc-97f9-725191eec288, invocation_id=5abb8504-0adf-42a0-adf0-10ac922b1631, invocation_timestamp=2023-12-12T10:07:36.097Z, origin=Only For Testing, session_id=5abb8504-0adf-42a0-adf0-10ac922b1631, session_timestamp=2023-12-12T10:07:36.097Z, thread-id=1687, tx_id=48128045E86E28DF1D5B6264548E31CE4B0920841BFD9D0946CEF8DD5706F415}
[INFO ] 2023-12-12T10:07:36,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:36,908Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-12-12T10:07:36,943Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:36,943Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:36,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:36,953Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-12-12T10:07:36,987Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:36,987Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-12-12T10:07:36,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-12-12T10:07:36,992Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-12-12T10:07:37,010Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-12-12T10:07:37,010Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
